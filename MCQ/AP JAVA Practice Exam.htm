
<!-- saved from url=(0069)https://www.tracy.k12.ca.us/sites/clunetta/Java/practice/practice.htm -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 6.0">
<meta name="ProgId" content="FrontPage.Editor.Document">

<title>AP JAVA Practice Exam</title>
<script language="JavaScript" src="./AP JAVA Practice Exam_files/setup.js"></script><style type="text/css"></style>
</head>

<body>
<p align="center"><font size="6">175 Multiple-Choice Questions in Java</font></p>
<p align="left">Below are 175 questions to help you prepare for taking the AP 
Computer Science A 
test. Click the "Score Test" button at the bottom of the page to see how well 
you did. You do <b>not</b> need to answer all the questions at one time—only 
the questions you answer will be scored.&nbsp; That way, you can practice taking 
smaller portions of the test, remembering where you left off each time.</p>
<div align="center">
	<table border="0" width="350" id="table7" style="border-collapse: collapse">
		<tbody><tr>
			<td align="center"><a href="https://www.tracy.k12.ca.us/sites/clunetta/Java/practice/practice.htm#2005">2005</a></td>
			<td align="center"><a href="https://www.tracy.k12.ca.us/sites/clunetta/Java/practice/practice.htm#2004">2004</a></td>
			<td align="center"><a href="https://www.tracy.k12.ca.us/sites/clunetta/Java/practice/practice.htm#2003">2003</a></td>
			<td align="center"><a href="https://www.tracy.k12.ca.us/sites/clunetta/Java/practice/practice.htm#2002">2002</a></td>
			<td align="center"><a href="https://www.tracy.k12.ca.us/sites/clunetta/Java/practice/practice.htm#2001">2001</a></td>
			<td align="center"><a href="https://www.tracy.k12.ca.us/sites/clunetta/Java/practice/practice.htm#2000">2000</a></td>
			<td align="center"><a href="https://www.tracy.k12.ca.us/sites/clunetta/Java/practice/practice.htm#1999">1999</a></td>
		</tr>
	</tbody></table>
</div>
<div align="center">
<form name="test">
<table border="0" width="100%" id="table1" style="border-collapse: collapse">
	<tbody><tr>
		<td colspan="3" bgcolor="#C0C0C0">
		<p align="center"><a name="2005"></a>2005</p></td>
	</tr>
	<tr>
		<td width="46">
		<p align="left">1.</p></td>
		<td colspan="2">What is the size of a <code>double</code> variable in 
		Java?</td>
	</tr>
	<tr>
		<td width="46"><div id="1_div" style="visibility: visible;"><img id="1_img" src="./AP JAVA Practice Exam_files/right.gif"></div></td>
		<td width="85" align="center">
			<p align="center">
			&nbsp;</p>
			</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q1"> 2 bytes</li>
				<li><input type="radio" value="b" name="q1"> 4 bytes</li>
				<li><input type="radio" value="c" name="q1"> 8 bytes</li>
				<li><input type="radio" value="d" name="q1"> It depends on the 
				compiler setting</li>
				<li><input type="radio" value="e" name="q1"> It depends on the 
				operating system</li>
				</ol>
		</td></tr>
	<tr>
		<td width="64" valign="top">
		<p align="left">2.</p></td>
		<td colspan="2">What is displayed by<blockquote>
			<p><code>System.out.println("1" + new 
		Integer(2) + 3);</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="64"><div id="2_div" style="visibility: visible;">
			<img id="2_img" src="./AP JAVA Practice Exam_files/right.gif"></div></td>
		<td width="85" align="center">
			<p align="center">
			&nbsp;</p>
			</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q2"> The statement has a 
				syntax error and won't compile</li>
				<li><input type="radio" value="b" name="q2"> 6</li>
				<li><input type="radio" value="c" name="q2"> 15</li>
				<li><input type="radio" value="d" name="q2"> 123</li>
				<li><input type="radio" value="e" name="q2">  ClassCastException</li>
				</ol>
		</td></tr>
	<tr>
		<td width="63" valign="top">
		<p align="left">3.</p></td>
		<td colspan="2">Which of the following best describes the set of all 
		pairs of values for <code>boolean</code> variables <i>a</i> and <i>b</i>, 
		such that<blockquote>
			<p><code>(!a &amp;&amp; b) == !(a || b)</code></p>
		</blockquote>
		<p>evaluates to <code>true</code>?</p>
		</td>
	</tr>
	<tr>
		<td width="63"><div id="3_div" style="visibility:hidden">
			<img id="3_img" src=""></div></td>
		<td width="85" align="center">
			<p align="center">
			&nbsp;</p>
			</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q3"> Empty set</li>
				<li><input type="radio" value="b" name="q3"> Only one pair:
				<code>a == true, b == false</code></li>
				<li><input type="radio" value="c" name="q3"> Two pairs in which
				<code>a == true</code></li>
				<li><input type="radio" value="d" name="q3"> Two pairs in which
				<code>a != b</code></li>
				<li><input type="radio" value="e" name="q3"> All four possible 
				combinations of values</li>
				</ol>
		</td></tr>
	<tr>
		<td width="64" valign="top">
		<p align="left">4. <font size="1">(AB)</font></p></td>
		<td colspan="2">When you try to compile <code>MyClass</code>, the java compiler gives 
		an error message<blockquote>
			<p><code>MyClass is not abstract and does not override abstract 
			method &lt;some method&gt; in java.util.Comparator</code></p>
		</blockquote>
		<p>Which of the following is <code>&lt;some method&gt;</code> in the error 
		message?</p>
		</td>
	</tr>
	<tr>
		<td width="64"><div id="4_div" style="visibility:hidden">
			<img id="4_img" src=""></div></td>
		<td width="85" align="center">
			<p align="center">
			&nbsp;</p>
			</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q4"> <code>
				equals(myClass)</code></li>
				<li><input type="radio" value="b" name="q4"> <code>
				compareTo(myClass)</code></li>
				<li><input type="radio" value="c" name="q4"> <code>
				compare(myClass, myClass)</code></li>
				<li><input type="radio" value="d" name="q4"> <code>
				compareTo(java.lang.Object)</code></li>
				<li><input type="radio" value="e" name="q4"> <code>
				compare(java.lang.Object, java.lang.Object)</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="64" valign="top">
		<p align="left">5.</p></td>
		<td colspan="2">Consider the following classes:<blockquote>
			<p><code>public class Year2005<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; public String toString() { return "2005"; }<br>
			}</code></p>
			<p><code>public class Test2005 extends Year2005<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; public void print()<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;missing statement&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		<p>Which of the following could replace <code>&lt;missing statement&gt;</code> 
		so that <code>Test2005</code> would compile with no errors and</p>
		<blockquote>
			<p><code>Test2005 test = new Test2005();<br>
			test.print();</code></p>
		</blockquote>
		<p>would display <code>2005</code>?</p>
		<p>I.&nbsp;&nbsp; <code>System.out.println(new Year2005());</code><br>
		II.&nbsp; <code>System.out.println(new Test2005());</code><br>
		III. <code>System.out.println(this);</code></p></td>
	</tr>
	<tr>
		<td width="64"><div id="5_div" style="visibility: visible;">
			<img id="5_img" src="./AP JAVA Practice Exam_files/right.gif"></div></td>
		<td width="85" align="center">
			<p align="center">
			&nbsp;</p>
			</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q5"> I only</li>
				<li><input type="radio" value="b" name="q5"> II only</li>
				<li><input type="radio" value="c" name="q5"> I and II</li>
				<li><input type="radio" value="d" name="q5"> II and III</li>
				<li><input type="radio" value="e" name="q5"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="53" valign="top">
		<p align="left">6.</p></td>
		<td colspan="2">What is the value of <code>a[1]</code> after the 
		following code is executed?<blockquote>
			<p><code>int[] a = {0, 2, 4, 1, 3};<br>
			for (int i = 0; i &lt; a.length; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; a[i] = a[(a[i] + 3) % a.length];</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="53"><div id="6_div" style="visibility: visible;">
			<img id="6_img" src="./AP JAVA Practice Exam_files/right.gif"></div></td>
		<td width="85" align="center">
			<p align="center">
			&nbsp;</p>
			</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q6"> 0</li>
				<li><input type="radio" value="b" name="q6"> 1</li>
				<li><input type="radio" value="c" name="q6"> 2</li>
				<li><input type="radio" value="d" name="q6"> 3</li>
				<li><input type="radio" value="e" name="q6"> 4</li>
				</ol>
		</td></tr>
	<tr>
		<td width="53" valign="top">
		<p align="left">7.</p></td>
		<td colspan="2">Consider the method<blockquote>
			<p><code>public String mystery(String s)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; String s1 = s.substring(0,1);<br>
&nbsp;&nbsp;&nbsp;&nbsp; String s2 = s.substring(1, s.length() - 1);<br>
&nbsp;&nbsp;&nbsp;&nbsp; String s3 = s.substring(s.length() - 1);<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (s.length() &lt;= 3)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return s3 + s2 + s1;<br>
&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return s1 + mystery(s2) + 
			s3;<br>
			}</code></p>
		</blockquote>
		<p>What is the output of</p>
		<blockquote>
			<p><code>System.out.println(mystery("DELIVER"));</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="53"><div id="7_div" style="visibility: visible;">
			<img id="7_img" src="./AP JAVA Practice Exam_files/right.gif"></div></td>
		<td width="85" align="center">
			<p align="center">
			&nbsp;</p>
			</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q7"> DELIVER</li>
				<li><input type="radio" value="b" name="q7"> DEVILER</li>
				<li><input type="radio" value="c" name="q7"> REVILED</li>
				<li><input type="radio" value="d" name="q7"> RELIVED</li>
				<li><input type="radio" value="e" name="q7"> DLEIEVR</li>
				</ol>
		</td></tr>
	<tr>
		<td width="53" valign="top">
		<p align="left">8. <font size="1">(AB)</font></p></td>
		<td colspan="2">Consider the following code segment:<blockquote>
			<p><code>List list = new LinkedList();<br>
			list.add("[");&nbsp;&nbsp; list.add("A");&nbsp;&nbsp; list.add("]");<br>
			System.out.println(list);</code></p>
			<p><code>ListIterator it = list.listIterator();<br>
			while(it.hasNext()<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if ("[".equals(it.next()) || "]".equals(it.next()))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; it.remove();<br>
&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; it.add("*");<br>
			}<br>
			System.out.println(list);</code></p>
		</blockquote>
		<p>The first output line is</p>
		<blockquote>
			<p><code>[[, A, ]]</code></p>
		</blockquote>
		<p>What is the second output line?</p></td>
	</tr>
	<tr>
		<td width="53"><div id="8_div" style="visibility:hidden">
			<img id="8_img" src=""></div></td>
		<td width="85" align="center">
			<p align="center">
			&nbsp;</p>
			</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q8"> <code>[A]</code></li>
				<li><input type="radio" value="b" name="q8"> <code>[A, B]</code></li>
				<li><input type="radio" value="c" name="q8"> <code>[B, A]</code></li>
				<li><input type="radio" value="d" name="q8"> <code>ClassCaseException</code></li>
				<li><input type="radio" value="e" name="q8"> <code>NoSuchElementException</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="53">
		<p align="left">9.</p></td>
		<td colspan="2">Which of the following is not a method of <code>
		java.util.ArrayList</code>?</td>
	</tr>
	<tr>
		<td width="53"><div id="9_div" style="visibility: visible;">
			<img id="9_img" src="./AP JAVA Practice Exam_files/wrong.gif"></div></td>
		<td width="85" align="center">
			<p align="center">
			&nbsp;</p>
			</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q9"> <code>add(Object x);</code></li>
				<li><input type="radio" value="b" name="q9"> <code>remove(Object x);</code></li>
				<li><input type="radio" value="c" name="q9"> <code>insert(int i, 
				Object x);</code></li>
				<li><input type="radio" value="d" name="q9"> <code>contains(Object x);</code></li>
				<li><input type="radio" value="e" name="q9"> <code>set(int i, Object 
				x);</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="53">
		&nbsp;</td>
		<td colspan="2"><b>Questions 10-11 refer to</b><blockquote>
			<p><code>public interface InterfaceA { void methodA(); }</code></p>
			<p><code>public interface InterfaceB extends InterfaceA { void 
			methodB(); }</code></p>
			<p><code>public class ClassA implements InterfaceA<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; public void methodA() {}<br>
&nbsp;&nbsp;&nbsp;&nbsp; public void methodB() {}<br>
			}</code></p>
			<p><code>public class ClassB extends ClassA implements InterfaceB<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; public ClassB() {}<br>
&nbsp;&nbsp;&nbsp;&nbsp; ... &lt;methods not shown&gt;<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="53">
		<p align="left">10.</p></td>
		<td colspan="2">What is the minimum number of methods that must be 
		defined in <code>classB</code> for it to compile with no errors?</td>
	</tr>
	<tr>
		<td width="53"><div id="10_div" style="visibility:hidden">
			<img id="10_img" src=""></div></td>
		<td width="85" align="center">
			<p align="center">
			&nbsp;</p>
			</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q10"> No particular 
				methods are required</li>
				<li><input type="radio" value="b" name="q10"> <code>methodA</code></li>
				<li><input type="radio" value="c" name="q10"> <code>methodB</code></li>
				<li><input type="radio" value="d" name="q10"> <code>methodA
				</code>and <code>methodB</code></li>
				<li><input type="radio" value="e" name="q10"> <code>methodA
				</code>, <code>methodB</code>, and <code>toString</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="64">
		<p align="left">11.</p></td>
		<td colspan="2">Which of the following statements causes a syntax error?</td>
	</tr>
	<tr>
		<td width="64"><div id="11_div" style="visibility:hidden">
			<img id="11_img" src=""></div></td>
		<td width="85" align="center">
			<p align="center">
			&nbsp;</p>
			</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q11"> <code>InterfaceA 
				obj = new ClassA();</code></li>
				<li><input type="radio" value="b" name="q11"> <code>InterfaceB 
				obj = new ClassA();</code></li>
				<li><input type="radio" value="c" name="q11"> <code>InterfaceA 
				obj = new ClassB();</code></li>
				<li><input type="radio" value="d" name="q11"> <code>InterfaceB 
				obj = new ClassB();</code></li>
				<li><input type="radio" value="e" name="q11"> <code>ClassA obj = 
				new ClassB();</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="53">
		&nbsp;</td>
		<td colspan="2"><b>Questions 12-13 refer to the following method </b>
		<code>rotate</code><b> 
		that takes a two-dimensional array <code>a</code> and returns a 
		two-dimensional array <code>b</code> made by rotating <code>a</code> by 90° </b>
		counterclockwise<b>.</b><blockquote>
			<p><code>public int[][] rotate(int[][]a)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; int rows = &lt;expression 1&gt;;<br>
			&nbsp;&nbsp;&nbsp;&nbsp; int cols = &lt;expression 2&gt;;<br>
			&nbsp;&nbsp;&nbsp;&nbsp; int[][] b = &lt;expression 3&gt;;<br>
			<br>
&nbsp;&nbsp;&nbsp;&nbsp; for (int r = 0; r &lt; rows; r++)<br>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int c = 
			0; c &lt; cols; c++)<br>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			b[r][c] = &lt;expression 4&gt;;<br>
			<br>
&nbsp;&nbsp;&nbsp;&nbsp; return b;<br>
			}</code></p>
		</blockquote>
		<p>For example, if <code>a</code> holds</p><blockquote>
			<p><code>1 2 3<br>
			4 5 6</code></p></blockquote>
		<p><code>b = rotate(a)</code> will hold</p><blockquote>
			<p><code>3 6<br>
			2 5<br>
			1 4</code></p></blockquote>
		</td>
	</tr>
	<tr>
		<td width="53">
		<p align="left">12. <font size="1">(AB)</font></p></td>
		<td colspan="2">Which of the following should replace <code>&lt;expression 
		1&gt;</code>, <code>&lt;expression 2&gt;</code>, and <code>&lt;expression 3&gt;</code>?</td>
	</tr>
	<tr>
		<td width="53"><div id="12_div" style="visibility:hidden">
			<img id="12_img" src=""></div></td>
		<td width="85" align="center">
			<p align="center">
			&nbsp;</p>
			</td>
		<td width="89%" valign="middle">
				<blockquote>
					<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;expression 1&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
					&lt;expression 2&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
					&lt;expression 3&gt;</p>
				</blockquote>
				<ol type="a">
				<li><input type="radio" value="a" name="q12"> <code>a.cols&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				a.rows&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new 
				int(rows, cols)</code></li>
				<li><input type="radio" value="b" name="q12"> <code>a.cols&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				a.rows&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new 
				int[][](rows, cols)</code></li>
				<li><input type="radio" value="c" name="q12"> <code>a.cols()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				a.rows()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new int(rows, 
				cols)</code></li>
				<li><input type="radio" value="d" name="q12"> <code>a[0].length&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				a.length&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new 
				int[rows][cols]</code></li>
				<li><input type="radio" value="e" name="q12"> <code>a[0].length&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				a.length&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new int[][](rows, 
				cols)</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="53">
		<p align="left">13. <font size="1">(AB)</font></p></td>
		<td colspan="2">Which of the following should replace <code>&lt;statement 
		4&gt;</code>?</td>
	</tr>
	<tr>
		<td width="53"><div id="13_div" style="visibility:hidden">
			<img id="13_img" src=""></div></td>
		<td width="85" align="center">
			<p align="center">
			&nbsp;</p>
			</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q13"> <code>a[c][r]</code></li>
				<li><input type="radio" value="b" name="q13"> <code>a[c][rows - 
				1 - r]</code></li>
				<li><input type="radio" value="c" name="q13"> <code>a[cols - 1 - 
				c][r]</code></li>
				<li><input type="radio" value="d" name="q13"> <code>a[cols - 1 - 
				c][rows - 1 - r]</code></li>
				<li><input type="radio" value="e" name="q13"> <code>a[rows - 1 - 
				r][cols - 1 - c]</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="65" valign="top">
		<p align="left">14.</p></td>
		<td colspan="2">What is the value of <code>n </code>after the following 
		code is executed?<blockquote>
			<p><code>int n = 2005;<br>
			for (int i = 0; i &lt; 50; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; n = (n + 3) / 2;</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="65"><div id="14_div" style="visibility:hidden">
			<img id="14_img" src=""></div></td>
		<td width="85" align="center">
			<p align="center">
			&nbsp;</p>
			</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q14"> 0</li>
				<li><input type="radio" value="b" name="q14"> 1</li>
				<li><input type="radio" value="c" name="q14"> 2</li>
				<li><input type="radio" value="d" name="q14"> 3</li>
				<li><input type="radio" value="e" name="q14"> 65</li>
				</ol>
		</td></tr>
	<tr>
		<td width="65" valign="top">
		<p align="left">15.</p></td>
		<td colspan="2">What is the output of the following code segment?<blockquote>
			<p><code>List cities = new ArrayList();<br>
			cities.add("Atlanta");<br>
			cities.add("Boston");</code></p>
			<p><code>for (int i = 1; i &lt; cities.size(); i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; cities.add(i, "+");</code></p>
			<p><code>System.out.println(cities);</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="65"><div id="15_div" style="visibility:hidden">
			<img id="15_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q15"> <code>[Atlanta, 
				Boston]</code></li>
				<li><input type="radio" value="b" name="q15"> <code>[Atlanta, +, 
				Boston]</code></li>
				<li><input type="radio" value="c" name="q15"> <code>[Atlanta, 
				Boston, +]</code></li><li><input type="radio" value="d" name="q15">
				<code>[Atlanta, +, Boston, +]</code></li><li><input type="radio" value="e" name="q15"> 
				No output because the program goes into an infinite loop </li>
				</ol>
		</td></tr>
	<tr>
		<td width="65">
		<p align="left">16.</p></td>
		<td colspan="2">Which of the following statements is true?</td>
	</tr>
	<tr>
		<td width="65"><div id="16_div" style="visibility:hidden">
			<img id="16_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q16"> A static variable 
				cannot be initialized in a constructor</li>
				<li><input type="radio" value="b" name="q16"> A static variable 
				must be declared final</li>
				<li><input type="radio" value="c" name="q16"> An instance 
				variable can't be declared final</li>
				<li><input type="radio" value="d" name="q16"> A static method 
				can't access an instance variable</li>
				<li><input type="radio" value="e" name="q16"> Only a static 
				method can access a static variable</li>
				</ol>
		</td></tr>
	<tr>
		<td width="65" valign="top">
		<p align="left">17. <font size="1">(AB)</font></p></td>
		<td colspan="2"><code>a</code> and <code>b</code> are arrays of integers and each of 
		them has <code>n</code> elements. <code>a</code> is sorted in ascending order and <code>b</code> is sorted in 
		descending order.&nbsp; What is the big-O, in terms of <code>n</code>, 
		for the number of comparisons in an optimal algorithm that determines 
		whether there exists<code> i</code>, such that <code>a[i] == b[i]</code>?</td>
	</tr>
	<tr>
		<td width="65"><div id="17_div" style="visibility:hidden">
			<img id="17_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q17"> <i>O</i>(log <i>n</i>)</li>
				<li><input type="radio" value="b" name="q17"> <i>O</i>( (log <i>
				n</i>)<sup>2</sup> 
				)</li>
				<li><input type="radio" value="c" name="q17"> <i>O</i>(<i>n</i>)</li>
				<li><input type="radio" value="d" name="q17"> <i>O</i>(<i>n </i>log <i>n</i>)</li>
				<li><input type="radio" value="e" name="q17"> <i>O</i>(<i>n</i><sup>2</sup>)</li>
				</ol>
		</td></tr>
	<tr>
		<td width="65" valign="top">
		<p align="left">18. <font size="1">(AB)</font></p></td>
		<td colspan="2">What is the output of the following code?<blockquote>
			<p><code>String key = "";<br>
			Map map = new TreeMap();<br>
			for (int k = 0; k &lt; 3; k++)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; key += k;<br>
&nbsp;&nbsp;&nbsp;&nbsp; String value = "A";<br>
&nbsp;&nbsp;&nbsp;&nbsp; map.put(key, value);<br>
&nbsp;&nbsp;&nbsp;&nbsp; value += "B";<br>
&nbsp;&nbsp;&nbsp;&nbsp; map.put9key, value);<br>
			}<br>
			System.out.println(map.size());</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="65"><div id="18_div" style="visibility:hidden">
			<img id="18_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q18"> 1</li>
				<li><input type="radio" value="b" name="q18"> 2</li>
				<li><input type="radio" value="c" name="q18"> 3</li>
				<li><input type="radio" value="d" name="q18"> 4</li>
				<li><input type="radio" value="e" name="q18"> 6</li>
				</ol>
		</td></tr>
	<tr>
		<td width="64" valign="top">
		<p align="left">19. <font size="1">(AB)</font></p></td>
		<td colspan="2">Consider the following method:<blockquote>
			<p><code>private TreeNode mysteryProcess(TreeNode root)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (root == null || (root.getLeft() == null &amp;&amp; 
			root.getRight() == null))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return null;<br>
&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			root.setLeft(mysteryProcess(root.getLeft()));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			root.setRight(mysteryProcess(root.getRight()));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return root;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		<p>If <code>root</code> refers to the root of the tree</p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		/&nbsp;\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp; 
		3<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&nbsp;&nbsp; 
		/ \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp; 6</code></p>
		<p>which of the following trees is returned by <code>mysteryProcess(root)</code>?</p></td>
	</tr>
	<tr>
		<td width="64"><div id="19_div" style="visibility:hidden">
			<img id="19_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<table border="0" width="1188">
					<tbody><tr>
						<td width="237" valign="top">a.<input type="radio" value="a" name="q19"><code>&nbsp;&nbsp;&nbsp;&nbsp;1</code></td>
						<td width="237" valign="top">b.<input type="radio" value="b" name="q19"><code>&nbsp;&nbsp;&nbsp;&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3</code></td>
						<td width="237" valign="top">c.<input type="radio" value="c" name="q19"><code>&nbsp;&nbsp;&nbsp;&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		/ \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp; 
		3</code></td>
						<td width="237" valign="top">d.<input type="radio" value="d" name="q19"><code>&nbsp;&nbsp;&nbsp;&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp; 
		3<br>
&nbsp;&nbsp;&nbsp;&nbsp; /<br>
						&nbsp;&nbsp;&nbsp; 4</code></td>
						<td width="238" valign="top">e.<input type="radio" value="e" name="q19"><code>&nbsp;&nbsp;&nbsp;&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; / \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5&nbsp;&nbsp; 6</code></td>
					</tr>
				</tbody></table>
		</td></tr>
	<tr>
		<td width="64" valign="top">
		<p align="left">20. <font size="1">(AB)</font></p></td>
		<td colspan="2">What is the output of the following code?<blockquote>
			<p><code>Stack stk = new ArrayStack();<br>
			stk.push("A");<br>
			stk.push("B");<br>
			stk.push(stk);<br>
			while(!stk.isEmpty())<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; Object obj = stk.pop();<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (obj instanceOf Stack)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(!((Stack)obj).isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			System.out.print(((Stack)obj).pop());<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(obj);<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="64"><div id="20_div" style="visibility:hidden">
			<img id="20_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q20"> <code>BA</code></li>
				<li><input type="radio" value="b" name="q20"> <code>ABBA</code></li>
				<li><input type="radio" value="c" name="q20"> <code>BAAB</code></li>
				<li><input type="radio" value="d" name="q20"> <code>BABA</code></li>
				<li><input type="radio" value="e" name="q20"> ClassCastException</li>
				</ol>
		</td></tr>
	<tr>
		<td width="64" valign="top">
		<p align="left">21. <font size="1">(AB)</font></p></td>
		<td colspan="2">A priority queue is represented as a minimum heap, 
		stored in an array. When a node is added to the heap, it is first added 
		at the leftmost vacant spot in the current level (or, if the current 
		level is full, at the leftmost spot in the next level), and then the 
		reheap-up procedure is applied. What is the order of the values in the 
		array after "<code>M</code>", "<code>A</code>", "<code>N</code>", "<code>G</code>", 
		"<code>O</code>", "<code>E</code>", "<code>S</code>" are added to the 
		queue?</td>
	</tr>
	<tr>
		<td width="64"><div id="21_div" style="visibility:hidden">
			<img id="21_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q21"> <code>AEGMNOS</code></li>
				<li><input type="radio" value="b" name="q21"> <code>AGEMONS</code></li>
				<li><input type="radio" value="c" name="q21"> <code>AEGMNOS</code></li>
				<li><input type="radio" value="d" name="q21"> <code>AEGSOMN</code></li>
				<li><input type="radio" value="e" name="q21"> <code>AGESNOM</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">22. <font size="1">(AB)</font></p></td>
		<td colspan="2">Suppose an array of n elements is stored in ascending 
		order. Then 5 elements are picked randomly and assigned random values. 
		Which of the following sorting algorithms guarantees to restore the 
		ascending order in than array using no more than <i><u>O</u></i>(<i>n</i>) 
		comparisons?<blockquote>
			<p>I. Selection Sort&nbsp;&nbsp;&nbsp;&nbsp; II. Insertion Sort&nbsp;&nbsp;&nbsp;&nbsp; 
			III. Mergesort</p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="22_div" style="visibility:hidden">
			<img id="22_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q22"> I only</li>
				<li><input type="radio" value="b" name="q22"> II only</li>
				<li><input type="radio" value="c" name="q22"> I and II</li>
				<li><input type="radio" value="d" name="q22"> II and III</li>
				<li><input type="radio" value="e" name="q22"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="63" valign="top">
		<p align="left">23.</p></td>
		<td colspan="2">For any object <code>obj</code>, a call <code>
		obj.getClass().getName()</code> returns the name of the <code>obj</code>'s 
		class.<p>Suppose</p>
		<blockquote>
			<p><code>System.out.println(new A() + "+" + new B());</code></p>
		</blockquote>
		<p>displays</p>
		<blockquote>
			<p><code>A+B</code></p>
		</blockquote>
		<p>Which of the following implementations would produce that result?</p>
		<blockquote>
			<p>I. Class A has a method</p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			public String toString() { return "A"; }</code></p>
			<p>&nbsp;&nbsp; and class B has a method</p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			public String toString() { return "B"; }</code></p>
			<p>II. Both class A and class B extend class X that has a method</p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			public String toString() { return getClass().getname(); }</code></p>
			<p>III. Both class A and class B extend an abstract class X that has 
			methods</p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			public abstract String getName();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public String toString() 
			{ return getname(); }</code></p>
			<p>&nbsp;&nbsp; Class A has a method</p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			public String toString() { return "A"; }</code></p>
			<p>&nbsp;&nbsp; and class B has a method</p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			public String toString() { return "B"; }</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="63"><div id="23_div" style="visibility:hidden">
			<img id="23_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q23"> I only</li>
				<li><input type="radio" value="b" name="q23"> II only</li>
				<li><input type="radio" value="c" name="q23"> I and II</li>
				<li><input type="radio" value="d" name="q23"> II and III</li>
				<li><input type="radio" value="e" name="q23"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="62" valign="top">
		<p align="left">24. <font size="1">(AB)</font></p></td>
		<td colspan="2">Consider the following class:<blockquote>
			<p><code>public class Widget implements Comparable<br>
			{<br>
			&nbsp;&nbsp;&nbsp;&nbsp; private int nuts, bolts;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public Widget(int nuts, int bolts) 
			{ this.nuts = nuts;&nbsp; this.bolts = bolts; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public int compareTo(Object other) 
			{ return nuts - ((Widget)other).nuts; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public boolean equals(Object 
			other) { return bolts == ((Widget)other).bolts; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public String toString() { return 
			"" + nuts; }<br>
			}</code></p>
		</blockquote>
		<p>Suppose a non-empty <code>List list</code> holds several <code>Widget</code> 
		objects and the following statements have been executed:</p>
		<blockquote>
			<p><code>Collections.sort(list);<br>
			System.out.println(list);<br>
			Set tSet = new TreeSet(list);<br>
			Set hSet = new HasSet(list);</code></p>
		</blockquote>
		<p>Which of the following statements is NOT necessarily true?</p></td>
	</tr>
	<tr>
		<td width="62"><div id="24_div" style="visibility:hidden">
			<img id="24_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q24"> <code>tSet.size() 
				&lt;= list.size()</code></li>
				<li><input type="radio" value="b" name="q24"> <code>hSet.size() 
				&lt;= list.size()</code></li>
				<li><input type="radio" value="c" name="q24"> <code>hSet.size() 
				== tSet.size()</code></li>
				<li><input type="radio" value="d" name="q24"> <code>
				tSet.contains(list.get(list.size() - 1))</code>returns <code>
				true</code></li>
				<li><input type="radio" value="e" name="q24"> The output lists 
				the values of <code>nuts</code> in <code>Widget</code> objects 
				in <code>list</code> in ascending order</li>
				</ol>
		</td></tr>
	<tr>
		<td width="60" valign="top">
		<p align="left">25.</p></td>
		<td colspan="2">A multiple-choice test has 25 questions, each with five 
		answer choices, A - E. On the eve of the test, Casey and other students 
		had learned that the correct answers on the test were not balanced 
		properly: 3 correct answers were C, 7 were D, and 15 were E (A and B 
		were never correct answers). Casey spent the rest of the night devising 
		an optimal strategy for using this information (neglecting to review the 
		test material). In the worst case, how many questions is Casey 
		guaranteed to get right using the optimal strategy?</td>
	</tr>
	<tr>
		<td width="60"><div id="25_div" style="visibility:hidden">
			<img id="25_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q25"> 3</li>
				<li><input type="radio" value="b" name="q25"> 5</li>
				<li><input type="radio" value="c" name="q25"> 7</li>
				<li><input type="radio" value="d" name="q25"> 10</li>
				<li><input type="radio" value="e" name="q25"> 15</li>
				</ol>
		</td></tr>
	<tr>
		<td colspan="3" bgcolor="#C0C0C0">
		<p align="center"><a name="2004"></a>2004</p></td>
	</tr>
	<tr>
		<td width="59" valign="top">
		<p align="left">26.</p></td>
		<td colspan="2"><code>twist</code> is defined as follows:<blockquote>
			<p><code>public void twist(String[] w)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; String temp = w[0].substring(0, 1);<br>
&nbsp;&nbsp;&nbsp;&nbsp; w[0] = w[1].substring(0, 1) + w[0].substring(1);<br>
&nbsp;&nbsp;&nbsp;&nbsp; w[1] = temp + w[1].substring(1);<br>
			}</code></p>
		</blockquote>
		<p>What is the output of the following code segment?</p>
		<blockquote>
			<p><code>String[] words = {"HOW", "NEAT"};<br>
			twist(words):<br>
			System.out.println(words[0] + " " + words[1]);</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="59"><div id="26_div" style="visibility:hidden">
			<img id="26_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q26"> <code>NOW NOW</code></li>
				<li><input type="radio" value="b" name="q26"> <code>HOW HOW</code></li>
				<li><input type="radio" value="c" name="q26"> <code>NOW HOW</code></li>
				<li><input type="radio" value="d" name="q26"> <code>HOW NEAT</code></li>
				<li><input type="radio" value="e" name="q26"> <code>NOW HEAT</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="58" valign="top">
		<p align="left">27.</p></td>
		<td colspan="2">If Crossword extends Puzzle and implements Solvable, and<blockquote>
			<p><code>Puzzle p = new Puzzle();<br>
			Crossword cw = new Crossword(10, 20);</code></p>
		</blockquote>
		<p>are declared, which of the following statements will cause a syntax 
		error?</p></td>
	</tr>
	<tr>
		<td width="58"><div id="27_div" style="visibility:hidden">
			<img id="27_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q27"> <code>p = cw;</code></li>
				<li><input type="radio" value="b" name="q27"> <code>cw = new 
				Puzzle();</code></li>
				<li><input type="radio" value="c" name="q27"> <code>p = new 
				Crossword(10, 20);</code></li>
				<li><input type="radio" value="d" name="q27"> <code>Solvable x = 
				new Crossword(10, 20);</code></li>
				<li><input type="radio" value="e" name="q27"> All of the above 
				will compile with no errors.</li>
				</ol>
		</td></tr>
	<tr>
		<td width="57" valign="top">
		<p align="left">28.</p></td>
		<td colspan="2">What is the output of the following code?<blockquote>
			<p><code>List nums = new ArrayList(3);<br>
			nums.add(New Integer(1));<br>
			nums.add(New Integer(2));<br>
			nums.add(0, nums.get(1));</code></p>
			<p><code>Object x = nums.get(0);<br>
			Object y = nums.get(2);</code></p>
			<p><code>if (x == y)<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(x + " is equal to " + y);<br>
			else<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(x + " is NOT equal to " + y);</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="57"><div id="28_div" style="visibility:hidden">
			<img id="28_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q28"> <code>1 is equal 
				to 2</code></li>
				<li><input type="radio" value="b" name="q28"> <code>1 is NOT 
				equal to 2</code></li>
				<li><input type="radio" value="c" name="q28"> <code>2 is equal 
				to 2</code></li>
				<li><input type="radio" value="d" name="q28"> <code>2 is NOT 
				equal to 2</code></li>
				<li><input type="radio" value="e" name="q28"> <code>
				IndexOutOfBoundsException</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">29. <font size="1">(AB)</font></p></td>
		<td colspan="2">Which of the following best describes the loop invariant 
		in the following code?<blockquote>
			<p><code>double x = 3.0, y = 1.0;<br>
			while (x - y &gt; 0.01)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; x = (x + y) / 2;<br>
&nbsp;&nbsp;&nbsp;&nbsp; y = 3.0 / x;<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="29_div" style="visibility:hidden">
			<img id="29_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q29"> 3</li>
				<li><input type="radio" value="b" name="q29"> <i>x</i> = 3</li>
				<li><input type="radio" value="c" name="q29"> <i>xy</i> = 3</li>
				<li><input type="radio" value="d" name="q29"> <i>xy</i> = 3 and
				<i>x - y</i> &gt; 0.01</li>
				<li><input type="radio" value="e" name="q29"> <i>x</i> = 
				1.7321428571428572</li>
				</ol>
		</td></tr>
	<tr>
		<td width="59" valign="top">
		<p align="left">30.</p></td>
		<td colspan="2">What is the output of the following code?<blockquote>
			<p><code>int sum = 0, p = 1;<br>
			for (int count = 1; count &lt;= 50; count++)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; sum += p;<br>
&nbsp;&nbsp;&nbsp;&nbsp; p *= 2;<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="59"><div id="30_div" style="visibility:hidden">
			<img id="30_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q30"> -1</li>
				<li><input type="radio" value="b" name="q30"> 562949953421311 (= 
				2<sup>49</sup> - 1)</li>
				<li><input type="radio" value="c" name="q30"> 1125899906842623 
				(= 2<sup>50</sup> - 1)</li>
				<li><input type="radio" value="d" name="q30"> <code>
				ArithmeticException</code></li>
				<li><input type="radio" value="e" name="q30"> <code>
				IllegalArgumentException</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">31.</p></td>
		<td colspan="2">What is the output of the following code?<blockquote>
			<p><code>String barb = "BARBARA";<br>
			scramble(barb);<br>
			System.out.println(barb);</code></p>
		</blockquote>
		The method <code>scramble</code> is defined as follows:<blockquote>
			<p><code>public String scramble(String str)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (str.length() &gt;= 2)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int n = str.length() / 2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; str = 
			scramble(str.substring(n)) + str.substring(0, n);<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; return str;<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="31_div" style="visibility:hidden">
			<img id="31_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q31"> <code>BARBARA</code></li>
				<li><input type="radio" value="b" name="q31"> <code>ARBABAR</code></li>
				<li><input type="radio" value="c" name="q31"> <code>AABAR</code></li>
				<li><input type="radio" value="d" name="q31"> <code>ARBABARB</code></li>
				<li><input type="radio" value="e" name="q31"> <code>ARABARBARB</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="61" valign="top">
		<p align="left">32.</p></td>
		<td colspan="2">What are the values in <code>arr</code> after the 
		following statements are executed?<blockquote>
			<p><code>int[] arr = {1, 1, 0, 0, 0};</code></p>
			<p><code>for (int i = 2; i &lt; arr.length; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; arr[i] = arr[i-1] + arr[i-2];</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="61"><div id="32_div" style="visibility:hidden">
			<img id="32_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q32"> 11011</li>
				<li><input type="radio" value="b" name="q32"> 11210</li>
				<li><input type="radio" value="c" name="q32"> 11222</li>
				<li><input type="radio" value="d" name="q32"> 11235</li>
				<li><input type="radio" value="e" name="q32"> 11248</li>
				</ol>
		</td></tr>
	<tr>
		<td width="61" valign="top">
		<p align="left">33.</p></td>
		<td colspan="2">Given<blockquote>
			<p><code>double x = 5, y = 2;</code></p>
		</blockquote>
		what is the value of <code>m</code> after the following statement is 
		executed?<blockquote>
			<p><code>int m = (int)(x + y + x / y - x * y - x / (10 * y));</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="61"><div id="33_div" style="visibility:hidden">
			<img id="33_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q33"> -1</li>
				<li><input type="radio" value="b" name="q33"> -0.75</li>
				<li><input type="radio" value="c" name="q33"> -0.5</li>
				<li><input type="radio" value="d" name="q33"> 0</li>
				<li><input type="radio" value="e" name="q33"> 1</li>
				</ol>
		</td></tr>
	<tr>
		<td width="60" valign="top">
		<p align="left">34.</p></td>
		<td colspan="2">What is the value of <code>sum</code> after the 
		following code segment is executed?<blockquote>
			<p><code>int p = 3, q = 1, sum = 0;<br>
			while (p &lt;= 10)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; sum += p % q;<br>
&nbsp;&nbsp;&nbsp;&nbsp; p++;<br>
&nbsp;&nbsp;&nbsp;&nbsp; q++;<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="60"><div id="34_div" style="visibility:hidden">
			<img id="34_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q34"> 0</li>
				<li><input type="radio" value="b" name="q34"> 10</li>
				<li><input type="radio" value="c" name="q34"> 12</li>
				<li><input type="radio" value="d" name="q34"> 14</li>
				<li><input type="radio" value="e" name="q34"> 52</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">35. <font size="1">(AB)</font></p></td>
		<td colspan="2">What is the output of the following code segment?<blockquote>
			<p><code>List words = new LinkedList();<br>
			int k;</code></p>
			<p><code>for (k = 1; k &lt;= 9; k++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; words.add("word", k);</code></p>
			<p><code>for (k = 1; k &lt;= words.size(); k++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (k % 3 == 0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; words.remove(k);</code></p>
			<p><code>System.out.println(words);</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="35_div" style="visibility:hidden">
			<img id="35_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q35"> <code>[word1, 
				word2, word4, word5, word7, word8]</code></li>
				<li><input type="radio" value="b" name="q35"> <code>[word2, 
				word3, word5, word6, word7, word8]</code></li>
				<li><input type="radio" value="c" name="q35"> <code>[word2, 
				word3, word5, word6, word8, word9]</code></li>
				<li><input type="radio" value="d" name="q35"> <code>[word1, 
				word2, word3, word5, word6, word7, word8]</code></li>
				<li><input type="radio" value="e" name="q35"> <code>[word1, 
				word2, word3, word5, word6, word8, word9]</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="60" valign="top">
		<p align="left">36.</p></td>
		<td colspan="2">A class <code>Particle</code> has a private field <code>
		double velocity</code> and public methods <code>double getVelocity()</code> 
		and void <code>setVelocity(double v)</code>. It also has a method<blockquote>
			<p><code>public void hit(Particle p) { &lt;<i> Missing statements </i>&gt; 
			}</code></p>
		</blockquote>
		Which of the following could replace<code> &lt;<i> Missing statements </i>&gt;</code> 
		in <code>hit</code> to make it compile with no errors?<blockquote>
			<p>I.<code>&nbsp;&nbsp;&nbsp;&nbsp; double v = getVelocity();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setVelocity(p.getVelocity());<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p.setVelocity(v);</code></p>
			<p>II.<code>&nbsp;&nbsp;&nbsp; double v = velocity;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; velocity = p.getVelocity();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p.setVelocity(v);</code></p>
			<p>III.<code>&nbsp;&nbsp;&nbsp; double v = velocity;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; velocity = p.velocity();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p.velocity = v;</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="60"><div id="36_div" style="visibility:hidden">
			<img id="36_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q36"> I only</li>
				<li><input type="radio" value="b" name="q36"> II only</li>
				<li><input type="radio" value="c" name="q36"> I and II</li>
				<li><input type="radio" value="d" name="q36"> II and III</li>
				<li><input type="radio" value="e" name="q36"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="57" valign="top">
		<p align="left">37.</p></td>
		<td colspan="2">Which of the following conditions must always be true 
		after the while loop finishes?<blockquote>
			<p><code>while (hours &lt; hours0 || (hours == hours0 &amp;&amp; mins &lt; mins0))<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; mins += 5;<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (mins &gt;= 60)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mins -= 60;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hours++;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="57"><div id="37_div" style="visibility:hidden">
			<img id="37_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q37"> <code>hours &gt; 
				hours0 &amp;&amp; mins &gt;= mins0</code></li>
				<li><input type="radio" value="b" name="q37"> <code>hours &gt;= 
				hours0 &amp;&amp; mins &gt;= mins0</code></li>
				<li><input type="radio" value="c" name="q37"> <code>hours &lt; 
				hours0 || (hours == hours0 &amp;&amp; mins &lt; mins0)</code></li>
				<li><input type="radio" value="d" name="q37"> <code>hours &gt;= 
				hours0 &amp;&amp; (hours != hours0 &amp;&amp; mins &gt;= mins0)</code></li>
				<li><input type="radio" value="e" name="q37"> <code>hours &gt;= 
				hours0 &amp;&amp; (hours != hours0 || mins &gt;= mins0)</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="56" valign="top">
		<p align="left">38.</p></td>
		<td colspan="2">Consider the following class:<blockquote>
			<p><code>public class SaleItem implements Comparable<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; public SaleItem(int p) { prcice = p; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; &lt; <i>Comparison method header</i> 
			&gt; { &lt; Code not shown &gt; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public String toString() { return 
			String.valueOf(price); }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; private int price;<br>
			}</code></p>
		</blockquote>Which of the following could replace <code>&lt; <i>Comparison 
		method header</i> &gt;</code> to make this class compile with no errors?<blockquote>
			<p>I.<code>&nbsp;&nbsp;&nbsp; public int compare(SatleItem item1, 
			SaleItem item2)</code></p>
			<p>II.<code>&nbsp;&nbsp;&nbsp; public boolean compareTo(SaleItem 
			item1)</code></p>
			<p>III.<code>&nbsp;&nbsp; public int compareTo(Object obj)</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="56"><div id="38_div" style="visibility:hidden">
			<img id="38_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q38"> I only</li>
				<li><input type="radio" value="b" name="q38"> II only</li>
				<li><input type="radio" value="c" name="q38"> III only</li>
				<li><input type="radio" value="d" name="q38"> I or II</li>
				<li><input type="radio" value="e" name="q38"> II or III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52">
		&nbsp;</td>
		<td colspan="2">
		<blockquote>
			<p><code>int money;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public Gambler(int m) { money = m; 
			}</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public int currentMoney() { return 
			money; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; public void addMoney(int m) { money += m; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public void work() { money += 100; 
			}<br>
&nbsp;&nbsp;&nbsp;&nbsp; public void play() { money /= 2; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; public liveAnotherDay() { work(); play(); }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public String toString() { return 
			String.valueOf(money); }<br>
			}</code></p>
			<p><code>public class CompulsiveGambler extends Gambler<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; public CompulsiveGambler(int m)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt; <i>Missing statements</i> 
			&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public void work() { /* do nothing 
			*/ }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public void play()<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (currentMoney() &gt; 
			1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			super.play();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">39.</p></td>
		<td colspan="2">Given that<blockquote>
			<p><code>System.out.println(new CompulsiveGambler(300));&nbsp;&nbsp;&nbsp;&nbsp;
			</code></p>
		</blockquote>displays <code>300</code>, which of the following could 
		replace<code> &lt; <i>Missing statements</i> &gt;</code> in <code>
		CompulsiveGambler</code>'s constructor?<blockquote>
			<p>I.<code>&nbsp;&nbsp;&nbsp; addMoney(m);</code></p>
			<p>II.<code>&nbsp;&nbsp;&nbsp; super(m);</code></p>
			<p>III.<code>&nbsp;&nbsp; super();<br>
&nbsp;&nbsp;&nbsp;&nbsp; addMoney(m);</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="39_div" style="visibility:hidden">
			<img id="39_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q39"> I only</li>
				<li><input type="radio" value="b" name="q39"> II only</li>
				<li><input type="radio" value="c" name="q39"> I or II</li>
				<li><input type="radio" value="d" name="q39"> II or III</li>
				<li><input type="radio" value="e" name="q39"> I, II, or III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">40.</p></td>
		<td colspan="2">What is the output of the following code segment?<blockquote>
			<p><code>CompulsiveGambler x = new CompulsiveGambler(300);<br>
			x.liveAnotherDay();<br>
			System.out.println(x);</code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="40_div" style="visibility:hidden">
			<img id="40_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q40"> 200</li>
				<li><input type="radio" value="b" name="q40"> 150</li>
				<li><input type="radio" value="c" name="q40"> 100</li>
				<li><input type="radio" value="d" name="q40"> 1</li>
				<li><input type="radio" value="e" name="q40"> 0</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">41.</p></td>
		<td colspan="2">Consider the following method:<blockquote>
			<p><code>public int goFigure(int x)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (x &lt; 100)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x = goFigure(x + 10);<br>
&nbsp;&nbsp;&nbsp;&nbsp; return (x - 1);<br>
			} </code></p>
		</blockquote>
		<p>What does<code> goFigure(60) </code>return? </p></td>
	</tr>
	<tr>
		<td width="52"><div id="41_div" style="visibility:hidden">
			<img id="41_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q41"> 59</li>
				<li><input type="radio" value="b" name="q41"> 69</li>
				<li><input type="radio" value="c" name="q41"> 95</li>
				<li><input type="radio" value="d" name="q41"> 99</li>
				<li><input type="radio" value="e" name="q41"> 109</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">42. <font size="1">(AB)</font></p></td>
		<td colspan="2">Suppose a <code>List list</code> contains strings <code>
		"A", "*", "B", "*", "C" </code>(in this order). What is the output of 
		the following code segment?<blockquote>
			<p><code>ListIterator it = list.listIterator();<br>
			while (it.hasNext)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if ("*".equals(it.next()))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; it.add(it.next() + "*");<br>
			}</code></p>
			<p><code>System.out.println(list);</code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="42_div" style="visibility:hidden">
			<img id="42_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q42"> No output: the 
				program goes into an infinite loop</li>
				<li><input type="radio" value="b" name="q42"> [A, *, **, B, *, 
				**, C]</li>
				<li><input type="radio" value="c" name="q42"> [A, **, *, B, **, 
				*, C]</li>
				<li><input type="radio" value="d" name="q42"> [A, *, B, B*, *, 
				C, C*]</li>
				<li><input type="radio" value="e" name="q42"> [A, *, **, ***, 
				****, B, *, **, ***, ****, C]</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">43. <font size="1">(AB)</font></p></td>
		<td colspan="2">A linked list pointed to by <code>ListNode</code> <code>
		head</code> contains <code>Comparable</code> objects. Which sorting 
		algorithm is implemented by the following method sort and its helper 
		method <code>doSomething</code>?<blockquote>
			<p><code>public ListNode sort(ListNode head)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (head != null)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; head = 
			doSomething(sort(head.getNext())), head);</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; return head;<br>
			}</code></p>
			<p><code>private ListNode doSomething(ListNode head, ListNode node)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (head == null || ((Comparable) node.getValue()).CompareTo(head.getValue()) 
			&lt; 0)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; node.setNext(head);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; head = node;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			head.setNext(doSomething(head.getNext(), node));</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; return head;<br>
			}</code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="43_div" style="visibility:hidden">
			<img id="43_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q43"> Selection sort</li>
				<li><input type="radio" value="b" name="q43"> Insertion sort</li>
				<li><input type="radio" value="c" name="q43"> Mergesort</li>
				<li><input type="radio" value="d" name="q43"> Quicksort</li>
				<li><input type="radio" value="e" name="q43"> Heapsort</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">44. <font size="1">(AB)</font></p></td>
		<td colspan="2">A <code>Map thingsToDo</code> associates a <code>Resort</code> 
		object with a <code>Set</code> of activities available at that resort. 
		The following code segment is intended to remove<code> "Golf"</code> 
		from the activity sets in all resorts:<blockquote>
			<p><code>Iterator iter = thingsToDo.keySet().iterator();<br>
			while (inter.hasNext())<br>
&nbsp;&nbsp;&nbsp;&nbsp; &lt; <i>Missing statement</i> &gt; </code></p>
		</blockquote>
		<p>Which of the following should replace <code>&lt; <i>Missing statement</i> 
		&gt;</code>? </p></td>
	</tr>
	<tr>
		<td width="52"><div id="44_div" style="visibility:hidden">
			<img id="44_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q44"><code> (Set) 
				iter.next().remove("Golf");</code></li>
				<li><input type="radio" value="b" name="q44"><code> ((Set) 
				iter.next()).remove("Golf");</code></li>
				<li><input type="radio" value="c" name="q44"><code> 
				thingsTodo.remove((Set) 
				iter.next(), "Golf");</code></li>
				<li><input type="radio" value="d" name="q44"><code> 
				thingsTodo.remove((Resort) iter.next(), "Golf");</code></li>
				<li><input type="radio" value="e" name="q44"><code> ((Set) 
				thingsToDo.get(iter.next())).remove("Golf");</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">45. <font size="1">(AB)</font></p></td>
		<td colspan="2">What is the output of the following code segment?<blockquote>
			<p><code>TreeNode node6 = new TreeNode("6", null, null);</code><br>
			<code>TreeNode node5 = new TreeNode("5", null, null);<br>
			TreeNode node4 = new TreeNode("4", null, null);<br>
			TreeNode node3 = new TreeNode("3", node5, node6);<br>
			TreeNode node2 = new TreeNode("2", null, node4);<br>
			TreeNode node1 = new TreeNode("1", node2, node3);<br>
			TreeNode root = node1;</code></p>
			<p><code>Object[] arr = new Object[8];<br>
			toArray(root, 1, arr);</code></p>
			<p><code>for (int i = 0; i &lt; arr.length; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(arr[i] + " ");</code></p>
		</blockquote>
		<p>The method <code>toArray</code> is defined as follows:</p>
		<blockquote>
			<p><code>private void toArray(TreeNode root, itn i, Object[] arr)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (root != null)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; arr[i] = root.getValue();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; toArray(root.getLeft(), 
			2*i, arr);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; toArray(root.getRight(), 
			2*i + 1, arr);<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="45_div" style="visibility:hidden">
			<img id="45_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q45"> <code>null 1 2 
				null 3 4 5 6</code></li>
				<li><input type="radio" value="b" name="q45"> <code>null 1 2 3 
				null 3 4 5</code></li>
				<li><input type="radio" value="c" name="q45"> <code>null 1 2 3 4 
				null 3 4</code></li>
				<li><input type="radio" value="d" name="q45"> <code>null 1 2 3 4 
				5 null 3</code></li>
				<li><input type="radio" value="e" name="q45"> <code>null 1 2 3 4 
				5 6 null</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">46. <font size="1">(AB)</font></p></td>
		<td colspan="2">Suppose all valid five-digit zip codes are represented 
		as <code>Integer</code> objects and stored in a set containing about 
		4000 zip codes. Compare two implementations of this set: one is a <code>
		HashSet</code> with 400 buckets; another is a <code>TreeSet</code>. 
		Assuming that various zip codes are matched against the set with roughly 
		the same frequency, which of the following statements about the average 
		performance of these implementations is true?</td>
	</tr>
	<tr>
		<td width="52"><div id="46_div" style="visibility:hidden">
			<img id="46_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q46"> <code>HashSet</code> 
				works more than 100 times faster than <code>TreeSet</code></li>
				<li><input type="radio" value="b" name="q46"> <code>HashSet</code> 
				works about 20 times faster than <code>TreeSet</code></li>
				<li><input type="radio" value="c" name="q46"> <code>HashSet</code> 
				works 2-4 times faster than <code>TreeSet</code></li>
				<li><input type="radio" value="d" name="q46"> <code>HashSet</code> 
				works slower than <code>TreeSet</code></li>
				<li><input type="radio" value="e" name="q46"> <code>HashSet</code> 
				works roughly as fast as <code>TreeSet,</code> but takes more 
				than twice as much space</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">47. <font size="1">(AB)</font></p></td>
		<td colspan="2">What is the output of the following code segment?<blockquote>
			<p><code>String[] letters = { "A", "B", "C" };<br>
			Queue qLetters = new ListQueue();<br>
			String sLetters = "";<br>
			Stack stk = new ArrayStack();</code></p>
			<p><code>for (int i = 0; i &lt; letters.length; i++)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; qLetters.enqueue(letters[i]);<br>
&nbsp;&nbsp;&nbsp;&nbsp; stk.push(qLetters);<br>
&nbsp;&nbsp;&nbsp;&nbsp; sLetters += letters[i];<br>
			}<br>
			while (!stk.isEmpty())<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(stk.pop() + " ");<br>
&nbsp;&nbsp;&nbsp;&nbsp; Queue q = (Queue) stk.pop();<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.out.print("[");<br>
&nbsp;&nbsp;&nbsp;&nbsp; while (!q.isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			System.out.print(q.dequeue());<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.out.print("] ");<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="47_div" style="visibility:hidden">
			<img id="47_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q47"> <code>ABC [ABC] AB 
				[] A []</code></li>
				<li><input type="radio" value="b" name="q47"> <code>ABC [] ABC 
				[] ABC []</code></li>
				<li><input type="radio" value="c" name="q47"> <code>ABC [ABC] AB 
				[AB] A [A]</code></li>
				<li><input type="radio" value="d" name="q47"> <code>A [A] AB 
				[AB] ABC [ABC]</code></li>
				<li><input type="radio" value="e" name="q47"> <code>
				ClassCastException</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">48. <font size="1">(AB)</font></p></td>
		<td colspan="2">An <i>n</i>-by-<i>n</i> two-dimensional array contains
		<code>Comparable</code> values. The values in each row are increasing. 
		The columns alternate: in the first, third, and other odd columns the 
		values are increasing and in the second, fourth, and other even columns 
		the values are decreasing. What is the average big-O for an optimal 
		algorithm that finds a given value in such an array?</td>
	</tr>
	<tr>
		<td width="52"><div id="48_div" style="visibility:hidden">
			<img id="48_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q48"> <i>O</i>(log<i> n</i>)</li>
				<li><input type="radio" value="b" name="q48"> <i>O</i>((log<i> n</i>)<sup>2</sup>)</li>
				<li><input type="radio" value="c" name="q48"> <i>O</i>(<i>n</i>)</li>
				<li><input type="radio" value="d" name="q48"> <i>O</i>(<i>n </i>
				log<i> n</i>)</li>
				<li><input type="radio" value="e" name="q48"> <i>O</i>(<i>n</i><sup>2</sup>)</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">49.</p></td>
		<td colspan="2">Consider the following classes:<blockquote>
			<p><code>public abstract class PointXY<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; private int x, y;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public PointXY(int x, int y) { 
			this.x = x; this.y = y; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; public int getX() { return x; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; public int getY() { return y; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; public String toString() { return "(" + getX + "," + 
			getY() + ")"; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public abstract PointXY moveBy(int 
			dx, int dy);<br>
&nbsp;&nbsp;&nbsp;&nbsp; public abstract double distanceFrom(PointXY p);<br>
			}</code></p>
			<p><code>public abstract class CartesianPoint extends PointXY<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; public CartesianPoint(int x, int y) { &lt; <i>Code not shown</i> 
			&gt; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; public double distanceFrom(PointXY p) { &lt; <i>Code not 
			shown</i> &gt; }<br>
			}</code></p>
			<p><code>public class BoardPosition extends CartesianPoint<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; &lt; <i>Code not shown</i> &gt;<br>
			}</code></p>
		</blockquote>
		<p>Which of the following is the minimal set of public constructors 
		and/or methods required in the BoardPosition class, so that the 
		statements</p>
		<blockquote>
			<p><code>BoardPosition pos = new BoardPosition(0, 0);<br>
			System.out.println(pos.moveBy(10, 10).distanceFrom(pos));</code></p>
		</blockquote>
		<p>compile with no errors? </p></td>
	</tr>
	<tr>
		<td width="52"><div id="49_div" style="visibility:hidden">
			<img id="49_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q49"> <code>public 
				PointXY moveBy(int dx, int dy)</code></li>
				<li><input type="radio" value="b" name="q49"> <code>public 
				boardPosition(int x, int y) </code>and<code> public PointXY 
				moveBy(int dx, int dy)</code></li>
				<li><input type="radio" value="c" name="q49"> <code>public 
				double distanceFrom(PointXY pos)</code>and<code> public PointXY 
				moveBy(int dx, int dy)</code></li>
				<li><input type="radio" value="d" name="q49"> <code>public 
				double distanceFrom(BoardPosition pos)</code>and<code> public 
				BoardPosition moveBy(int dx, int dy)</code></li>
				<li><input type="radio" value="e" name="q49"> <code>public 
				BoardPosition()</code>and<code> public BoardPosition(int x, int 
				y)</code>and<code> public PointXY moveBy(int dx, int dy)</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">50.</p></td>
		<td colspan="2">A multiple-choice question deals with the scores that 
		four students received in a contest. The question offers the following 
		answer choices:<blockquote>
			<ol type="a">
				<li>Tim got more points than Jenny.</li>
				<li>Tim is the contest winner.</li>
				<li>Jenny is in last place.</li>
				<li>Tim's score is above average, and Jenny's score is below 
				average.</li>
				<li>While Nina did better than Phil, the boys' combined score is 
				higher than the girls' combined score.</li>
			</ol>
		</blockquote>
		<p>The question assumes that one option is true and all the rest are 
		false. But the question is badly designed, making it possible to guess 
		the correct answer from the given choices without even looking at the 
		question. What is the correct answer?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="50_div" style="visibility:hidden">
			<img id="50_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q50"> a</li>
				<li><input type="radio" value="b" name="q50"> b</li>
				<li><input type="radio" value="c" name="q50"> c</li>
				<li><input type="radio" value="d" name="q50"> d</li>
				<li><input type="radio" value="e" name="q50"> e</li>
				</ol>
		</td></tr>
	<tr>
		<td colspan="3" bgcolor="#C0C0C0">
		<p align="center"><a name="2003"></a>2003</p></td>
	</tr>
	<tr>
		<td width="50" valign="top">
		<p align="left">51.</p></td>
		<td colspan="2">fun is defined as follows:<blockquote>
			<p><code>public int fun(int[] v)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; v[0]--;<br>
&nbsp;&nbsp;&nbsp;&nbsp; return v[0] + 2;<br>
			}</code></p>
		</blockquote>
		What is the value of v[0] after the following code segment is executed?<blockquote>
			<p><code>int [] v = { 3, 4, 5 };<br>
			v[0] = fun(v); </code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="50"><div id="51_div" style="visibility:hidden">
			<img id="51_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q51"> 1</li>
				<li><input type="radio" value="b" name="q51"> 2</li>
				<li><input type="radio" value="c" name="q51"> 3</li>
				<li><input type="radio" value="d" name="q51"> 4</li>
				<li><input type="radio" value="e" name="q51"> 5</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">52.</p></td>
		<td colspan="2">The method <code>xProperty</code> is defined as follows:<blockquote>
			<p><code>public boolean xProperty(int a)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; return a == 2 * (a / 10 + a % 10);<br>
			}</code></p>
		</blockquote>
		For which of the following values of <code>a</code> does <code>
		xProperty(a)</code> return <code>true</code>?</td>
	</tr>
	<tr>
		<td width="52"><div id="52_div" style="visibility:hidden">
			<img id="52_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q52"> 2</li>
				<li><input type="radio" value="b" name="q52"> 8</li>
				<li><input type="radio" value="c" name="q52"> 18</li>
				<li><input type="radio" value="d" name="q52"> 28</li>
				<li><input type="radio" value="e" name="q52"> 128</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">53.</p></td>
		<td colspan="2">What are the values of m and n after the following code 
		runs?<blockquote>
			<p><code>int m = 20, n = 2, temp;</code></p>
			<p><code>for (int count = 1; count &lt;= 20; count++)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; temp = m;<br>
&nbsp;&nbsp;&nbsp;&nbsp; m = n + count;<br>
&nbsp;&nbsp;&nbsp;&nbsp; n = temp - count;<br>
			}</code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="53_div" style="visibility:hidden">
			<img id="53_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q53"> <code>m</code> = 
				230&nbsp;&nbsp;&nbsp;&nbsp; <code>n</code> = -208</li>
				<li><input type="radio" value="b" name="q53"> <code>m</code> = 
				30&nbsp;&nbsp;&nbsp;&nbsp; <code>n</code> = -8</li>
				<li><input type="radio" value="c" name="q53"> <code>m</code> = 
				12&nbsp;&nbsp;&nbsp;&nbsp; <code>n</code> = -10</li>
				<li><input type="radio" value="d" name="q53"> <code>m</code> = 
				-12&nbsp;&nbsp;&nbsp;&nbsp; <code>n</code> = 8</li>
				<li><input type="radio" value="e" name="q53"> <code>m</code> = 
				-190&nbsp;&nbsp;&nbsp;&nbsp; <code>n</code> = 212</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">54.</p></td>
		<td colspan="2">Consider the method<blockquote>
			<p><code>public int[] copyX(int[] arr)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; int[] result = new int[arr.length];</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; arr.length; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (arr[i] &lt;= 0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			break;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (arr[i] &gt; 10)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			break;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result[i] = arr[i];<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; return result;<br>
			} </code></p>
		</blockquote>
		Suppose it is rewritten as follows:<blockquote>
			<blockquote>
			<p><code>public int[] copyX(int[] arr)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; int[] result = new int[arr.length];<br>
&nbsp;&nbsp;&nbsp;&nbsp; int i = 0;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; while (&lt; <i>condition</i> &gt;)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result[i] = arr[i];<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i++;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; return result;<br>
			} </code></p>
		</blockquote>
		</blockquote>
		<p>Which of the following expressions can replace <code>&lt; <i>condition</i> 
		&gt;</code> so that the second version is equivalent to the first one 
		(i.e., for any<code> int[]</code> parameter <code>arr</code>, it returns 
		the same result as the first version)?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="54_div" style="visibility:hidden">
			<img id="54_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q54"><code> i &lt; 
				arr.length &amp;&amp; (arr[i] &lt;= 0 || arr[i] &gt; 10)</code></li>
				<li><input type="radio" value="b" name="q54">&nbsp; <code>(arr[i] 
				&lt;= 0 || arr[i] &gt; 10) || i &gt;= arr.length</code></li>
				<li><input type="radio" value="c" name="q54">&nbsp; <code>(arr[i] 
				&lt;= 0 || arr[i] &gt; 10) &amp;&amp; i &lt; arr.length</code></li>
				<li><input type="radio" value="d" name="q54">&nbsp; <code>i &lt; 
				arr.length &amp;&amp; !(arr[i] &lt;= 0 || arr[i] &gt; 10)</code></li>
				<li><input type="radio" value="e" name="q54">&nbsp; <code>i &lt; 
				arr.length &amp;&amp; arr[i] &gt; 0 &amp;&amp; arr[i] &lt;= 10)</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">55.</p></td>
		<td colspan="2">Given<blockquote>
			<p><code>double x = &lt; <i>any positive value less than 2003</i> &gt;;
			</code></p>
		</blockquote>
		<p>which of the following code fragments set int y to the smallest 
		integer that is NOT less than three quarters of x?</p>
		<blockquote>
			<blockquote>
			<p>I.<code>&nbsp;&nbsp;&nbsp; int y = (int)(3 * x / 4);<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (y &lt; 3 * x / 4) y++;</code></p>
			<p>II.<code>&nbsp;&nbsp;&nbsp;int y = 1;<br>
&nbsp;&nbsp;&nbsp;&nbsp; while (y &lt; 3 * x / 4) y++;</code></p>
			<p>III.<code>&nbsp;&nbsp; int y = 2010 - (int)(2010 - x * 3 / 4);</code></p>
		</blockquote>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="55_div" style="visibility:hidden">
			<img id="55_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q55"> I only</li>
				<li><input type="radio" value="b" name="q55"> II only</li>
				<li><input type="radio" value="c" name="q55"> I and II</li>
				<li><input type="radio" value="d" name="q55"> I and III</li>
				<li><input type="radio" value="e" name="q55"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">56.</p></td>
		<td colspan="2">Alicia is five years older than her brother Ben. Three 
		years from now Alicia's age will be twice Ben's age. How old are Alicia 
		and Ben now? Ha wrote the following program to solve this puzzle:<blockquote>
			<p><code>public class AliciaAndBen<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String[] args)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int a = 1; a &lt;= 100; 
			a++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			for (int b = 1; b &lt;= 100; b++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			if (&lt; <i>condition</i> &gt;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			System.out.println("Alicia is " + a + " and Ben is " + b);<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			} </code></p>
		</blockquote>
		Which of the following expressions should replace <code>&lt; <i>condition</i> 
		&gt;</code> in Hal's program so that it displays the correct solution to 
		the puzzle?</td>
	</tr>
	<tr>
		<td width="52"><div id="56_div" style="visibility:hidden">
			<img id="56_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q56"> <code>(a == b - 5) 
				&amp;&amp; (a - 3 == 2 * (b - 3))</code></li>
				<li><input type="radio" value="b" name="q56"> <code>a == b + 5 
				&amp;&amp; a + 3 == 2 * b + 6</code></li>
				<li><input type="radio" value="c" name="q56"><code>(a == (b + 
				5)) &amp;&amp; ((a + 3) ++ (2 * b + 3))</code></li>
				<li><input type="radio" value="d" name="q56"> <code>a == (b - 5) 
				&amp;&amp; (2 * a - 3) == (b - 3)</code></li>
				<li><input type="radio" value="e" name="q56">None of the above 
				works</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">57. <font size="1">(AB)</font></p></td>
		<td colspan="2">Suppose a two-dimensional array of <code>char</code>s
		<code>m</code> has 4 rows and 5 columns and holds the values represented 
		in the picture below:<blockquote>
			<p><code>x.xxx<br>
			xx..x<br>
			.x.xx<br>
			xx...</code></p>
		</blockquote>
		What are the values in <code>m</code> after the following code segment is executed?<blockquote>
			<p><code>int r, c;<br>
			for (r = 1; r &lt; m.length; r++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; for (c = 1; c &lt; m[0].length - 1; c++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (m[r-1][c-1] == 'x' &amp;&amp; 
			m[r-1][c+1] == 'x')<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			m[r][c] = 'x';</code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="57_div" style="visibility:hidden">
			<img id="57_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<table border="0" width="1188">
					<tbody><tr>
						<td width="237" valign="top">a.<input type="radio" value="a" name="q57"><code>&nbsp;&nbsp;&nbsp;&nbsp;x.xxx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xx..x<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .xxxx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xx...</code></td>
						<td width="237" valign="top">b.<input type="radio" value="b" name="q57"><code>&nbsp;&nbsp;&nbsp;&nbsp;xxxxx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xx..x<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .xxxx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xx...</code></td>
						<td width="237" valign="top">c.<input type="radio" value="c" name="q57"><code>&nbsp;&nbsp;&nbsp;&nbsp;x.xxx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xx.xx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xxxxx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xxx..</code></td>
						<td width="237" valign="top">d.<input type="radio" value="d" name="q57"><code>&nbsp;&nbsp;&nbsp;&nbsp;x.xxx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xx.xx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .xxxx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xxxx.</code></td>
						<td width="238" valign="top">e.<input type="radio" value="e" name="q57"><code>&nbsp;&nbsp;&nbsp;&nbsp;x.xxx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xx.xx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .x.xx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xxx..</code></td>
					</tr>
				</tbody></table>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">58.</p></td>
		<td colspan="2">What is the output of the following code?<blockquote>
			<p><code>String s = "ONION";<br>
			System.out.println(s.substring(1, 5).substring(1, 4).substring(0, 
			3));</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="58_div" style="visibility:hidden">
			<img id="58_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q58"> I</li>
				<li><input type="radio" value="b" name="q58"> IO</li>
				<li><input type="radio" value="c" name="q58"> ION</li>
				<li><input type="radio" value="d" name="q58"> ONI</li>
				<li><input type="radio" value="e" name="q58"> NION</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">59.</p></td>
		<td colspan="2">What is the smallest required number of three 
		comparisons in an optimal algorithm (based on comparing values) that 
		puts any THREE distinct values into a list in ascending order? What is 
		the answer for FOUR distinct values?</td>
	</tr>
	<tr>
		<td width="52"><div id="59_div" style="visibility:hidden">
			<img id="59_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q59"> 2 and 3</li>
				<li><input type="radio" value="b" name="q59"> 3 and 4</li>
				<li><input type="radio" value="c" name="q59"> 3 and 5</li>
				<li><input type="radio" value="d" name="q59"> 3 and 6</li>
				<li><input type="radio" value="e" name="q59"> 6 and 12</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">60.</p></td>
		<td colspan="2">Given<blockquote>
			<p><code>int counts[] = {7, 2, 9, 0, 1, 5, 5, 3, 9};</code></p>
		</blockquote>
		What does<code> find3(counts, 9)</code> return? <code>find3</code> is 
		defined as follows:<blockquote>
			<p><code>public int find3(int a[], int targetsum)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; int i = 0, sum = 0;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; while (i &lt; 3)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum += a[i];<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i++;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; if (sum == targetsum)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 1;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; while (i &lt; a.length)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum += a[i] - a[i-3];<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (sum == targetsum)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			return i - 1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i++;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="60_div" style="visibility:hidden">
			<img id="60_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q60"> -1</li>
				<li><input type="radio" value="b" name="q60"> 1</li>
				<li><input type="radio" value="c" name="q60"> 2</li>
				<li><input type="radio" value="d" name="q60"> 3</li>
				<li><input type="radio" value="e" name="q60"> 8</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">61. <font size="1">(AB)</font></p></td>
		<td colspan="2">Let us call an array "oscillating" if its values 
		alternate going up and down, as follows: <code>a[i-1] &lt; a[i]</code> and
		<code>a[i] &gt; a[i+1]</code> for any odd <code>i</code>, <code>0 &lt; i &lt; n-1</code>, 
		where <code>n</code> is the number of elements in <code>a</code>. What 
		is the "big-O" for an optimal algorithm that determines the minimum 
		value for an oscillating array of length <code>n</code>? The median 
		value?</td>
	</tr>
	<tr>
		<td width="52"><div id="61_div" style="visibility:hidden">
			<img id="61_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<i>Minimum</i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<i>Median</i><ol type="a">
				<li><input type="radio" value="a" name="q61">&nbsp;&nbsp;&nbsp;&nbsp; 
				O(1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				O(1)</li>
				<li><input type="radio" value="b" name="q61">&nbsp;&nbsp;&nbsp;&nbsp; 
				O(<i>n</i>/2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				O(1)</li>
				<li><input type="radio" value="c" name="q61">&nbsp;&nbsp;&nbsp;&nbsp; 
				O(<i>n</i>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				O(<i>n</i>)</li>
				<li><input type="radio" value="d" name="q61">&nbsp;&nbsp;&nbsp;&nbsp; 
				O(<i>n</i>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				O(<i>n </i>log<i> </i><i>n</i>)</li>
				<li><input type="radio" value="e" name="q61">&nbsp;&nbsp;&nbsp;&nbsp; 
				O(<i>n</i>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				O(<i>n</i><sup>2</sup>)</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">62. <font size="1">(AB)</font></p></td>
		<td colspan="2">Suppose an n by n matrix of "black" and "white" pixels 
		(e.g.,1s and 0s) represents a picture of a black blob that fills the 
		southeastern corner of the picture. The blob's boundary extends in a 
		generally southwest-to-northeast direction. All the pixels below and to 
		the right of any black pixel are black. For example:<blockquote>
			<p><code>0000001<br>
			0000001<br>
			0000011<br>
			0001111<br>
			0111111<br>
			1111111<br>
			1111111</code></p>
		</blockquote>
		What is the worst case "big-O," in terms of n, for the total number of 
		integer additions plus pixel comparisons in an optimal algorithm that 
		determines the area of a blob (the number of black pixels in the blob)?&nbsp;</td>
	</tr>
	<tr>
		<td width="52"><div id="62_div" style="visibility:hidden">
			<img id="62_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q62"> <i>O</i>(log<i> n</i>)</li>
				<li><input type="radio" value="b" name="q62"> <i>O</i>((log<i> n</i>)<sup>2</sup>)</li>
				<li><input type="radio" value="c" name="q62"> <i>O</i>(<i>n</i>) 
				</li><li><input type="radio" value="d" name="q62"> <i>O</i>(<i>n log n</i>)</li>
				<li><input type="radio" value="e" name="q62"> <i>O</i>(<i>n</i><sup>2</sup>)</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52">
		&nbsp;</td>
		<td colspan="2"><b>Questions 63-67 refer to the following interface and 
		classes, written by Kim, a novice programmer, for modelling a "Caller 
		ID" device:</b><blockquote>
			<p><code>public interface Call<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; String getSource();<br>
			}</code></p>
			<p><code>public class IncomingCall implements Call<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; private String telephoneNumber;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public IncomingCall() { 
			telephoneNumber = ""; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; public IncomingCall(String tel) { telephoneNumber = tel; 
			}</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public void 
			setTelephoneNumber(String tel)<br>
&nbsp;&nbsp;&nbsp;&nbsp; { telephoneNumber = tel; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public String getSource() { return 
			telephoneNumber; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; public String toString() { return getSource(); }<br>
			}</code></p>
			<p><code>public class IncomingCallWithName extends IncomingCall<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; private String callerName;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public IncomingCallWithName(String 
			tel, String name)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt; <i>missing statement</i> 
			&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; callerName = name;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public String getName() { return 
			callerName; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public String getSource()<br>
&nbsp;&nbsp;&nbsp;&nbsp; { return super.getSource() + " " + getName(); }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public String toString()<br>
&nbsp;&nbsp;&nbsp;&nbsp; { return super.getSource() + " " + getName(); }<br>
			}</code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">63.</p></td>
		<td colspan="2">Kim's teacher specified that<blockquote>
			<p><code>System.out.println(new IncomingCallWithName("800-749-2000", 
			"Pizza Palace")); </code></p>
		</blockquote>
		<p>should display</p>
		<blockquote>
			<p><code>800-749-2000 Pizza Palace</code></p>
		</blockquote>
		<p>Which of the following statements can replace <code>&lt; <i>missing 
		statement</i> &gt;</code>&nbsp; in the <code>IncomingCallWithName</code>&nbsp; 
		constructor to achieve that?</p>
		<blockquote>
			<blockquote>
			<p>I.<code>&nbsp;&nbsp;&nbsp; super(tel);<br>
			</code>II.<code>&nbsp;&nbsp;&nbsp;setTelephoneNumber(tel);<br>
			</code>III.<code>&nbsp;&nbsp;telephoneNumber = tel;</code></p>
		</blockquote>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="63_div" style="visibility:hidden">
			<img id="63_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q63"> I only</li>
				<li><input type="radio" value="b" name="q63"> II only</li>
				<li><input type="radio" value="c" name="q63"> I and II</li>
				<li><input type="radio" value="d" name="q63"> II and III</li>
				<li><input type="radio" value="e" name="q63"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">64.</p></td>
		<td colspan="2">What is the result of the following code segment?<blockquote>
			<p><code>Call[] calls = new Call[3];<br>
			calls[0] = new IncomingCall("888-888-8888");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			// Line 1<br>
			calls[1] = (IncomingCallWithName) calls[0];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			// Line 2<br>
			System.out.println(calls[0] + " " + calls[1] + " " + calls[2]);&nbsp; 
			// Line 3</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="64_div" style="visibility:hidden">
			<img id="64_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q64"> Syntax error on 
				line 1</li>
				<li><input type="radio" value="b" name="q64"> Syntax error on 
				line 2</li>
				<li><input type="radio" value="c" name="q64"> <code>
				ClassCastException</code> on Line 2</li>
				<li><input type="radio" value="d" name="q64"> <code>
				NullPointerException</code> on Line 3</li>
				<li><input type="radio" value="e" name="q64"> Compiles and runs 
				with no errors; the output is:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>888-888-8888 888-888-8888 null</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">65.</p></td>
		<td colspan="2">After correctly completing the <code>
		IncomingCallWithName</code> constructor, as requested in Question 63, Kim 
		wrote the following test code:<blockquote>
			<p><code>IncomingCall call = new IncomingCallWithName("800-749-2000", 
			"PizzaPalace");<br>
			System.out.println(call);</code></p>
		</blockquote>
		&nbsp;The output was<blockquote>
			<p><code>800-749-2000 PizzaPalace</code></p>
		</blockquote>
		<p>Kim's teacher suggested that Kim try to compile and run the program 
		again with <code>IncomingCallWithName's</code> <code>toString</code> 
		method commented out. What would be the result of this experiment?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="65_div" style="visibility:hidden">
			<img id="65_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q65"> Syntax error "IncomingCallWithName 
				shoul dbe declared abstract"</li>
				<li><input type="radio" value="b" name="q65"> Infinite 
				recursion, stack overflow</li>
				<li><input type="radio" value="c" name="q65"> The program 
				compiles with no errors and displays <code>800-749-2000 </code></li>
				<li><input type="radio" value="d" name="q65"> The program 
				compiles with no errors and displays the same output as before,
				<code>800-749-2000 PizzaPalace</code></li>
				<li><input type="radio" value="e" name="q65"> The program 
				compiles with no errors and displays <code>IncomingCallWithName@47e553</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">66.</p></td>
		<td colspan="2">Suppose calls and name are initialized as follows:<blockquote>
			<p><code>Call[] calls = {<br>
&nbsp;&nbsp;&nbsp;&nbsp; new IncomingCallWithName("800-749-2000", "Pizza 
			Palace"),<br>
&nbsp;&nbsp;&nbsp;&nbsp; new IncomingCall("888-237-3757"),<br>
&nbsp;&nbsp;&nbsp;&nbsp; new IncomingCallWithName("800-555-1234", "Burger 
			Heaven")<br>
			};</code></p>
			<p><code>String name = "Pizza Palace";</code></p>
		</blockquote>
		The following code segment is intended to count the number of <code>Call</code> 
		objects in the calls array that came from a given source:<blockquote>
			<p><code>String name = IO.readline(); // Read the name of the source<br>
			int count = 0;<br>
			for (int i = 0; i &lt; calls.length; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; if ( &lt; <i>condition</i> &gt; )<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; count++;</code></p>
		</blockquote>
		&nbsp;Which of the following replacements for (<code> &lt; <i>condition</i> 
		&gt; </code>) will compile with no errors and correctly set <code>count</code> 
		to 1?</td>
	</tr>
	<tr>
		<td width="52"><div id="66_div" style="visibility:hidden">
			<img id="66_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q66"> <code>
				calls[i].getSource().indexOf(name) &gt;= 0</code></li>
				<li><input type="radio" value="b" name="q66"> <code>
				calls[i].toString().indexOf(name) &gt;= 0</code></li>
				<li><input type="radio" value="c" name="q66"> <code>
				calls[i].getName().equals(name)</code></li>
				<li><input type="radio" value="d" name="q66"> <code>((IncomingCallWithName) 
				calls[i]).getName().equals(name)</code></li>
				<li><input type="radio" value="e" name="q66"> None of the above</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">67. <font size="1">(AB)</font></p></td>
		<td colspan="2">Consider the following class:<blockquote>
			<p><code>public class CallerID<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; public List calls;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public CallerID()<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; calls = new LinkedList();<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; // precondition: calls hold 
			IncomingCall objects<br>
&nbsp;&nbsp;&nbsp;&nbsp; // postcondition: all calls that came from target are 
			removed from the calls list<br>
&nbsp;&nbsp;&nbsp;&nbsp; public void removeAll(String target) { &lt; <i>code not 
			shown</i> &gt; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; &lt; <i>other methods not shown</i> &gt;<br>
			}</code></p>
		</blockquote>
		<p>If <code>removeAll</code> works as specified in its pre- and 
		postconditions, which of the following code segments can serve as <code>
		removeAll's</code> body?</p>
		<blockquote>
			<blockquote>
			<p>I.<code>&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; calls.size(); t++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (((IncomingCall) 
			calls.get{i}).getSource().equals(target))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			calls.remove(i);<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			</code>II.<code>&nbsp;&nbsp;&nbsp;int i = 0;<br>
&nbsp;&nbsp;&nbsp;&nbsp; while (i &lt; calls.size(); t++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (((IncomingCall) 
			calls.get{i}).getSource().equals(target))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			calls.remove(i);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			i++;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			</code>III.<code>&nbsp;&nbsp;Iterator iter = calls.iterator();<br>
&nbsp;&nbsp;&nbsp;&nbsp; while (iter.hasNext())<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (((IncomingCall) 
			calls.get{i}).getSource().equals(target))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			iter.remove(i);<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
		</blockquote>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="67_div" style="visibility:hidden">
			<img id="67_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q67"> I only</li>
				<li><input type="radio" value="b" name="q67"> II only</li>
				<li><input type="radio" value="c" name="q67"> I and II</li>
				<li><input type="radio" value="d" name="q67"> II and III</li>
				<li><input type="radio" value="e" name="q67"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">68. <font size="1">(AB)</font></p></td>
		<td colspan="2">What is the output of the following code segment?<blockquote>
			<p><code>Map m = new TreeMap();<br>
			m.put("La", "La");<br>
			m.put("La-La", "La");<br>
			m.put("La-La-La", "Ye-Ye");<br>
			Iterator it = m.keySet().iterator();<br>
			while (it.hasNext())<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(m.get(it.next()) + " ");</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="68_div" style="visibility:hidden">
			<img id="68_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q68"> <code>La Ye-Ye</code></li>
				<li><input type="radio" value="b" name="q68"> <code>La La Ye-Ye</code></li>
				<li><input type="radio" value="c" name="q68"> <code>La La-La-La</code></li>
				<li><input type="radio" value="d" name="q68"> <code>La La 
				La-La-La Ye-Ye</code></li>
				<li><input type="radio" value="e" name="q68"> <code>La La La-La 
				La La-La-La Ye-Ye</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">69. <font size="1">(AB)</font></p></td>
		<td colspan="2">Suppose<code> ListNode head</code> refers to the first 
		node of a linked list. Consider the following code fragment:<blockquote>
			<p><code>ListNode node, temp;</code></p>
			<p><code>for (node = head; node != null; node.getNext())<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; while (node.getNext() != null &amp;&amp; 
			node.getNext().getValue().equals(node.getValue()))<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			node.setNext((node.getNext().getNext()))l<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		If <code>head</code> refers to a linked list with 11 nodes that hold 
		letters<blockquote>
			<p><code>"M", "I", "S", "S", "I", "S", "S", "I", "P", "P", "I"</code></p>
		</blockquote>
		(in that order), what letters are stored in the nodes of this list after 
		the above code is executed?</td>
	</tr>
	<tr>
		<td width="52"><div id="69_div" style="visibility:hidden">
			<img id="69_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q69"> <code>"M"</code></li>
				<li><input type="radio" value="b" name="q69"> <code>"M", "I", 
				"S"</code></li>
				<li><input type="radio" value="c" name="q69"> <code>"M", "I", 
				"I", "I"</code></li>
				<li><input type="radio" value="d" name="q69"> <code>"M", "I", 
				"S", "P"</code></li>
				<li><input type="radio" value="e" name="q69"> <code>"M", "I", 
				"S", "I", "S", "I", "P", "I"</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">70. <font size="1">(AB)</font></p></td>
		<td colspan="2">Consider the following method:<blockquote>
			<p><code>public int mysteryCount(TreeNode root)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; int count = 0;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; if (root != null)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; count = 
			mysteryCount(root.getLeft()) + mysteryCount(root.getRight());<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ((root.getLeft() == 
			null &amp;&amp; root.getRight() == null) ||<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (root.getLeft() 
			!= null &amp;&amp; root.getRight() != null &amp;&amp; 
			root.getLeft().getValue().equals(root.getRight().getValue())))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			count++;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		If<code> root </code>refers to the tree<blockquote>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			/&nbsp;&nbsp; \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		/&nbsp;&nbsp;&nbsp;&nbsp; \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			C<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&nbsp;\&nbsp;&nbsp;&nbsp; /&nbsp;&nbsp; \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D&nbsp;&nbsp;&nbsp;D&nbsp; 
			D&nbsp;&nbsp;&nbsp;&nbsp; D<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			/ \&nbsp;&nbsp; / \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			E&nbsp;&nbsp;&nbsp;E E&nbsp;&nbsp; E</code></p>
		</blockquote>
		which value is returned by<code> mysteryCount(root)</code>?</td>
	</tr>
	<tr>
		<td width="52"><div id="70_div" style="visibility:hidden">
			<img id="70_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q70"> 1</li>
				<li><input type="radio" value="b" name="q70"> 3</li>
				<li><input type="radio" value="c" name="q70"> 4</li>
				<li><input type="radio" value="d" name="q70"> 5</li>
				<li><input type="radio" value="e" name="q70"> 10</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">71. <font size="1">(AB)</font></p></td>
		<td colspan="2">Consider the following method that creates a binary tree 
		from a linked list:<blockquote>
			<p><code>public TreeNode listToTree(ListNode head)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (head == null || head.getNext() == null)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return null;<br>
&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return new 
			TreeNode(head.getValue(),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			lisToTree(head.getNext()),<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			listToTree(head.getNext().getNext()));<br>
			}</code></p>
		</blockquote>
		If <code>head</code> refers to a linked list with five nodes—<blockquote>
			<p><code>"A", "B", "C", "D", "E"</code></p>
		</blockquote>
		—how many nodes in the tree returned by<code> listToTree(head)
		</code>hold "E"?</td>
	</tr>
	<tr>
		<td width="52"><div id="71_div" style="visibility:hidden">
			<img id="71_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q71"> 0</li>
				<li><input type="radio" value="b" name="q71"> 3</li>
				<li><input type="radio" value="c" name="q71"> 4</li>
				<li><input type="radio" value="d" name="q71"> 5</li>
				<li><input type="radio" value="e" name="q71"> 8</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">72. <font size="1">(AB)</font></p></td>
		<td colspan="2">Consider the following method that builds a linked list 
		from a binary tree:<blockquote>
			<p><code>public ListNode treeToList(TreeNode root)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (root == null)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return null;<br>
&nbsp;&nbsp;&nbsp;&nbsp; else if (Math.random() &lt; 0.5)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return new 
			ListNode(root.getValue(), treeToList(root.getLeft()));<br>
&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return new 
			ListNode(root.getValue(), treeToList(root.getRight()));<br>
			}</code></p>
		</blockquote>
		If<code> root </code>refers to the tree<blockquote>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			/&nbsp;&nbsp; \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		/&nbsp;&nbsp;&nbsp;&nbsp; \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			C<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&nbsp;\&nbsp;&nbsp;&nbsp;&nbsp; 
			/<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D&nbsp;&nbsp;&nbsp;E&nbsp;&nbsp; 
			F</code></p>
		</blockquote>
		which of the following lists could possibly result from <code>
		treeToList(root)</code>?<blockquote>
			<blockquote>
			<p>I.<code>&nbsp;&nbsp;&nbsp;&nbsp; A, B, D<br>
			</code>II.<code>&nbsp;&nbsp;&nbsp; A, B, C, D<br>
			</code>III.<code>&nbsp;&nbsp; A, C, F</code></p>
		</blockquote>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="72_div" style="visibility:hidden">
			<img id="72_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q72"> I only</li>
				<li><input type="radio" value="b" name="q72"> II only</li>
				<li><input type="radio" value="c" name="q72"> I and II</li>
				<li><input type="radio" value="d" name="q72"> I and III</li>
				<li><input type="radio" value="e" name="q72"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">73. <font size="1">(AB)</font></p></td>
		<td colspan="2">Consider the following method that builds a linked list 
		from a queue:<blockquote>
			<p><code>// precondition: q holds Comparable objects<br>
			public TreeNode queueToTree(ListQueue q)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (q.isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return null;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; ListQueue q1 = new ListQueue();<br>
&nbsp;&nbsp;&nbsp;&nbsp; ListQueue q2 = new ListQueue();<br>
&nbsp;&nbsp;&nbsp;&nbsp; Comparable x, y;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; x = (Comparable) q.dequeue();<br>
&nbsp;&nbsp;&nbsp;&nbsp; while (!q.isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y = (Comparable) 
			q.dequeue();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (y.compareTo(x) &lt; 0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			q1.enqueue(y);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			q2.enqueue(y);<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; return new TreeNode(x, 
			queueToTree(q1), queueToTree(q2));<br>
			}</code></p>
		</blockquote>
		If<code> q </code>contains letters <code>A</code>,<code> P</code>,<code> 
		R</code>,<code> I</code>,<code> C</code>,<code> O</code>,<code> T</code> 
		(represented by <code>Character</code> or <code>String</code> objects, 
		in this order, from front to rear), what is the result of inorder 
		transversal (left-to-right) of the tree returned by <code>queueToTree(q)</code>?&nbsp;</td>
	</tr>
	<tr>
		<td width="52"><div id="73_div" style="visibility:hidden">
			<img id="73_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q73"> <code>A</code>,<code> 
				C</code>,<code> I</code>,<code> O</code>,<code> P</code>,<code> 
				R</code>,<code> T</code></li>
				<li><input type="radio" value="b" name="q73"> <code>A</code>,<code> 
				P</code>,<code> R</code>,<code> T</code>,<code> I</code>,<code> 
				C</code>,<code> O</code></li>
				<li><input type="radio" value="c" name="q73"> <code>A</code>,<code> 
				P</code>,<code> R</code>,<code> C</code>,<code> I</code>,<code> 
				O</code>,<code> T</code></li>
				<li><input type="radio" value="d" name="q73"> <code>A</code>,<code> 
				C</code>,<code> O</code>,<code> I</code>,<code> T</code>,<code> 
				R</code>,<code> P</code></li>
				<li><input type="radio" value="e" name="q73"> <code>A</code>,<code> 
				P</code>,<code> I</code>,<code> C</code>,<code> O</code>,<code> 
				R</code>,<code> T</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">74. <font size="1">(AB)</font></p></td>
		<td colspan="2">Consider the following method <code>eval</code>:<blockquote>
			<p><code>String eval(Queue q)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; Stack stk = new ArrayStack();<br>
&nbsp;&nbsp;&nbsp;&nbsp; String s = "";</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; while (!q.isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s = (String) q.dequeue();</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if 
			(!s.equals("+"))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			stk.push(s);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			String s1 = "", s2 = "";<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			if (!stk.isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			s2 = (String) stk.pop();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			if (!stk.isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			s1 = (String) stk.pop();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			stk.push(s1 + s2);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (!stk.isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s = (String) stk.pop();<br>
&nbsp;&nbsp;&nbsp;&nbsp; return s;<br>
			}</code></p>
		</blockquote>
		The program reads strings (which may hold single characters), separated 
		by spaces, one by one from the input line and puts them into a queue
		<code>q</code>. Then it displays the string returned by <code>eval(q)</code>. 
		For which of the following input lines is the output <code>HELLO</code>?</td>
	</tr>
	<tr>
		<td width="52"><div id="74_div" style="visibility:hidden">
			<img id="74_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<i>front<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				&#8595;</i>
				<ol type="a">
				<li><input type="radio" value="a" name="q74"> <code>H + E + L + 
				L + O</code></li>
				<li><input type="radio" value="b" name="q74"> <code>H E L + + L 
				O + +</code></li>
				<li><input type="radio" value="c" name="q74"> <code>H E + + L L 
				+ O</code></li>
				<li><input type="radio" value="d" name="q74"> <code>+ + + + O L 
				L E H</code></li>
				<li><input type="radio" value="e" name="q74"> None of the above</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">75.</p></td>
		<td colspan="2">A multiple-choice test contains 25 questions. The 
		correct answers include five A's, five B's, five C's, five D's, and five 
		E's. Both Constance and Randy solve the first 15 questions correctly but 
		then run out of time. Constance picks the letter (or one of the letters) 
		that is least frequent among the first 15 answers and fills the 
		remaining 10 answers with this letter. Randy picks random answers for 
		the remaining 10 questions, but he makes sure that at the end each 
		letter A-E appears exactly five times among all 25 answers. Which of the 
		following statements is FALSE?&nbsp;</td>
	</tr>
	<tr>
		<td width="52"><div id="75_div" style="visibility:hidden">
			<img id="75_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q75"> Randy and 
				Constance can get the same score</li>
				<li><input type="radio" value="b" name="q75"> Randy's score can 
				be any number from 15 to 25</li>
				<li><input type="radio" value="c" name="q75"> Constance scores 
				not more than 17</li>
				<li><input type="radio" value="d" name="q75"> Constance scores 
				not more than 20</li>
				<li><input type="radio" value="e" name="q75"> Neither Randy nor 
				Constance can score exactly 24</li>
				</ol>
		</td></tr>
	<tr>
		<td colspan="3" align="center" bgcolor="#C0C0C0">
		<a name="2002"></a>2002</td>
	</tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">76.</p></td>
		<td colspan="2">If<code> a</code> is and <code>int</code> array of 
		length 2 and <code>a[0] </code>and <code>a[1]</code> holds values 7 and 
		13 respectively, what are their values after<code> fun(a)</code> is 
		called? The method <code>fun</code> is defined as follows:<blockquote>
			<p><code>public void fun(int[] x)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; x[0] = (int)(100.0 * x[0] / (x[0] + x[1]));<br>
&nbsp;&nbsp;&nbsp;&nbsp; x[1] = (int)(100.0 * x[1] / (x[0] + x[1]));<br>
			} </code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="76_div" style="visibility:hidden">
			<img id="76_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q76"> 7 and 13</li>
				<li><input type="radio" value="b" name="q76"> 35 and 27</li>
				<li><input type="radio" value="c" name="q76"> 34 and 64</li>
				<li><input type="radio" value="d" name="q76"> 35 and 65</li>
				<li><input type="radio" value="e" name="q76"> 34 and 66</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">77.</p></td>
		<td colspan="2">Consider a method<blockquote>
			<p><code>public boolean isProcessedX(int n, int[] v)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (n &gt;= 2 &amp;&amp; isProcessedX(n-1, v))<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v[n-1] = v[n-2];<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return true;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;<br>
			}</code></p>
		</blockquote>
		<p>What happens if an <code>int</code> array <code>s </code>holds values 
		1, 2, 3, 4, 5 and<code> isProcessedX(5, s)</code> is called?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="77_div" style="visibility:hidden">
			<img id="77_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q77"> <code>s</code> 
				holds 1, 2, 3, 4, 5 and <code>isProcessedX</code> returns <code>
				false</code></li>
				<li><input type="radio" value="b" name="q77"> <code>s</code> 
				holds 1, 2, 3, 4, 4 and <code>isProcessedX</code> returns <code>
				true</code></li>
				<li><input type="radio" value="c" name="q77"> <code>s</code> 
				holds 1, 1, 1, 1, 1 and <code>isProcessedX</code> returns <code>
				true</code></li>
				<li><input type="radio" value="d" name="q77"> <code>
				indexOutOfBoundsException</code></li>
				<li><input type="radio" value="e" name="q77"> Stack overflow 
				error</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">78.</p></td>
		<td colspan="2">An array <code>mix</code> holds seven elements. For 
		which seven values in <code>mix</code> will the value of the variable
		<code>property</code> be <code>true</code> after the following code 
		segments is executed?<blockquote>
			<p><code>int i;<br>
			boolean property = true;</code></p>
			<p><code>for (i = 1; i &lt; 6; i++)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (mix[i] &gt;= mix[i-1] || mix[i] &gt;= mix[i+1])<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; property = false;<br>
			} </code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="78_div" style="visibility:hidden">
			<img id="78_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q78"> 1, 2, 3, 4, 5, 6, 
				7</li>
				<li><input type="radio" value="b" name="q78"> 7, 6, 5, 4, 3, 2, 
				1</li>
				<li><input type="radio" value="c" name="q78"> 7, 1, 6, 2, 5, 3, 
				4</li>
				<li><input type="radio" value="d" name="q78"> 1, 2, 3, 4, 3, 2, 
				1</li>
				<li><input type="radio" value="e" name="q78"> 1, 5, 2, 6, 3, 7, 
				4</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">79. <font size="1">(AB)</font></p></td>
		<td colspan="2">The class <code>Game</code> has a data member<code> 
		char[][] board</code> and a constructor defined as follows:<blockquote>
			<p><code>public Game()<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; board = new char[4][4];<br>
&nbsp;&nbsp;&nbsp;&nbsp; int r, c;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; for (r = 0; r &lt; 4; r++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (c = 0; c &lt; 4; c++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			board[r][c] = '.';</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; for (r = 0; r &lt; 4; r++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; board[r][(r + 1) % 4] = 
			'x';<br>
			}</code></p>
		</blockquote>
		What values are stored in <code>board</code> when a <code>Game</code> 
		object is constructed with the above constructor?</td>
	</tr>
	<tr>
		<td width="52"><div id="79_div" style="visibility:hidden">
			<img id="79_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<table border="0" width="1188">
					<tbody><tr>
						<td width="237" valign="top">a.<input type="radio" value="a" name="q79"><code>&nbsp;&nbsp;&nbsp;&nbsp;...x<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..x.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .x..<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x...</code></td>
						<td width="237" valign="top">b.<input type="radio" value="b" name="q79"><code>&nbsp;&nbsp;&nbsp;&nbsp;..x.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .x..<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x...<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...x</code></td>
						<td width="237" valign="top">c.<input type="radio" value="c" name="q79"><code>&nbsp;&nbsp;&nbsp;&nbsp;...x<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x...<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .x..<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..x.</code></td>
						<td width="237" valign="top">d.<input type="radio" value="d" name="q79"><code>&nbsp;&nbsp;&nbsp;&nbsp;.x..<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..x.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...x<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x...</code></td>
						<td width="238" valign="top">e.<input type="radio" value="e" name="q79"><code>&nbsp;&nbsp;&nbsp;&nbsp;.x..<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x...<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...x<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..x.</code></td>
					</tr>
				</tbody></table>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">80.</p></td>
		<td colspan="2">Consider the following method <code>prepare</code>:<blockquote>
			<p><code>public String prepare(String s)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; int k = s.length() / 2;<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (k &lt;= 1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return s;<br>
&nbsp;&nbsp;&nbsp;&nbsp; return s.charAt(k - 1) + prepare(s.substring(0, k - 1) 
			+ s.substring(k + 1, 2*k)) + s.charAt(k);<br>
			} </code></p>
		</blockquote>
		<p>what does<code> prepare("LEMONADE") </code>return?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="80_div" style="visibility:hidden">
			<img id="80_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q80"> <code>ONMAEDLE</code></li>
				<li><input type="radio" value="b" name="q80"> <code>OLEMADEN</code></li>
				<li><input type="radio" value="c" name="q80"> <code>OMELEDAN</code></li>
				<li><input type="radio" value="d" name="q80"> <code>OOOONNNN</code></li>
				<li><input type="radio" value="e" name="q80"> <code>LEMONADE</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">81.</p></td>
		<td colspan="2">What are the values of <code>a</code> and <code>b</code> 
		after the following code fragment is executed?<blockquote>
			<p><code>int a = 3, b = 5, s;<br>
			for (int i = 0; i &lt; 10; i++)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; s = a + b;<br>
&nbsp;&nbsp;&nbsp;&nbsp; b = a - b;<br>
&nbsp;&nbsp;&nbsp;&nbsp; a = s;<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="81_div" style="visibility:hidden">
			<img id="81_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q81"> 0 and 96</li>
				<li><input type="radio" value="b" name="q81"> 96 and 0</li>
				<li><input type="radio" value="c" name="q81"> 96 and 96</li>
				<li><input type="radio" value="d" name="q81"> 96 and 160</li>
				<li><input type="radio" value="e" name="q81"> 160 and 96</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">82.</p></td>
		<td colspan="2">If <code>int</code> <code>weekDay</code> contains the 
		code for the day of the week on November 1 (0 for Sunday, 1 for Monday, 
		..., 6 for Saturday), which of the following expressions gives the date 
		for Thanksgiving (the fourth Thursday in November)?</td>
	</tr>
	<tr>
		<td width="52"><div id="82_div" style="visibility:hidden">
			<img id="82_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q82"> <code>weekDay + 26</code></li>
				<li><input type="radio" value="b" name="q82"> <code>26 - weekDay</code></li>
				<li><input type="radio" value="c" name="q82"> <code>(4 - weekDay) 
				% 7 + 22</code></li>
				<li><input type="radio" value="d" name="q82"> <code>(11 - 
				weekDay) % 7 + 22</code></li>
				<li><input type="radio" value="e" name="q82"> <code>(weekDay + 
				3) % 7 + 22</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">83.</p></td>
		<td colspan="2">The method average3 below "simultaneously" replaces all 
		elements in an array. Each element is replaced with the average of that 
		element's current value and its left and right neighbors. If a 
		"neighbor" is outside the array, its value is assumed to be 0:<blockquote>
			<p><code>public void average3 (double a[])<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; int i, len = a.length;<br>
&nbsp;&nbsp;&nbsp;&nbsp; double tempSaved[] = new double[len];<br>
&nbsp;&nbsp;&nbsp;&nbsp; for (i = 0; i &lt; len; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tempSaved[i] = a[i];</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; double leftNeighbor, rightNeighbor;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; for (i = 0; i &lt; len; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (i &gt; 0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			leftNeighbor = tempSaved[i-1];<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			leftNeighbor = 0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (i &lt; len - 1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			rightNeighbor = tempSaved[i+1];<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			rightNeighbor = 0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[i] = (leftNeighbor = 
			tempSaved[i] = rightNeighbor) / 3;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		<p>Suppose the first and lest elements in <code>v</code> are zeroes. 
		Which of the following statements is FALSE after <code>average3(v)</code> 
		is called? (Disregard all inaccuracies that may be introduced due to 
		floating-point arithmetic.)</p></td>
	</tr>
	<tr>
		<td width="52"><div id="83_div" style="visibility:hidden">
			<img id="83_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q83"> If <code>v</code> 
				holds the values 0, 3, 6, 9, 12, 9, 6, 3, 0, the resulting array 
				will hold 1, 3, 6, 9, 10, 9, 6, 3, 1.</li>
				<li><input type="radio" value="b" name="q83"> The sum of all the 
				elements in <code>v</code> remain the same.</li>
				<li><input type="radio" value="c" name="q83"> If in the original 
				array the sum of all the values in even positions, <code>v[0] + 
				v[2] + ...</code>, is the same as the sum of all the values in 
				the odd positions, <code>v[1] + v[3] + ...</code>, then the same 
				will remain true for the resulting array.</li>
				<li><input type="radio" value="e" name="q83"> The maximum value 
				in the resulting array does not exceed the maximum value in the 
				original array.</li>
				<li><input type="radio" value="e" name="q83"> The position of 
				the maximum element in the resulting array remains the same as 
				in the original array or shifts to one of the two neighboring 
				positions.</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">84. <font size="1">(AB)</font></p></td>
		<td colspan="2">An array <code>arr</code> contains <code>n</code> 
		integer elements whose values form an arithmetic sequence (i.e., <code>
		arr[i+1] - arr[i] == arr[i] - arr[i-1]</code> for any 0 &lt;<code> i </code>
		&lt; <code>n</code>-1). Whatr is the "big-O" for an optimal algorithm that 
		determines whether such an array contains two given values?</td>
	</tr>
	<tr>
		<td width="52"><div id="84_div" style="visibility:hidden">
			<img id="84_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q84"> <i>O</i>(1)</li>
				<li><input type="radio" value="b" name="q84"> <i>O</i>(log <i>n</i>)</li>
				<li><input type="radio" value="c" name="q84"> <i>O</i>(2 log <i>n</i>)</li>
				<li><input type="radio" value="d" name="q84"> <i>O</i>(<i>n</i>)</li>
				<li><input type="radio" value="e" name="q84"> <i>O</i>(<i>n</i><sup>2</sup>)</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">85.</p></td>
		<td colspan="2">Given<blockquote>
			<p><code>Random generator = new Random();<br>
			int bigNum = 10000;<br>
			int r = generator.nextInt(bignum);</code></p>
		</blockquote>
		<p>which of the following expressions is the best way to initialize
		<code>x</code> to the value of a randomly chosen element from an array
		<code>arr</code> of 3 values? (The odds for choosing any element must be 
		the same or almost the same.)</p></td>
	</tr>
	<tr>
		<td width="52"><div id="85_div" style="visibility:hidden">
			<img id="85_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q85"> <code>x = arr[r / 
				bignum * 3];</code></li>
				<li><input type="radio" value="b" name="q85"> <code>x = arr[(int)(3.0 
				* r / bignum)];</code></li>
				<li><input type="radio" value="c" name="q85"> <code>x = arr[(int)(2.9 
				* r / bignum)];</code></li>
				<li><input type="radio" value="d" name="q85"> <code>x = arr[(int)(3.0 
				* (r - 1) / (bignum -1)];</code></li>
				<li><input type="radio" value="e" name="q85"> <code>x = arr[3 * 
				(int)((double) r / bigNum)];</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">86.</p></td>
		<td colspan="2">Given three integer variables, <code>a</code>, <code>b</code>, 
		and <code>c</code>, with small non-negative values, which of the 
		following code fragments tests the condition that any two of the values 
		are zeroes while the third one is positive? The variable <code>ok</code> 
		should be set to true if and only if the above condition is true.<blockquote>
			<blockquote>
			<p>I.<code>&nbsp;&nbsp;&nbsp;&nbsp; boolean ok =<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a == 0 &amp;&amp; b == 0 &amp;&amp; c &gt; 0 ||<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b == 0 &amp;&amp; c == 0 &amp;&amp; a &gt; 0 ||<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c == 0 &amp;&amp; a == 0 &amp;&amp; b &gt; 0;<br>
			</code>II.<code>&nbsp;&nbsp;&nbsp;&nbsp; boolean ok = a + b + c &gt; 0 
			&amp;&amp; a*b + b*c + c*a == 0;<br></code>III.<code>&nbsp;&nbsp;&nbsp; 
			boolean ok = a &gt; 0 || b &gt; 0 || c &gt; 0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (ok) ok = a + b == 0 || b + c == 0 || c + a == 
			0;</code></p>
		</blockquote>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="86_div" style="visibility:hidden">
			<img id="86_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q86"> I only</li>
				<li><input type="radio" value="b" name="q86"> II only</li>
				<li><input type="radio" value="c" name="q86"> I and II</li>
				<li><input type="radio" value="d" name="q86"> I and III</li>
				<li><input type="radio" value="e" name="q86"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		&nbsp;</td>
		<td colspan="2"><b>Questions 87-91 are based on the following classes:</b><blockquote>
			<p><code>public class Person implements Comparable<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; private String name;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public Person(String name) { 
			this.name = name; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; public String getName() { return name; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public boolean equals(Object 
			other)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return other != null &amp;&amp; 
			name.equals(((Person) other).name);<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public int compareTo(Object other)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 
			name.compareTo((Person other).name);<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public int hashCode() { return 
			name.hashCode(); }<br>
			}</code></p>
			<p><code>public class SoccerPlayer extends person<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; private int numGoals;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public SoccerPlayer(String name, 
			int n)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; super(name);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; numGoals = n;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public int getNumGoals() { return 
			numGoals; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; public void score() [ numGoals++; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public int compareTo(SoccerPlayer 
			other)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return getNumGoals() 
			- other.getNumGoals();<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public String toString()<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return gatName() + "/" + 
			getNumGoals();<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">87.</p></td>
		<td colspan="2">Which of the following declarations is invalid?</td>
	</tr>
	<tr>
		<td width="52"><div id="87_div" style="visibility:hidden">
			<img id="87_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q87"> <code>Person p = 
				new Person("Mia Hamm");</code></li>
				<li><input type="radio" value="b" name="q87"> <code>SoccerPlayer 
				p = new Person("Mia Hamm");</code></li>
				<li><input type="radio" value="c" name="q87"> <code>Comparable p 
				= new Person("Mia Hamm");</code></li>
				<li><input type="radio" value="d" name="q87"> <code>Person p = 
				new SoccerPlayer("Kristine Lilly", 0);</code></li>
				<li><input type="radio" value="e" name="q87"> <code>Comparable p 
				= new SoccerPlayer("Kristine Lilly", 0);</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">88.</p></td>
		<td colspan="2">What is the result of the following code?<blockquote>
			<p><code>Person players[] = { new SoccerPlayer("Mia Hamm", 7), new 
			SoccerPlayer("Kristine Lilly", 6) };<br>
			System.out.println(players[0].compareTo((SoccerPlayer) players[1]));&nbsp;&nbsp;&nbsp;&nbsp; 
			// Line ***</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="88_div" style="visibility:hidden">
			<img id="88_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q88"> Syntax error in 
				the class<code> Person: other.name</code> is not accessible</li>
				<li><input type="radio" value="b" name="q88"> Syntax error in 
				the class <code>SoccerPlayer: compareTo</code> is redefined</li>
				<li><input type="radio" value="c" name="q88"> <code>
				ClassCaseException</code> on Line ***</li>
				<li><input type="radio" value="d" name="q88"> Compiles with no 
				errors, displays 1</li>
				<li><input type="radio" value="e" name="q88"> Compiles with no 
				errors, displays 2</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">89. <font size="1">(AB)</font></p></td>
		<td colspan="2">Suppose the <code>Person</code> and <code>SoccerPlayer</code> 
		classes are changed as follows:<p><code>other.name</code> is replaced 
		with o<code>ther.getame()</code> and <code>compareTo</code> in <code>
		SoccerPlayer</code> is renamed into <code>compareGoals</code>. What will 
		be the result of running the following code segment?</p>
		<blockquote>
			<p><code>SoccerPlayer mia = new SoccerPlayer("Mia Hamm", 6);<br>
			SoccerPlayer kristine = new SoccerPlayer("Kristine Lilly", 5);<br>
			Set team = new HashSet();<br>
			team.add(mia);<br>
			team.add(kristine);<br>
			kristine.score();<br>
			team.add(kristine);<br>
			Iterator iter = team.Iterator();&nbsp;&nbsp;&nbsp;&nbsp; // Line ***<br>
			while(iter.hasNext())<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(iter.next() + " ");</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="89_div" style="visibility:hidden">
			<img id="89_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q89"> <code>Kristine 
				Lilly/5 Mia Hamm/6</code></li>
				<li><input type="radio" value="b" name="q89"> <code>Kristine 
				Lilly/6 Mia Hamm/6</code></li>
				<li><input type="radio" value="c" name="q89"> <code>Mia Hamm/6 
				Kristine Lilly/5 Kristine Lilly/6</code></li>
				<li><input type="radio" value="d" name="q89"> <code>Kristine 
				Lilly/5 Kristine Lilly/6 Mia Hamm/6</code></li>
				<li><input type="radio" value="e" name="q89"> Syntax error on 
				Line ***</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		&nbsp;</td>
		<td colspan="2"><b>Questions 90-91 are concerned with a class SoccerTeam 
		that represents a team of soccer players:</b><blockquote>
			<p><code>public class SoccerTeam<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; private SoccerPlayer[] players;<br>
&nbsp;&nbsp;&nbsp;&nbsp; private ArrayList mvps;&nbsp;&nbsp;&nbsp;&nbsp; //holds 
			all the players who scored the same highest number of goals</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public void score(int k)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; players[k].score();&nbsp;&nbsp;&nbsp;&nbsp; 
			// Line *1*<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int goals = 
			players[k].getNumGoals();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int maxGoals = ((SoccerPlayer) 
			mvps.get(0)).getNumGoals();&nbsp;&nbsp;&nbsp;&nbsp; // Line *2*<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (goals &gt;= maxGoals)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			if (goals == maxGoals)&nbsp;&nbsp;&nbsp;&nbsp; // Line *3*<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			mvps.add(players[k]);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			// mvps is left with only one player in it, players[k]:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			&lt; <i>missing statements</i> &gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; &lt; <i>constructors and other 
			methods not shown</i> &gt;<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">90.</p></td>
		<td colspan="2"><code>SoccerTeam</code>'s <code>score</code> method is 
		intended to update the number of scored goals for a given player on the 
		team and update the list of "most valuable players" (all of whom have 
		the same score, the highest on the team). If the player's new score is 
		higher than the old best, the <code>mvps</code> list is updated to 
		contain only that one player. However, the <code>score</code> method has 
		an error. Which of the following actions would correct that error?<blockquote>
			<p>I.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Move Line *2* before Line *1*<br>
			II.&nbsp;&nbsp;&nbsp;&nbsp; Replace Line *3* with<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>&nbsp;if (goals == maxGoals &amp;&amp; 
			players[k] != mvps.get(0))</code><br>III.&nbsp;&nbsp;&nbsp;&nbsp; 
			Replace Line *3* with<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>&nbsp;if (goals == 
			maxGoals &amp;&amp; != mvps.contains(players[k]))</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="90_div" style="visibility:hidden">
			<img id="90_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q90"> I only</li>
				<li><input type="radio" value="b" name="q90"> II only</li>
				<li><input type="radio" value="c" name="q90"> I and II</li>
				<li><input type="radio" value="d" name="q90"> II and III</li>
				<li><input type="radio" value="e" name="q90"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">91.</p></td>
		<td colspan="2">Which of the following would be an appropriate 
		replacement for <code>&lt; <i>missing statements</i> &gt;</code> in <code>
		SoccerTeam</code>'s <code>score</code> method?</td>
	</tr>
	<tr>
		<td width="52"><div id="91_div" style="visibility:hidden">
			<img id="91_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q91"> <code>mvps.set(0, 
				players[k]);</code></li>
				<li><input type="radio" value="b" name="q91"> <code>
				mvps.reize(0);<br>
&nbsp;&nbsp; mvps.add(players[k]);</code></li>
				<li><input type="radio" value="c" name="q91"> <code>mvps = new 
				ArrayList();<br>
&nbsp;&nbsp; mvps.add(players[k]);</code></li>
				<li><input type="radio" value="d" name="q91"> <code>mvps = new 
				ArrayList(1);<br>
&nbsp;&nbsp; mvps.set(0, players[k]);</code></li>
				<li><input type="radio" value="e" name="q91"> <code>delete mvps;<br>
&nbsp;&nbsp; mvps = new ArrayList():<br>
&nbsp;&nbsp; mvps.add(players[k]);</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">92. <font size="1">(AB)</font></p></td>
		<td colspan="2">The elements in an array of size n are first increasing 
		(a[i] &lt; a[i+1]), until they reach a maximum value, then decreasing (a[i] 
		&gt; a[i+1]). What are the respective "big-O" estimates for the number of 
		comparisons in two optimal algorithms, one that finds a maximum value in 
		such an array and the other that sorts the array in ascending order?</td>
	</tr>
	<tr>
		<td width="52"><div id="92_div" style="visibility:hidden">
			<img id="92_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q92"> <i>O</i>(log<i>
				<sup>2</sup></i>) and <i>O</i>(<i>n</i>)</li>
				<li><input type="radio" value="b" name="q92"> <i>O</i>(log <i>n</i>) 
				and <i>O</i>(<i>n</i> log <i>n</i>)</li>
				<li><input type="radio" value="c" name="q92"> <i>O</i>(<i>n</i>) 
				and <i>O</i>(<i>n</i>)</li>
				<li><input type="radio" value="d" name="q92"> <i>O</i>(<i>n</i>) 
				and <i>O</i>(<i>n</i> log <i>n</i>)</li>
				<li><input type="radio" value="e" name="q92"> <i>O</i>(<i>n</i>) 
				and <i>O</i>(<i>n</i><sup>2</sup>)</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">93. <font size="1">(AB)</font></p></td>
		<td colspan="2">What is the output from the following code segment?<blockquote>
			<p><code>Set set = new TreeSet();<br>
			String str = "A";<br>
			set.add(str);<br>
			str += "B";<br>
			set.add(str);<br>
			str += "C";<br>
			set.add(str);<br>
			Iterator iter = set.Iterator();<br>
			while (iter.hasNext())<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(iter.next() + "-");</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="93_div" style="visibility:hidden">
			<img id="93_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q93"> A-</li>
				<li><input type="radio" value="b" name="q93"> ABC-</li>
				<li><input type="radio" value="c" name="q93"> A-B-C-</li>
				<li><input type="radio" value="d" name="q93"> A-AB-ABC-</li>
				<li><input type="radio" value="e" name="q93"> None of the above</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">94. <font size="1">(AB)</font></p></td>
		<td colspan="2">Suppse <code>ListNode</code> <code>p1, p2</code> 
		initially refer to two nodes in the same circular linked list. Under 
		what conditions does the following loop terminate?<blockquote>
			<p><code>do<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; p1 = p1.getNext();<br>
&nbsp;&nbsp;&nbsp;&nbsp; p2 = ps.getNext().getNext();<br>
			} while (p1 != p2);</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="94_div" style="visibility:hidden">
			<img id="94_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q94"> Always</li>
				<li><input type="radio" value="b" name="q94"> If and only if
				<code>p1 == p2.getNext()</code></li>
				<li><input type="radio" value="c" name="q94"> If and only if the 
				total number of nodes in the list is even</li>
				<li><input type="radio" value="d" name="q94"> If and only if the 
				number of nodes from <code>p2</code> to <code>p1</code> 
				(excluding both ends of this segment of the list) is even</li>
				<li><input type="radio" value="e" name="q94"> If and only if the 
				list contains two nodes with the same <code>info</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">95. <font size="1">(AB)</font></p></td>
		<td colspan="2">What does the following code display?<blockquote>
			<p><code>String expr = "(a + b) / (2 * (a - b)";<br>
			Stack stk = new ArrayStack();<br>
			int i, k;</code></p>
			<p><code>for (k = 0; k &lt; expr.length(); k++)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (expr.charAt(k) == '(')<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stk.push(new Integer(k + 
			1));<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = ((Integer) stk.pop()).intValue();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			System.out.println(expr.substring(i, k));<br>
&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="95_div" style="visibility:hidden">
			<img id="95_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q95"> <code>(2 * (a - 
				b))<br>
&nbsp;&nbsp; (a - b)<br>
&nbsp;&nbsp; (a + b)</code></li>
				<li><input type="radio" value="b" name="q95"> <code>(a - b)<br>
&nbsp;&nbsp; (2 * (a - b))<br>
&nbsp;&nbsp; (a + b)</code></li>
				<li><input type="radio" value="c" name="q95"> <code>&nbsp;a - b<br>
&nbsp;&nbsp;&nbsp; a + b<br>
&nbsp;&nbsp; (2 * (a - b))</code></li>
				<li><input type="radio" value="d" name="q95"> <code>&nbsp;a + b<br>
&nbsp;&nbsp;&nbsp; a - b<br>
&nbsp;&nbsp;&nbsp; 2 * a - b</code></li>
				<li><input type="radio" value="e" name="q95"> <code>&nbsp;a + b)<br>
&nbsp;&nbsp;&nbsp; a - b)<br>
&nbsp;&nbsp;&nbsp; 2 * (a - b))</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">96.</p></td>
		<td colspan="2">The following method packed analyzes a string passed to 
		it and returns a new string:<blockquote>
			<p><code>String packed(String msg)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; String packedMsg = "";</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; msg.length(); 
			i+)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (msg.charAt(i) !- '.')<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			int len = packedMsg.length();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			if (len == 0 || msg.charAt(i) != packedMsg.charAt(len-1))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			packedMsg += msg.substring(i, i+1);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; return packedMsg;<br>
			}</code></p>
		</blockquote>
		<p>For which of the following values of <code>msg</code>, is<code> 
		packed(msg)</code> NOT equal to <code>packed("xxo.ooo.xx.x")</code>?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="96_div" style="visibility:hidden">
			<img id="96_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q96"><code>xxo..ooo..xx..x</code></li>
				<li><input type="radio" value="b" name="q96"><code>..xxooooooxxxx..</code></li>
				<li><input type="radio" value="c" name="q96"><code>xxoooxxx</code></li>
				<li><input type="radio" value="d" name="q96"><code>xxooooooxxox</code></li>
				<li><input type="radio" value="e" name="q96"><code>xox</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">97. <font size="1">(AB)</font></p></td>
		<td colspan="2">What is the value of <code>sum</code> after the 
		following code is executed?<blockquote>
			<p><code>int sum = 0;<br>
			int r = 0, c = 0;<br>
			int temp, d1 = 1; d2 = 2;<br>
			int table[][] = new int[8][8];</code></p>
			<p><code>for (int k = 0; k &lt; 64; k++)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; table [r][c] = 1;<br>
&nbsp;&nbsp;&nbsp;&nbsp; r = (r + d1) % 8;<br>
&nbsp;&nbsp;&nbsp;&nbsp; c = (c + d2) % 8;<br>
&nbsp;&nbsp;&nbsp;&nbsp; temp = d1; d1 = d2; d2 = temp;<br>
			}</code></p>
			<p><code>for (r = 0; r &lt; 8; r++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; for (c = 0; c &lt; 8; c++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum += table[r][c];</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="97_div" style="visibility:hidden">
			<img id="97_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q97"> 8</li>
				<li><input type="radio" value="b" name="q97"> 15</li>
				<li><input type="radio" value="c" name="q97"> 16</li>
				<li><input type="radio" value="d" name="q97"> 22</li>
				<li><input type="radio" value="e" name="q97"> 64</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		&nbsp;</td>
		<td colspan="2"><b>Questions 98-99 assume that TreeNode root points to 
		the following binary tree:</b><p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		A<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		/ \<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		B&nbsp;&nbsp; C<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		/&nbsp;&nbsp; / \<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		D&nbsp;&nbsp; E&nbsp;&nbsp; F<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		G</code></p></td>
	</tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">98. <font size="1">(AB)</font></p></td>
		<td colspan="2">Consider the following method <code>traverse</code>:<blockquote>
			<p><code>void traverse(TreeNode root)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (root != null)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; traverse(root.getLeft());<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; traverse(root.getRight());<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			System.out.print(root.getValue());<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; traverse(root(getRight());<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; traverse(root.getLeft());<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		How many letters will be displayed when <code>traverse(root)</code> is 
		called?</td>
	</tr>
	<tr>
		<td width="52"><div id="98_div" style="visibility:hidden">
			<img id="98_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q98"> 1</li>
				<li><input type="radio" value="b" name="q98"> 7</li>
				<li><input type="radio" value="c" name="q98"> 13</li>
				<li><input type="radio" value="d" name="q98"> 14</li>
				<li><input type="radio" value="e" name="q98"> 25</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">99. <font size="1">(AB)</font></p></td>
		<td colspan="2">Consider the following method:<blockquote>
			<p><code>public void grow(TreeNode root)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (root !- null)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (root.getLeft() != 
			null &amp;&amp; root.getRight != null)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			root.setRight(new TreeNode("X", null, null));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else if (root.getLeft() 
			== null &amp;&amp; root.getRight != null)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			root.setLeft("X", null, null));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; grow(root.getLeft());<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; grow(root.getRight());<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		<p>Which of the following represents the resulting tree after <code>
		grow(root)</code> is called?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="99_div" style="visibility:hidden">
			<img id="99_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<table border="0" width="960" id="table2">
					<tbody><tr>
						<td width="156" valign="top">a.<input type="radio" value="a" name="q99"><code>&nbsp;&nbsp; 
		A<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		/ \<br>&nbsp;&nbsp;&nbsp;&nbsp; 
		B&nbsp;&nbsp; C<br>&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp; / \<br>&nbsp;&nbsp;&nbsp;D&nbsp;&nbsp; E&nbsp;&nbsp; F<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		G<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
						X</code></td>
						<td width="150" valign="top">b.<input type="radio" value="b" name="q99"><code>&nbsp;&nbsp;&nbsp; A<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; / \<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		/&nbsp;&nbsp; \<br>&nbsp;&nbsp;&nbsp;&nbsp; 
		B&nbsp;&nbsp;&nbsp;&nbsp; C<br>&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;\&nbsp;&nbsp; / \<br>&nbsp;&nbsp;&nbsp;D&nbsp;&nbsp; 
						X E&nbsp;&nbsp; F<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
						/ \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;&nbsp; G</code></td>
						<td width="246" valign="top">c.<input type="radio" value="c" name="q99"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
						\<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		/&nbsp;&nbsp; \&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&nbsp;&nbsp; \<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		D&nbsp;&nbsp;&nbsp;&nbsp; X&nbsp;&nbsp;&nbsp; E&nbsp;&nbsp;&nbsp;&nbsp; F<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;\&nbsp;&nbsp; /&nbsp;\&nbsp; / \&nbsp;&nbsp; 
						/ \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;&nbsp; X&nbsp;X&nbsp;&nbsp;X X&nbsp;&nbsp; 
						X X&nbsp;&nbsp; X</code></td>
						<td width="235" valign="top">d.<input type="radio" value="d" name="q99"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&nbsp;&nbsp;&nbsp; 
						\<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		/&nbsp;\&nbsp;&nbsp;&nbsp;&nbsp; /&nbsp;&nbsp; \<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		D&nbsp;&nbsp; X&nbsp;&nbsp; E&nbsp;&nbsp;&nbsp;&nbsp; F<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;\&nbsp;&nbsp;&nbsp; &nbsp;/ \&nbsp;&nbsp; 
						/ \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X&nbsp;&nbsp; X&nbsp;&nbsp; X&nbsp;&nbsp; X 
						X&nbsp;&nbsp; G<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
						/ \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
						X&nbsp;&nbsp; X</code></td>
						<td width="152" valign="top">e.<input type="radio" value="e" name="q99"> 
						None of the above</td>
					</tr>
				</tbody></table>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">100.</p></td>
		<td colspan="2">An exam contains 24 questions for 40 minutes. Some 
		questions are easy, while other questions are really hard. Constance and 
		Skip always solve any easy question in 20 seconds, but a hard question 
		always takes each of them 3 minutes. Constance's strategy is to take 
		each question in turn and take whatever time it takes to solve it. Skip 
		tries a question for 20 seconds and if he can't solve it, he moves on to 
		the next one. If he has looked at all the questions, Skip returns to the 
		unsolved hard questions, but he has to start solving them from scratch 
		because by then he has forgotten what they were about. If the first half 
		of the test contains at least 8 easy questions and the second half 
		contains at least 8 hard questions, which of the following statements is 
		FALSE?</td>
	</tr>
	<tr>
		<td width="52"><div id="100_div" style="visibility:hidden">
			<img id="100_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q100"> Skip will solve 
				at least 18 questions</li>
				<li><input type="radio" value="b" name="q100"> Constance will 
				solve at least 20 questions</li>
				<li><input type="radio" value="c" name="q100"> If at most 10 of 
				the questions are hard, both Skip and Constance will solve all 
				24 questions</li>
				<li><input type="radio" value="d" name="q100"> Skip will solve 
				at most 10 hard questions</li>
				<li><input type="radio" value="e" name="q100"> Constance will 
				always solve at least as many questions as Skip</li>
				</ol>
		</td></tr>
	<tr>
		<td colspan="3" bgcolor="#C0C0C0">
		<p align="center"><a name="2001"></a>2001</p></td>
	</tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">101.</p></td>
		<td colspan="2">What is the output of the following code?<blockquote>
			<p><code>int a = 1, b = 2, c = 3;<br>
			a += b + c;<br>
			b += a + c;<br>
			c += a + b;<br>
			System.out.println(a + " " + b + " " + c);</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="101_div" style="visibility:hidden">
			<img id="101_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q101"> <code>3 3 4</code></li>
				<li><input type="radio" value="b" name="q101"> <code>3 5 6</code></li>
				<li><input type="radio" value="c" name="q101"> <code>5 4 3</code></li>
				<li><input type="radio" value="d" name="q101"> <code>5 8 13</code></li>
				<li><input type="radio" value="e" name="q101"> <code>6 11 20</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">102.</p></td>
		<td colspan="2">Consider two methods:<blockquote>
			<p><code>public int f(int x)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; return x + 2;<br>
			} </code></p>
		</blockquote>
		<p>and</p>
		<blockquote>
			<p><code>public int g(int x)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; return x * 2;<br>
			} </code></p>
		</blockquote>
		<p>What is the value of <code>x</code> after the following code 
		executes?</p>
		<blockquote>
			<p><code>int x = 1;<br>
			x += f(g(x)) - g(f(x)); </code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="102_div" style="visibility:hidden">
			<img id="102_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q102"> -9</li>
				<li><input type="radio" value="b" name="q102"> -2</li>
				<li><input type="radio" value="c" name="q102"> -1</li>
				<li><input type="radio" value="d" name="q102"> 3</li>
				<li><input type="radio" value="e" name="q102"> 7</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">103.</p></td>
		<td colspan="2">What is the value of <code>y </code>after the following 
		code is executed?<blockquote>
			<p><code>int x = 123;<br>
			while (x &gt; 0)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; y *= 10;<br>
&nbsp;&nbsp;&nbsp;&nbsp; y += x % 10;<br>
&nbsp;&nbsp;&nbsp;&nbsp; x /= 10;<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="103_div" style="visibility:hidden">
			<img id="103_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q103"> 1</li>
				<li><input type="radio" value="b" name="q103"> 3</li>
				<li><input type="radio" value="c" name="q103"> 6</li>
				<li><input type="radio" value="d" name="q103"> 12</li>
				<li><input type="radio" value="e" name="q103"> 321</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">104. <font size="1">(AB)</font></p></td>
		<td colspan="2">The method <code>xWon </code>below is supposed to return
		<code>true</code> is a tic-tac-toe board (represented by a 3-by-3 array 
		of characters) has three <code>x</code>'s in any line, <code>false</code> 
		otherwise:<blockquote>
			<p><code>public boolean xWon (char[][] b)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (b[1][1] == 'x')<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (b[0][0] == 'x' &amp;&amp; 
			b[2][2] == 'x') return true;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (b[0][1] == 'x' &amp;&amp; 
			b[2][1] == 'x') return true;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (b[1][0] == 'x' &amp;&amp; 
			b[1][2] == 'x') return true;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (b[0][2] == 'x' &amp;&amp; 
			b[2][0] == 'x') return true;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; else if (b[0][0] == 'x')<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (b[0][1] == 'x' &amp;&amp; 
			b[0][2] == 'x') return true;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (b[1][0] == 'x' &amp;&amp; 
			b[2][0] == 'x') return true;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; else if (b[2][2] == 'x')<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (b[2][0] == 'x' &amp;&amp; 
			b[2][1] == 'x') return true;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (b[0][2] == 'x' &amp;&amp; 
			b[1][2] == 'x') return true;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; return false;<br>
			} </code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="104_div" style="visibility:hidden">
			<img id="104_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<table border="0" width="1188" id="table3">
					<tbody><tr>
						<td width="237" valign="top">a.<input type="radio" value="a" name="q104"><code>&nbsp;&nbsp;&nbsp;&nbsp;x..<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xxo<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xoo</code></td>
						<td width="237" valign="top">b.<input type="radio" value="b" name="q104"><code>&nbsp;&nbsp;&nbsp;&nbsp;o.x<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ox.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xox</code></td>
						<td width="237" valign="top">c.<input type="radio" value="c" name="q104"><code>&nbsp;&nbsp;&nbsp;&nbsp;xxo<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; o.o<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; oxx</code></td>
						<td width="237" valign="top">d.<input type="radio" value="d" name="q104"><code>&nbsp;&nbsp;&nbsp;&nbsp;x.o<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; oxo<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x.x</code></td>
						<td width="238" valign="top">e.<input type="radio" value="e" name="q104"><code>&nbsp;&nbsp;&nbsp;&nbsp;oox<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; o..<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xxx</code></td>
					</tr>
				</tbody></table>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">105.</p></td>
		<td colspan="2">Consider the following method:<blockquote>
			<p><code>public void divide5 (int[] a, int[] q, int[] r)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; q[0] = a[0] / 5;<br>
&nbsp;&nbsp;&nbsp;&nbsp; r[0] = a[0] % 5;<br>
			} </code></p>
		</blockquote>
		<p>What is the value of <code>y[0] </code>after the following statements 
		are executed?</p>
		<blockquote>
			<p><code>int[] x = {21, 22, 23], y = new int[3];<br>
			divide5(x, y, z); </code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="105_div" style="visibility:hidden">
			<img id="105_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q105"> 0</li>
				<li><input type="radio" value="b" name="q105"> 1</li>
				<li><input type="radio" value="c" name="q105"> 2</li>
				<li><input type="radio" value="d" name="q105"> 4</li>
				<li><input type="radio" value="e" name="q105"> 21</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">106. <font size="1">(AB)</font></p></td>
		<td colspan="2">Suppose the method <code>fun</code> is defined as 
		follows:<blockquote>
			<p><code>public void fun (int m[][], String s)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 1; i &lt; s.length(); i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int r = 
			Character.digit(s.charAt(i), 10);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int c = 
			Character.digit(s.charAt(i - 1), 10);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m[r][c]++;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			} </code></p>
		</blockquote>
		<p>What is the output when the following code fragment is executed?</p>
		<blockquote>
			<p><code>int m[][] = new int[10][10];<br>
			String s = "20012002";</code></p>
			<p><code>fun(m, s);<br>
			int sum = 0;<br>
			for (int k = 0; k &lt; 10; k++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; sum += m[k][k];<br>
			System.out.println(sum); </code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="106_div" style="visibility:hidden">
			<img id="106_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q106"> 1</li>
				<li><input type="radio" value="b" name="q106"> 2</li>
				<li><input type="radio" value="c" name="q106"> 4</li>
				<li><input type="radio" value="d" name="q106"> 7</li>
				<li><input type="radio" value="e" name="q106"> 8</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">107.</p></td>
		<td colspan="2">
		<p>Which of the following conditions is always <code>true</code> after 
		the <code>while</code> loop in the following code fragment has finished 
		(assuming it executes without errors)?</p>
		<blockquote>
			<p><code>int k = 0; n = 10;<br>
			while (k &lt; n &amp;&amp; a[k] &gt;= 0)<br>
&nbsp;&nbsp;&nbsp;&nbsp; k++; </code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="107_div" style="visibility:hidden">
			<img id="107_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q107"> <code>k &gt;= n &amp;&amp; 
				a[k] &lt; 0</code></li>
				<li><input type="radio" value="b" name="q107"> <code>k &lt; n &amp;&amp; 
				a[k] &lt; 0</code></li>
				<li><input type="radio" value="c" name="q107"><code> k &lt; n || 
				a[k] &lt; 0</code></li>
				<li><input type="radio" value="d" name="q107"> <code>k &gt;= n || 
				a[k] &lt; 0</code></li>
				<li><input type="radio" value="e" name="q107"> None of the above</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">108.</p></td>
		<td colspan="2">The method<blockquote>
			<p><code>public boolean xyz (String s)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; return s.length() &gt;= 3 &amp;&amp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ((s.charAt(0) == 
			s.charAt(1) &amp;&amp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			s.charAt(1) == s.charAt(2)) || xyz(s.substring(1)));<br>
			} </code></p>
		</blockquote>
		<p>returns <code>true</code> if and only if</p>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="108_div" style="visibility:hidden">
			<img id="108_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q108"> <code>s</code> 
				contains three or more of the same characters in a row</li>
				<li><input type="radio" value="b" name="q108"> <code>s</code> 
				starts with three or more of the same characters</li>
				<li><input type="radio" value="c" name="q108"> <code>s</code> 
				ends with three or more of the same characters</li>
				<li><input type="radio" value="d" name="q108"> <code>s</code> 
				contains three or more of the same characters</li>
				<li><input type="radio" value="e" name="q108"> <code>s[0]</code> 
				is the same as two other characters in <code>s</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">109.</p></td>
		<td colspan="2">The following version of Selection Sort is supposed to 
		sort an array in ascending order. For better performance it tries to 
		tackle the array from both ends simultaneously:<blockquote>
			<p><code>public void sort (int a[])<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; int left = 0, right = a.length() - 1;<br>
&nbsp;&nbsp;&nbsp;&nbsp; int k;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; while (left &lt; right)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (k = left + 1; k &lt; 
			right; k+)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			if (a[k] &lt; a[left])<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			swap(a, k, left);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			else if (a[k] &gt; a[right])<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			swap(a, k, right);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; left++;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; right--;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			} </code></p>
		</blockquote>
		<p><code>swap(a, i, j)</code> correctly swaps <code>a[i] </code>and<code> 
		a[j]</code>. This code has a bug, though. Which one of the following 
		changes would assure that the method sorts the array correctly?</p><blockquote>
			<p>I.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Remove <code>else</code> in<br>
			<code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else if (a[k] 
			&gt; a[right]) ...<br>
			<br>
			</code>II.&nbsp;&nbsp;&nbsp;&nbsp; Replace<br>
			<code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (k 
			= left + 1; k &lt; right; k+)<br>
			</code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; with<br>
			<code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (k 
			= left; k &lt;= right; k+)<br>
			<br>
			</code>III.&nbsp;&nbsp;&nbsp;&nbsp; Add<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			if (a[left] &gt; a[right])<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			swap(a, left, right);<br>
			</code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at the 
			beginning of the <code>while</code> loop (before the <code>for</code> 
			loop).</p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="109_div" style="visibility:hidden">
			<img id="109_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q109"> I only</li>
				<li><input type="radio" value="b" name="q109"> II only</li>
				<li><input type="radio" value="c" name="q109"> III only</li>
				<li><input type="radio" value="d" name="q109"> I or II</li>
				<li><input type="radio" value="e" name="q109"> II or III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52">
		<p align="left">110. <font size="1">(AB)</font></p></td>
		<td colspan="2">Insertion Sort is a sorting algorithm that works as 
		follows: keep the first k elements of the array sorted; find the right 
		place and insert the next element among the first k. These steps are 
		repeated for k - 1, ..., n. Sequential Search is usually used to find 
		the right spot in which to insert the next element. Suppose we use 
		Binary Search instead of Sequential Search in this algorithm. How would 
		Big-O for the number of comparisons among the elements (not counting the 
		number of moves or swaps) change?</td>
	</tr>
	<tr>
		<td width="52"><div id="110_div" style="visibility:hidden">
			<img id="110_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q110"> No change</li>
				<li><input type="radio" value="b" name="q110"> From <i>O</i>(<i>n</i>) 
				to <i>O</i>(log n)</li>
				<li><input type="radio" value="c" name="q110"> From <i>O</i>(<i>n</i><sup>2</sup>) 
				to <i>O</i>(<i>n</i><sup>2</sup>/2)</li>
				<li><input type="radio" value="d" name="q110"> From <i>O</i>(<i>n</i><sup>2</sup>) 
				to <i>O</i>(n log n)</li>
				<li><input type="radio" value="e" name="q110"> From <i>O</i>(<i>n</i><sup>2</sup>) 
				to <i>O</i>(<i>n</i>)</li>
				</ol>
		</td></tr>
	<tr>
		<td width="53">
		&nbsp;</td>
		<td colspan="2"><b>Questions 111-112 are based on the following class 
		that represents a moving ball on a rectangular pool table:</b><blockquote>
			<p><code>public class MovingBall<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; private int mLength, mWidth;<br>
&nbsp;&nbsp;&nbsp;&nbsp; private int mPosX, mPosY;<br>
&nbsp;&nbsp;&nbsp;&nbsp; private int mDirX, mDirY;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public MovingBall(int length, int 
			width, int dx, int dy)<br>
			&nbsp;&nbsp;&nbsp;&nbsp;
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mLength = length;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mWidth = width;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mPosX = length / 2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mPosY = width / 2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mDirX = dx;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mDirY = dy;<br>
			&nbsp;&nbsp;&nbsp;&nbsp;
			}</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public void move()<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mPosX += mDirX;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mPosY += mDirY;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (mPosX == 0 || mPosX 
			== mLength) mDirX = -mDirX;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id (mPosY == 0 || mPosY 
			== mWidth) mDirY = -mDirY;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">111.</p></td>
		<td colspan="2">Giiven<blockquote>
			<p><code>MovingBall b = new MovingBall(8, 4, 1, -1);</code></p>
		</blockquote>
		<p>what are the values of <code>mPosX</code> and <code>mPosY</code> 
		after 70 moves (i.e., 70 calls to <code>b.move()</code>)?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="111_div" style="visibility:hidden">
			<img id="111_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q111"> 74 and -68</li>
				<li><input type="radio" value="b" name="q111"> 6 and 4</li>
				<li><input type="radio" value="c" name="q111"> 4 and 2</li>
				<li><input type="radio" value="d" name="q111"> 3 and 1</li>
				<li><input type="radio" value="e" name="q111"> 1 and -1</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">112.</p></td>
		<td colspan="2">If<blockquote>
			<p><code>MovingBall b = new MovingBall(9, 4, 1, 1);</code></p>
		</blockquote>
		<p>is defined, how many moves (i.e., calls to <code>b.move()</code>) 
		will ball b hot position <code>mPosX = 6</code>, <code>mPosY = 1</code>?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="112_div" style="visibility:hidden">
			<img id="112_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q112"> Never</li>
				<li><input type="radio" value="b" name="q112"> 2</li>
				<li><input type="radio" value="c" name="q112"> 3</li>
				<li><input type="radio" value="d" name="q112"> 7</li>
				<li><input type="radio" value="e" name="q112"> 30</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">113.</p></td>
		<td colspan="2">Suppose all the elements in an array have different 
		values. Let us say the array is "nearly sorted" (in ascending order) if 
		each element's position differs from its appropriate position in the 
		sorted arrangement of the same array by at most 2 (in either direction). 
		The following method takes an array where the first <i>n</i> elements 
		are "nearly sorted" and properly sorts the array.<blockquote>
			<p><code>public void sortNearlySorted(int[] arr, int n)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; int i = 0;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; while (i &lt; n = 1)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (arr[i+1] &lt; arr[i])<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			swap(arr, i, i + 1);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (i+2 &lt; n &amp;&amp; arr[i+2] &lt; 
			arr[i])<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			swap(arr, i, i+2);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i++;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		<p>Which of the following is a loop invariant for the <code>while</code> 
		loop in the above method? </p></td>
	</tr>
	<tr>
		<td width="52"><div id="113_div" style="visibility:hidden">
			<img id="113_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q113"> arr[0] ... 
				arr[n-1] are sorted and 0 &lt;= i &lt; n</li>
				<li><input type="radio" value="b" name="q113"> arr[0] ... 
				arr[n-1] are nearly sorted and 0&lt; n-1</li>
				<li><input type="radio" value="c" name="q113"> arr[0] ... 
				arr[i-1] are placed where they belong in the sorted array and 
				arr[i] ... arr[n-1] are "nearly sorted"</li>
				<li><input type="radio" value="d" name="q113"> arr[i] &lt; arr[i+1] 
				and arr[i] &lt; arr[i+2]</li>
				<li><input type="radio" value="e" name="q113"> arr[0] ... 
				arr[n-3] are sorted</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">114.</p></td>
		<td colspan="2">In the ABBAB language the alphabet has only two letters. 
		A string of letters (including and one-letter strings) is a valid word, 
		if and only if the <code>isValid</code> method returns <code>true</code> 
		for that string. <code>isValid</code> is defined as follows:<blockquote>
			<p><code>public boolean isValid(String word)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; int n = word.length();</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; return n &lt; 1 ||<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			(isValid(word.substring(0, n-1) &amp;&amp; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			word.charAt(n-1) == 'B') ||<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			(isValid(word.substring(0, n-2) &amp;&amp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			"BA".equals(word.substring(n-2)));<br>
			}</code></p>
		</blockquote>
		<p>How many valid words of length 7 are there in the ABBABA language?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="114_div" style="visibility:hidden">
			<img id="114_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q114"> 2</li>
				<li><input type="radio" value="b" name="q114"> 3</li>
				<li><input type="radio" value="c" name="q114"> 15</li>
				<li><input type="radio" value="d" name="q114"> 23</li>
				<li><input type="radio" value="e" name="q114"> 34</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">115. <font size="1">(AB)</font></p></td>
		<td colspan="2">The method below takes a linked list pointed to by <code>
		head</code>, removes the first node, appends it at the end of the list, 
		and returns a reference to the head of the new list.<blockquote>
			<p><code>public ListNode firstToLast (ListNode head)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (head == null) || head.getNext() == null)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return head;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; ListNode p = head;<br>
&nbsp;&nbsp;&nbsp;&nbsp; while (p.getNext() != null)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = p.getNext();</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; &lt; <i>missing statements</i> &gt;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; return head;<br>
			} </code></p>
		</blockquote>
		<p>Which of the following code fragments correctly completes this 
		method?</p><blockquote>
			<p>I.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>&nbsp;&nbsp;&nbsp; 
			ListNode temp = head;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; head = head.getNext();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p.setNext(temp);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; temp.setNext(null);<br>
			<br>
			</code>II.&nbsp;&nbsp;&nbsp; <code>&nbsp;&nbsp;&nbsp; ListNode temp 
			= head.getNext();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; head.setNext(null);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p.setNext(head);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; head = temp;<br>
			<br>
			</code>III.&nbsp;&nbsp;&nbsp; <code>&nbsp;&nbsp;&nbsp; 
			p.setNext(head);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; head = head.getNext();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
			<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p.getNext().setNext(null);</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="115_div" style="visibility:hidden">
			<img id="115_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q115"> I only</li>
				<li><input type="radio" value="b" name="q115"> II only</li>
				<li><input type="radio" value="c" name="q115"> I and II</li>
				<li><input type="radio" value="d" name="q115"> II and III</li>
				<li><input type="radio" value="e" name="q115"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">116. <font size="1">(AB)</font></p></td>
		<td colspan="2">The following method <code>goodHand</code> checks 
		whether s stack of <code>Integers</code> (that represent ranks of 
		playing cards in a small deck) has a certain property:<blockquote>
			<p><code>public boolean goodHand (Stack hand)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; int[] count = new int[2];<br>
&nbsp;&nbsp;&nbsp;&nbsp; Object x, y;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; for (int k = 0; k &lt;= 1; k++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (hand.isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			return false;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x = hand.pop();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stack stk = new 
			ArrayStack();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (!hand.isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			y = hand.pop();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			if (x.equals(y))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			count[k]++;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			stk.push(y);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hand = stk;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; return Math.abs(count[0] - count[1]) &lt;= 1 &amp;&amp; 
			hand.isEmpty();<br>
			} </code></p>
		</blockquote>
		<p>For which of the following stacks does <code>goodHand</code> return
		<code>true</code>?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="116_div" style="visibility:hidden">
			<img id="116_img" src=""></div></td>
		<td width="85" align="center" valign="top">
			<i>top ==&gt;</i></td>
		<td width="89%" valign="middle">
				<table border="0" width="1188" id="table4">
					<tbody><tr>
						<td width="237" valign="top">a.<input type="radio" value="a" name="q116"><code>&nbsp;&nbsp;&nbsp;&nbsp;2<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 6</code></td>
						<td width="237" valign="top">b.<input type="radio" value="b" name="q116"><code>&nbsp;&nbsp;&nbsp;&nbsp;2<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4</code></td>
						<td width="237" valign="top">c.<input type="radio" value="c" name="q116"><code>&nbsp;&nbsp;&nbsp;&nbsp;2<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3</code></td>
						<td width="237" valign="top">d.<input type="radio" value="d" name="q116"><code>&nbsp;&nbsp;&nbsp;&nbsp;3<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2</code></td>
						<td width="238" valign="top">e.<input type="radio" value="e" name="q116"><code>&nbsp;&nbsp;&nbsp;&nbsp;2<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2</code></td>
					</tr>
				</tbody></table>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">117. <font size="1">(AB)</font></p></td>
		<td colspan="2">An <i>n</i> by <i>n</i> square image contains black and 
		white pixels. The first several columns contain one or more black pixels 
		at the top with only white pixels below; the remaining columns are all 
		white. For example:<blockquote>
			<p><code>xxxx..<br>
			xxxx..<br>
			x.xX..<br>
			x.x...<br>
			..x...<br>
			......</code></p>
		</blockquote>
		<p>A program is allowed to examine individual pixels in the image; its 
		task is to find the position of the lowest black pixel in the rightmost 
		column that has at least one black pixel (the uppercase pixel in the 
		above example). What is the worst case big-O for the number of examined 
		pixels in the best possible algorithm.</p></td>
	</tr>
	<tr>
		<td width="52"><div id="117_div" style="visibility:hidden">
			<img id="117_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q117"> <i>O</i>(log n)</li>
				<li><input type="radio" value="b" name="q117"> <i>O</i>(<i>(log 
				n)</i><sup>2</sup>)</li>
				<li><input type="radio" value="c" name="q117"> <i>O</i>(<i>n</i>)</li>
				<li><input type="radio" value="d" name="q117"> <i>O</i>(<i>n log 
				n</i>)</li>
				<li><input type="radio" value="e" name="q117"> <i>O</i>(<i>n</i><sup>2</sup>)</li>
				</ol>
		</td></tr>
	<tr>
		<td width="53">
		&nbsp;</td>
		<td colspan="2"><b>Questions 118-122 use the following classes:</b><blockquote>
			<p><code>public class Point<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; private int x;<br>
&nbsp;&nbsp;&nbsp;&nbsp; private int y;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public Point(int x, int y) { 
			this.x = x; this.y = y; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public int getX() { return x; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; public int getY() { return y; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public boolean equals(Point other)<br>
			&nbsp;&nbsp;&nbsp;&nbsp;
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return getX() == 
			other.getX() &amp;&amp; getY() == other.getY();<br>
			&nbsp;&nbsp;&nbsp;&nbsp;
			}</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public int hashCode()<br>
			&nbsp;&nbsp;&nbsp;&nbsp;
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return (new Integer(getX() 
			+ getY())).getHashCode();<br>
			&nbsp;&nbsp;&nbsp;&nbsp;
			}</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public void setX(int x) { this.x = 
			x; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; public void setY(int Y) { this.y = y; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public String toString()<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return "(" + getX() + ", 
			" + getY() + ")";<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
			<p><code>public class MovingPoint extends Point<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; private Point myPoint;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public MovingPoint(Point p)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt; <i>missing statements</i> 
			&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myPoint = p;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public int getX() { return 
			myPoint.getX(); }<br>
&nbsp;&nbsp;&nbsp;&nbsp; public int getY() { return myPoint.getY(); }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public void move(int x, int y)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myPoint(setX(x));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myPoint(setY(y));<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public String toString()<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return myPoint.toString();<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">118.</p></td>
		<td colspan="2">Which of the following can replace &lt;<i> missing 
		statements </i>&gt; in <code>MovingPoint</code>'s constructor?</td>
	</tr>
	<tr>
		<td width="52"><div id="118_div" style="visibility:hidden">
			<img id="118_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q118"> <code>super();</code></li>
				<li><input type="radio" value="b" name="q118"> <code>super(0, 
				0);</code></li>
				<li><input type="radio" value="c" name="q118"> <code>setX(0); 
				setY(0);</code></li>
				<li><input type="radio" value="d" name="q118"> <code>super(); 
				setX(p.getX()); seyY(p.getY());</code></li>
				<li><input type="radio" value="e" name="q118"> // <code>set 
				myPoint to p:</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">119.</p></td>
		<td colspan="2">Which line in the following code segment causes a&nbsp; 
		syntax error?<blockquote>
			<p><code>Point p1 = new Point(100, 100);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			// Line 1<br>
			MovingPoint p2 = new MovingPoint(p1);&nbsp; // Line 2<br>
			Point p3 = new MovingPoint(p2);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			// Line 3<br>
			MovingPoint p4 = new MovingPoint(p2);&nbsp; // Line 4 </code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="119_div" style="visibility:hidden">
			<img id="119_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q119"> No syntax errors 
				on these lines</li>
				<li><input type="radio" value="b" name="q119"> Line 1</li>
				<li><input type="radio" value="c" name="q119"> Line 2</li>
				<li><input type="radio" value="d" name="q119"> Line 3</li>
				<li><input type="radio" value="e" name="q119"> Line 4</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">120.</p></td>
		<td colspan="2">What is the output of the following code?<blockquote>
			<p><code>Point p = new Point(0, 0);<br>
			MovingPoint mp = new MovingPoint(p);<br>
			mp.move(1, 1);<br>
			System.out.println(p + " " + p.equals(mp));</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="120_div" style="visibility:hidden">
			<img id="120_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q120"> <code>
				NullPointerException</code></li>
				<li><input type="radio" value="b" name="q120"> <code>
				ClassCastException</code></li>
				<li><input type="radio" value="c" name="q120"> <code>(0, 0) true</code></li>
				<li><input type="radio" value="d" name="q120"> <code>(0, 0) 
				false</code></li>
				<li><input type="radio" value="e" name="q120"> <code>(1, 1) true</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">121. <font size="1">(AB)</font></p></td>
		<td colspan="2">Consider the following two code segments:<table border="0" width="100%" id="table5" style="border-collapse: collapse">
			<tbody><tr>
				<td style="border-right-style: solid; border-right-width: 1px" valign="top" width="475">
				<blockquote>
					<p><code>Set points = new HashSet();<br>
					MovingPoint p;</code></p>
					<p><code>p = new MovingPoint(new Point(0, 0));<br>
					points.add(p);</code></p>
					<p><code>p = new MovingPoint(new Point(0, 2));<br>
					points.add(p);</code></p>
					<p><code>p = new MovingPoint(new Point(2, 2));<br>
					points.add(p);</code></p>
					<p><code>p = new MovingPoint(new Point(2, 0));<br>
					points.add(p);</code></p>
					<p><code>p = new MovingPoint(new Point(1, 1));<br>
					points.add(p);</code></p>
					<p><code>System.out.println(points.size());</code></p>
				</blockquote>
				</td>
				<td style="border-left-style: solid; border-left-width: 1px" valign="top">
				<blockquote>
					<p><code>Set points = new HashSet();<br>
					MovingPoint p;</code></p>
					<p><code>p = new MovingPoint(new Point(0, 0));<br>
					points.add(p);</code></p>
					<p><code>p.move(0, 2);<br>
					points.add(p);</code></p>
					<p><code>p.move(2, 2);<br>
					points.add(p);</code></p>
					<p><code>p.move(2, 0);<br>
					points.add(p);</code></p>
					<p><code>p.move(1, 1);<br>
					points.add(p);</code></p>
					<p><code>System.out.println(points.size());</code></p>
				</blockquote>
				</td>
			</tr>
		</tbody></table>
		<p>What are their respective outputs?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="121_div" style="visibility:hidden">
			<img id="121_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q121"> <code>3</code> 
				and <code>1</code></li>
				<li><input type="radio" value="b" name="q121"> <code>3</code> 
				and <code>3</code></li>
				<li><input type="radio" value="c" name="q121"> <code>5</code> 
				and 1</li>
				<li><input type="radio" value="d" name="q121"> <code>5</code> 
				and <code>3</code></li>
				<li><input type="radio" value="e" name="q121"> <code>5</code> 
				and <code>5</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">122. <font size="1">(AB)</font></p></td>
		<td colspan="2">What is the output of the following code segment?<blockquote>
			<p><code>Point p = new Point(0, 0);<br>
			MovingPoint p1 = new MovingPoint(p);<br>
			movingPoint p2 = new MovingPoint(p);<br>
			Queue q = new ListQueue();<br>
			p1.move(1, 0);<br>
			q.enqueue(p1);<br>
			p2.move(0, 1);<br>
			q.enqueue(p2);<br>
			System.out.println(q.dequeue() + " " + q.dequeue());</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="122_div" style="visibility:hidden">
			<img id="122_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q122"> <code>(0, 0) (0, 
				0)</code></li>
				<li><input type="radio" value="b" name="q122"> <code>(1, 0) (1, 
				0)</code></li>
				<li><input type="radio" value="c" name="q122"> <code>(0, 1) (0, 
				1)</code></li>
				<li><input type="radio" value="d" name="q122"> <code>(1, 0) (0, 
				1)</code></li>
				<li><input type="radio" value="e" name="q122"> <code>(0, 1) (1, 
				0)</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">123. <font size="1">(AB)</font></p></td>
		<td colspan="2">Consider the following method:<blockquote>
			<p><code>public int magic (TreeNode root)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (root != null)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (root.getLeft() == 
			null &amp;&amp; root.getRight() == null)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			return 0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (magic(root.getLeft()) 
			+ magic(root.getRight()) == 0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			TreeNode temp = root.getLeft();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			root.setLeft(root.getRight());<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			root.setRight(temp);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; return -1;<br>
			} </code></p>
		</blockquote>
		What does this method do to a tree referred to by <code>root</code>?</td>
	</tr>
	<tr>
		<td width="52"><div id="123_div" style="visibility:hidden">
			<img id="123_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q123"> Nothing, leaves 
				the tree unchanged</li>
				<li><input type="radio" value="b" name="q123"> Swaps the left 
				and right branches of the tree at the root</li>
				<li><input type="radio" value="c" name="q123"> Replaces the tree 
				with its mirror image</li>
				<li><input type="radio" value="d" name="q123"> Swaps any two 
				leaves that have the same parent</li>
				<li><input type="radio" value="e" name="q123"> Swaps the 
				leftmost and rightmost leaves</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">124. <font size="1">(AB)</font></p></td>
		<td colspan="2">Suppose <code>traversePreOrder</code> and <code>
		traversePostOrder</code> are defined as follows:<blockquote>
			<p><code>public void traversePreOrder(TreeNode root, Stack s)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (root != null)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s.push()(root.getValue());<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			traversePreOrder(root.getLeft(), s);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			traversePreOrder(root.getRight(), s);<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			} </code></p>
		</blockquote>
		<blockquote>
			<p><code>public void traversePostOrder(TreeNode root, Stack s)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (root != null)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			traversePostOrder(root.getLeft(), s);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			traversePostOrder(root.getRight(), s);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; root.setValue(s.pop());<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			} </code></p>
		</blockquote>
		If root initially refers to<blockquote>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			/ \<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		/&nbsp;&nbsp; \<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		B&nbsp;&nbsp;&nbsp;&nbsp; C<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		/&nbsp;\&nbsp;&nbsp; / \<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		D&nbsp;&nbsp; E&nbsp;F&nbsp;&nbsp;&nbsp;G</code></p>
		</blockquote>
		what is the resulting tree after the following statements are executed?<blockquote>
			<p><code>Stack s = new ArrayStack ();<br>
			traversePreOrder(root, s);<br>
			traversePostOrder(root, s);</code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="124_div" style="visibility:hidden">
			<img id="124_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<table border="0" width="545" id="table6">
					<tbody><tr>
						<td width="176" valign="top">a.<input type="radio" value="a" name="q124"><code>&nbsp;&nbsp; 
		A<br>
						&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			/ \<br>&nbsp;&nbsp;&nbsp;&nbsp; 
		/&nbsp;&nbsp; \<br>&nbsp;&nbsp;&nbsp; 
		B&nbsp;&nbsp;&nbsp;&nbsp; C<br>&nbsp;&nbsp; 
		/&nbsp;\&nbsp;&nbsp; / \<br>&nbsp; 
		D&nbsp;&nbsp; E&nbsp;F&nbsp;&nbsp;&nbsp;G</code></td>
						<td width="195" valign="top">b.<input type="radio" value="b" name="q124"><code>&nbsp;&nbsp; 
		A<br>
						&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			/ \<br>&nbsp;&nbsp;&nbsp;&nbsp; 
		/&nbsp;&nbsp; \<br>&nbsp;&nbsp;&nbsp; 
						C&nbsp;&nbsp;&nbsp;&nbsp; B<br>&nbsp;&nbsp; 
		/&nbsp;\&nbsp;&nbsp; / \<br>&nbsp; 
						G&nbsp;&nbsp; F&nbsp;E&nbsp;&nbsp;&nbsp;D</code></td>
						<td width="150" valign="top">c.<input type="radio" value="c" name="q124"><code>&nbsp;&nbsp; 
						G<br>
						&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			/ \<br>&nbsp;&nbsp;&nbsp;&nbsp; 
		/&nbsp;&nbsp; \<br>&nbsp;&nbsp;&nbsp; 
						D&nbsp;&nbsp;&nbsp;&nbsp; F<br>&nbsp;&nbsp; 
		/&nbsp;\&nbsp;&nbsp; / \<br>&nbsp; 
						A&nbsp;&nbsp; B&nbsp;E&nbsp;&nbsp;&nbsp;C</code></td>
					</tr>
					<tr>
						<td width="176" valign="top">d.<input type="radio" value="d" name="q124"><code>&nbsp;&nbsp; 
		A<br>
						&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			/ \<br>&nbsp;&nbsp;&nbsp;&nbsp; 
		/&nbsp;&nbsp; \<br>&nbsp;&nbsp;&nbsp; 
						C&nbsp;&nbsp;&nbsp;&nbsp; B<br>&nbsp;&nbsp; 
		/&nbsp;\&nbsp;&nbsp; / \<br>&nbsp; 
						F&nbsp;&nbsp; G&nbsp;D&nbsp;&nbsp;&nbsp;E</code></td>
						<td width="195" valign="top">e.<input type="radio" value="e" name="q124"><code>&nbsp;&nbsp; 
						G<br>
						&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			/ \<br>&nbsp;&nbsp;&nbsp;&nbsp; 
		/&nbsp;&nbsp; \<br>&nbsp;&nbsp;&nbsp; 
						F&nbsp;&nbsp;&nbsp;&nbsp; D<br>&nbsp;&nbsp; 
		/&nbsp;\&nbsp;&nbsp; / \<br>&nbsp; 
						E&nbsp;&nbsp; C&nbsp;B&nbsp;&nbsp;&nbsp;A</code></td>
						<td width="150" valign="top">&nbsp;</td>
					</tr>
				</tbody></table>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">125.</p></td>
		<td colspan="2">A multiple-choice question offers three options, I, II, 
		and III, and asks which ones fit into a given situation. The offered 
		answers are a) I only; b) II only; c) III only; d) I and II; and e) II 
		and III. Assuming that it takes the same amount of time to examine any 
		one of the three options, that the odds that any option fits are 50-50, 
		and that s student always gets all answers right and doesn't waste time 
		considering unnecessary options, which option should she consider first?</td>
	</tr>
	<tr>
		<td width="52"><div id="125_div" style="visibility:hidden">
			<img id="125_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q125"> Doesn't matter</li>
				<li><input type="radio" value="b" name="q125"> Either I or II</li>
				<li><input type="radio" value="c" name="q125"> Either I or III</li>
				<li><input type="radio" value="d" name="q125"> Definitely I</li>
				<li><input type="radio" value="e" name="q125"> Definitely II</li>
				</ol>
		</td></tr>
	<tr>
		<td colspan="3" bgcolor="#C0C0C0">
		<p align="center"><a name="2000"></a>2000</p></td>
	</tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">126.</p></td>
		<td colspan="2">Which of the following statements does NOT display <code>
		2/3</code>?</td>
	</tr>
	<tr>
		<td width="52"><div id="126_div" style="visibility:hidden">
			<img id="126_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q126"> <code>
				System.out.println("2/3");</code></li>
				<li><input type="radio" value="b" name="q126"> <code>
				System.out.println("2" + "/" + "3");</code></li>
				<li><input type="radio" value="c" name="q126"> <code>
				System.out.println(2/3);</code></li>
				<li><input type="radio" value="d" name="q126"> <code>
				System.out.println(2 + "/" + 3);</code></li>
				<li><input type="radio" value="e" name="q126"> <code>
				System.out.println((int)2 + "/" + (int)3);</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">127.</p></td>
		<td colspan="2">If array <code>arr</code> has five elements with values
		<code>0 1 2 3 4</code>, what are the values in <code>arr</code> after 
		the following code is executed?<blockquote>
			<p><code>for (int k = 0; k &lt; 5; k++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; arr[k] = arr[arr[k]];</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="127_div" style="visibility:hidden">
			<img id="127_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q127"> <code>0 1 2 3 4</code></li>
				<li><input type="radio" value="b" name="q127"> <code>1 2 3 4 0</code></li>
				<li><input type="radio" value="c" name="q127"> <code>1 2 2 2 2</code></li>
				<li><input type="radio" value="d" name="q127"> <code>0 0 0 0 0</code></li>
				<li><input type="radio" value="e" name="q127"> <code>1 2 3 4 4</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">128.</p></td>
		<td colspan="2">If <code>c</code> and <code>d</code> are <code>boolean</code> 
		variables, which of the answer choices is NOT equivalent to the 
		following expression?<blockquote>
			<p><code>(c &amp;&amp; d) != (c || d)</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="128_div" style="visibility:hidden">
			<img id="128_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q128"> <code>(c &amp;&amp; !d) 
				|| (!c &amp;&amp; d)</code></li>
				<li><input type="radio" value="b" name="q128"> <code>(c || d) &amp;&amp; 
				(!c &amp;&amp; !d)</code></li>
				<li><input type="radio" value="c" name="q128"> <code>(c || d) &amp;&amp; 
				(!c || !d)</code></li>
				<li><input type="radio" value="d" name="q128"> <code>(c || d) &amp;&amp; 
				!(c &amp;&amp; d)</code></li>
				<li><input type="radio" value="e" name="q128"> <code>c != d</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">129.</p></td>
		<td colspan="2">The value of (1 + (1/n))n for large enough n (e.g., n &gt;= 
		50) approximates the base of the natural logarithm e = 2.71828... A 
		student decided to test this property and wrote the following method:<blockquote>
			<p><code>public double approxE()<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; double e = 1.0 + 1.0 / 64;<br>
&nbsp;&nbsp;&nbsp;&nbsp; for (int count = 1; count &lt;= 6; count++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e *= e;<br>
&nbsp;&nbsp;&nbsp;&nbsp; return e;<br>
			}</code></p>
		</blockquote>
		<p>What value is returned by <code>approxE()</code>? </p></td>
	</tr>
	<tr>
		<td width="52"><div id="129_div" style="visibility:hidden">
			<img id="129_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q129"> No value is 
				returned: the method throws an<code> ArithmeticException</code></li>
				<li><input type="radio" value="b" name="q129"> 1.0</li>
				<li><input type="radio" value="c" name="q129"> 2.6973449525651</li>
				<li><input type="radio" value="d" name="q129"> 1.642359568597906</li>
				<li><input type="radio" value="e" name="q129"> 7.275669793128421</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">130.</p></td>
		<td colspan="2">What is the output from the following code?<blockquote>
			<p><code>int[] counts = new int[3];<br>
			int i, j;<br>
			for (int i = 0; i &lt; 100; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; for (j = 0; j &lt; 10; j++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; counts[j % 3]++;<br>
			System.out.println((counts[1] + counts[2]) / counts[0]);</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="130_div" style="visibility:hidden">
			<img id="130_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q130"> 1</li>
				<li><input type="radio" value="b" name="q130"> 1.5</li>
				<li><input type="radio" value="c" name="q130"> 2</li>
				<li><input type="radio" value="d" name="q130"> 2.5</li>
				<li><input type="radio" value="e" name="q130"> 3</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">131.</p></td>
		<td colspan="2">Suppose an array <code>A</code> has <code>n</code> 
		elements.&nbsp; Let's call it periodic with a period of <code>p</code> 
		if 0 &lt; <code>p</code> &lt; <code>n</code> and <code>A[i]</code> == <code>
		A[i+p]</code> for all 0 &lt;= <code>i</code> &lt;<code> n-p</code> and <code>p</code> 
		is the smallest such number. What is the period of array v after the 
		following code is executed?<p><code>&nbsp;&nbsp;&nbsp;&nbsp; int v[] = 
		new int[100];<br>
&nbsp;&nbsp;&nbsp;&nbsp; v[0] = 0; v[1] = 1;</code></p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 2; i &lt; 100; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v[i] = v[i-1] - v[i-2];<br>
&nbsp;</code></p></td>
	</tr>
	<tr>
		<td width="52"><div id="131_div" style="visibility:hidden">
			<img id="131_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q131"> 2</li>
				<li><input type="radio" value="b" name="q131"> 3</li>
				<li><input type="radio" value="c" name="q131"> 4</li>
				<li><input type="radio" value="d" name="q131"> 6</li>
				<li><input type="radio" value="e" name="q131"> No period</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">132.</p></td>
		<td colspan="2">What is the output from the following code?<p><code>&nbsp;&nbsp;&nbsp;&nbsp; 
		StringBuffer s = new StringBuffer("WYOMING");<br>
&nbsp;&nbsp;&nbsp;&nbsp; int k, i, n = s.length();<br>
&nbsp;&nbsp;&nbsp;&nbsp; char temp;</code></p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp; for (k = 0; k &lt; 3; k++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; temp = s.charAt(n-1);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (i = k+1; i &lt; n; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		s.setCharAt(i, s.charAt(i-1));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s.setCharAt(k, temp);<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(s);<br>
&nbsp;</code></p></td>
	</tr>
	<tr>
		<td width="52"><div id="132_div" style="visibility:hidden">
			<img id="132_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q132"> <code>YOMINGW</code></li>
				<li><input type="radio" value="b" name="q132"> <code>MINGWYO</code></li>
				<li><input type="radio" value="c" name="q132"> <code>GWWWWWW</code></li>
				<li><input type="radio" value="d" name="q132"> <code>MINGOYW</code></li>
				<li><input type="radio" value="e" name="q132"> <code>GNIMOYW</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">133.</p></td>
		<td colspan="2">A recursive method <code>upNdown</code> is defined as 
		follows:<blockquote>
			<p><code>public void upNdown(int n)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (n &gt; 1)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (n % 2 != 0) 
			upNdown(n+1);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else upNdown(n/2);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("*");<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		<p>How many stars are displayed when <code>upNdown(5)</code> is called?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="133_div" style="visibility:hidden">
			<img id="133_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q133"> 1</li>
				<li><input type="radio" value="b" name="q133"> 2</li>
				<li><input type="radio" value="c" name="q133"> 3</li>
				<li><input type="radio" value="d" name="q133"> 4</li>
				<li><input type="radio" value="e" name="q133"> 5</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">134.</p></td>
		<td colspan="2">Given<blockquote>
			<p><code>String a = "a", b = "b", zero = "";<br>
			Integer c = new Integer(0);</code></p>
		</blockquote>
		<p>what is the output of</p>
		<blockquote>
			<p><code>System.out.println(<br>
&nbsp;&nbsp;&nbsp;&nbsp; ((a+b)+c).equals(a+(b+c)) + " " +<br>
&nbsp;&nbsp;&nbsp;&nbsp; (c + zero).equals(zero + c) + " " +<br>
&nbsp;&nbsp;&nbsp;&nbsp; (a + null).equals(a + "null"));</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="134_div" style="visibility:hidden">
			<img id="134_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q134"> <code>false false 
				false</code></li>
				<li><input type="radio" value="b" name="q134"> <code>false true 
				true</code></li>
				<li><input type="radio" value="c" name="q134"> <code>true false 
				true </code></li>
				<li><input type="radio" value="d" name="q134"> <code>true true 
				false</code></li>
				<li><input type="radio" value="e" name="q134"> <code>true true 
				true </code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">135. <font size="1">(AB)</font></p></td>
		<td colspan="2">The method below uses a stack to check whether 
		parentheses and brackets match in a string of characters:<blockquote>
			<p><code>public boolean parensAndBracketsMatch(String expr)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; Stack s = new ArrayStack();<br>
&nbsp;&nbsp;&nbsp;&nbsp; char ch0, ch;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; for (int k = 0; k &lt; expr.length(); 
			k++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ch = expr.charAt(k);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (ch == '(' || ch == 
			'[')<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			s.push(new Character(ch));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else if (ch == ')' || ch 
			== ']')<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			if (s.isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			return false;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			ch0 = ((Character)s.pop().charValue();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			if ((ch0 == '(' &amp;&amp; ch != ')') ||<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			(ch == '[' &amp;&amp; ch != ']'))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			return false;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; return true;<br>
			}</code></p>
		</blockquote>
		<p>However, it has a bug. For which of the following strings does this 
		method return a result that is DIFFERENT from what is expected?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="135_div" style="visibility:hidden">
			<img id="135_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<u><i>Expected result:</i></u><ol type="a">
				<li><input type="radio" value="a" name="q135"> "[(a+b) * (c+d)]/2"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				true</li>
				<li><input type="radio" value="b" name="q135"> "[(a+b) * (c+d)/2]"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				true</li>
				<li><input type="radio" value="c" name="q135"> "[(a+b) * (c+d)]/2["&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				false</li>
				<li><input type="radio" value="d" name="q135"> "](a+b) * 
				(c+d)/2["&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				false</li>
				<li><input type="radio" value="e" name="q135"> "[(a+b] * [c+d)/2"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
				false</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">136.</p></td>
		<td colspan="2">Consider the following two versions of the method <code>
		mixUp</code>:<table border="0" width="100%" id="table8" style="border-collapse: collapse">
			<tbody><tr>
				<td style="border-right-style: solid; border-right-width: 1px" valign="top" width="475">
				<blockquote>
					<p><code>public void mixUp(int[] x, int[] y)<br>
					{<br>
&nbsp;&nbsp;&nbsp;&nbsp; x[0] = x[0] - 2 * x[0] * y[1];<br>
&nbsp;&nbsp;&nbsp;&nbsp; y[1] = y[1] - 2 * x[0] * y[0];<br>
					}</code></p>
				</blockquote>
				</td>
				<td style="border-left-style: solid; border-left-width: 1px" valign="top">
				<blockquote>
					<p><code>public void mixUp(int[] x, int[] y)<br>
					{<br>
&nbsp;&nbsp;&nbsp;&nbsp; int d = 2 * x[0] * y[1];<br>
&nbsp;&nbsp;&nbsp;&nbsp; x[0] -= d;<br>
&nbsp;&nbsp;&nbsp;&nbsp; y[1] -= d;<br>
					}</code></p>
				</blockquote>
				</td>
			</tr>
		</tbody></table>
		Suppose the following arrays are declared and initialized:<blockquote>
			<p><code>int[] a = {1, 1}, b = {0, 0}, c = {1, 1}; </code></p>
		</blockquote>
		<p>Which of the following calls to <code>mixUp</code> result in the same 
		values in <code>a</code>, <code>b</code>, and <code>c</code> for bother 
		versions of the code?</p><blockquote>
			<p>I.&nbsp;&nbsp;&nbsp;&nbsp; <code>mixUp(a, a)<br>
			</code>II.&nbsp;&nbsp;&nbsp; <code>mixUp(a, b)<br>
			</code>III.&nbsp;&nbsp; <code>mixUp(a, c)</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="136_div" style="visibility:hidden">
			<img id="136_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q136"> I only</li>
				<li><input type="radio" value="b" name="q136"> II only</li>
				<li><input type="radio" value="c" name="q136"> I and II</li>
				<li><input type="radio" value="d" name="q136"> II and III</li>
				<li><input type="radio" value="e" name="q136"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">137.</p></td>
		<td colspan="2">The Binary Search algorithm normally finds a value in an 
		array sorted in ascending order. Suppose that by mistake the algorithm 
		is used on an unsorted array with the following seven elements:<blockquote>
			<p><code>1 3 2 5 13 8 21 </code></p>
		</blockquote>
		<p>Which of the following target values will NOT be found? </p></td>
	</tr>
	<tr>
		<td width="52"><div id="137_div" style="visibility:hidden">
			<img id="137_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q137"> 1</li>
				<li><input type="radio" value="b" name="q137"> 3</li>
				<li><input type="radio" value="c" name="q137"> 5</li>
				<li><input type="radio" value="d" name="q137"> 13</li>
				<li><input type="radio" value="e" name="q137"> 21</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">138.</p></td>
		<td colspan="2">An array has 4095 = 2<sup>12 </sup>-1 elements, arranged 
		in ascending order. Binary Search is used to find the position of a 
		target value. This Binary Search is implemented iteratively, in such a 
		way that in each iteration the <code>target</code> is compared to one of 
		the elements of the array. Suppose we know that the <code>target</code> 
		is somewhere in the array. What number of iterations guarantees that a 
		target value is found.</td>
	</tr>
	<tr>
		<td width="52"><div id="138_div" style="visibility:hidden">
			<img id="138_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q138"> 10</li>
				<li><input type="radio" value="b" name="q138"> 11</li>
				<li><input type="radio" value="c" name="q138"> 12</li>
				<li><input type="radio" value="d" name="q138"> 2047</li>
				<li><input type="radio" value="e" name="q138"> 4095</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">139.</p></td>
		<td colspan="2">Which of the following arithmetic expressions maps the 
		values <code>x </code>= 0, 1, 2, 3, 4, 5, 6 onto <code>y </code>= 4, 3, 
		9, 8, 7, 6, 5, respectively?</td>
	</tr>
	<tr>
		<td width="52"><div id="139_div" style="visibility:hidden">
			<img id="139_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q139"> <code>y = 11 - x 
				+ (x + 4) % 7;</code></li>
				<li><input type="radio" value="b" name="q139"> <code>y = (4 - x) 
				% 7 + 2 * x;</code></li>
				<li><input type="radio" value="c" name="q139"> <code>y = 3 + (8 
				- x) % 7;</code></li>
				<li><input type="radio" value="d" name="q139"> <code>y = 9 - (x 
				- 2) % 7;</code></li>
				<li><input type="radio" value="e" name="q139"> <code>y = 4 + x % 
				7 - 2 * x;</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">140.</p></td>
		<td colspan="2">The method below implements a simplified square cipher:<blockquote>
			<p><code>public char[][] encrypt(char[][] key, String msg)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; int i, j, n = key.length, k = 0;<br>
&nbsp;&nbsp;&nbsp;&nbsp; char[][] result = new char[n][n];&nbsp;&nbsp; // fills 
			with spaces</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; for (i = 0; i &lt; n; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (j = 0; j &lt; n; j++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			if (key[i][j] == 'x')<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			result[i][j] = msg.charAt(k++);</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; for (i = 0; i &lt; n; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (j = 0; j &lt; n; j++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			if (key[i][j] == 'x')<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			result[n-i-1][n-j-1] = msg.charAt(k++);</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; return result;<br>
			}</code></p>
		</blockquote>
		<p>If <code>key</code> is a 4 by 4 matrix</p>
		<blockquote>
			<p><code>.x..<br>
			x..x<br>
			.xx.<br>
			xx.x </code></p>
		</blockquote>
		<p>and <code>msg</code> is "<code>ransom received </code>", which of the 
		following matrices is returned from <code>encrypt(key, msg)</code>?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="140_div" style="visibility:hidden">
			<img id="140_img" src=""></div></td>
		<td width="85" align="center" valign="top">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<table border="0" width="1188" id="table9">
					<tbody><tr>
						<td width="237" valign="top">a.<input type="radio" value="a" name="q140"><code>&nbsp;&nbsp;&nbsp;&nbsp;rean<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; csoe<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mivr<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; d e</code></td>
						<td width="237" valign="top">b.<input type="radio" value="b" name="q140"><code>&nbsp;&nbsp;&nbsp;&nbsp; 
						rde<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; avin<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; esoc<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m er</code></td>
						<td width="237" valign="top">c.<input type="radio" value="c" name="q140"><code>&nbsp;&nbsp;&nbsp;&nbsp; 
						rvc<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; aein<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dsoe<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m er</code></td>
						<td width="237" valign="top">d.<input type="radio" value="d" name="q140"><code>&nbsp;&nbsp;&nbsp;&nbsp;rdsr<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; no <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; aeve<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iemc</code></td>
						<td width="238" valign="top">e.<input type="radio" value="e" name="q140"><code>&nbsp;&nbsp;&nbsp;&nbsp;rcan<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; esoi<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mvre<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; d ee</code></td>
					</tr>
				</tbody></table>
		</td></tr>
	<tr>
		<td width="53">
		&nbsp;</td>
		<td colspan="2"><b>Questions 141-142 use the following class:</b><blockquote>
			<p><code>public class Circle<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; private int xCenter, yCenter, radius;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public Circle(int x, int y, int r)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xCenter = x;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; yCenter = y;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; radius = r;<br>
			&nbsp;&nbsp;&nbsp;&nbsp;
			}</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public void moveTo(int x, int y)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xCenter = x;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; yCenter = y;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; // Draw this circle in the 
			graphics context g<br>
&nbsp;&nbsp;&nbsp;&nbsp; public void draw(Graphics g) {&nbsp;&nbsp;&nbsp;&nbsp; 
			&lt; <i>code not shown</i> &gt;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">141.</p></td>
		<td colspan="2">Suppose the following code is added to a method that 
		repaints a window within a graphics context g:<blockquote>
			<p><code>for (int x = 10; x &lt;= 30; x += 10)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; Circle circle = new Circle(x + 100, 100, x);<br>
&nbsp;&nbsp;&nbsp;&nbsp; circle.draw(g);<br>
			}</code></p>
		</blockquote>
		<p>The origin of the coordinate system in in the upper left corner of 
		the window with the y-axis pointing down. Which of the following 
		pictures will be displayed?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="141_div" style="visibility:hidden">
			<img id="141_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<table border="0" width="545" id="table10">
					<tbody><tr>
						<td width="176" valign="top">a.<input type="radio" value="a" name="q141"><code>&nbsp;&nbsp; 
						</code>
						<p align="center"><code> 
						<img border="0" src="./AP JAVA Practice Exam_files/circlesA.PNG" width="150" height="100"></code></p></td>
						<td width="195" valign="top">b.<input type="radio" value="b" name="q141"><code>&nbsp;&nbsp; 
						</code>
						<p align="center"><code> 
						<img border="0" src="./AP JAVA Practice Exam_files/circlesB.PNG" width="150" height="100"></code></p></td>
						<td width="150" valign="top">c.<input type="radio" value="c" name="q141"><code>&nbsp;&nbsp; 
						</code>
						<p align="center"><code> 
						<img border="0" src="./AP JAVA Practice Exam_files/circlesC.PNG" width="150" height="100"></code></p></td>
					</tr>
					<tr>
						<td width="176" valign="top">d.<input type="radio" value="d" name="q141"><code>&nbsp;&nbsp; 
						</code>
						<p align="center"><code> 
						<img border="0" src="./AP JAVA Practice Exam_files/circlesD.PNG" width="150" height="100"></code></p></td>
						<td width="195" valign="top">e.<input type="radio" value="e" name="q141"><code>&nbsp;&nbsp; 
						</code>
						<p align="center"><code> 
						<img border="0" src="./AP JAVA Practice Exam_files/circlesE.PNG" width="150" height="100"></code></p></td>
						<td width="150" valign="top">&nbsp;</td>
					</tr>
				</tbody></table>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">142.</p></td>
		<td colspan="2">The method drawOrnament draws several circles, as 
		follows:<blockquote>
			<p><code>public void drawOrnament(Graphics g, int k)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (k &lt; 8)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br>
&nbsp;&nbsp;&nbsp;&nbsp; Circle c = new Circle(100 - k, 100 - k, k);<br>
&nbsp;&nbsp;&nbsp;&nbsp; c.draw(g);<br>
&nbsp;&nbsp;&nbsp;&nbsp; c.moveTo(100 + k, 100 + k);<br>
&nbsp;&nbsp;&nbsp;&nbsp; c.draw(g);<br>
&nbsp;&nbsp;&nbsp;&nbsp; drawOrnament(g, k/2);<br>
			}</code></p>
		</blockquote>
		<p>Which of the following pictures is produced by <code>drawOrnament(g, 
		32)</code>? </p></td>
	</tr>
	<tr>
		<td width="52"><div id="142_div" style="visibility:hidden">
			<img id="142_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<table border="0" width="545" id="table11">
					<tbody><tr>
						<td width="176" valign="top">a.<input type="radio" value="a" name="q142"><code>&nbsp;&nbsp; 
						</code>
						<p align="center"><code>
						<img border="0" src="./AP JAVA Practice Exam_files/ornamentA.bmp" width="63" height="118"></code></p></td>
						<td width="195" valign="top">b.<input type="radio" value="b" name="q142"><code>&nbsp;&nbsp; 
						</code>
						<p align="center"><code>
						<img border="0" src="./AP JAVA Practice Exam_files/ornamentB.bmp" width="121" height="121"></code></p></td>
						<td width="150" valign="top">
						<p align="center">c.<input type="radio" value="c" name="q142"><code>&nbsp;&nbsp; 
						<img border="0" src="./AP JAVA Practice Exam_files/ornamentC.bmp" width="100" height="150"></code></p></td>
					</tr>
					<tr>
						<td width="176" valign="top">d.<input type="radio" value="d" name="q142"><code>&nbsp;&nbsp; 
						</code>
						<p align="center"><code>
						<img border="0" src="./AP JAVA Practice Exam_files/ornamentD.bmp" width="116" height="113"></code></p></td>
						<td width="195" valign="top">e.<input type="radio" value="e" name="q142"><code>&nbsp;&nbsp; 
						</code>
						<p align="center"><code>
						<img border="0" src="./AP JAVA Practice Exam_files/ornamentE.bmp" width="100" height="150"></code></p></td>
						<td width="150" valign="top">&nbsp;</td>
					</tr>
				</tbody></table>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">143.</p></td>
		<td colspan="2">What is displayed by<blockquote>
			<p><code>System.out.println(expand(expand("1001")));</code></p>
		</blockquote>
		where expand is defined as follows?<blockquote>
			<p><code>public String expand(String s)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp; 
			String d = "";</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; s.length(); i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; switch (s.charAt(i))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			case '0': d += "01"; break;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			case '1': d += "10"; break;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; return d;<br>
			}</code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="143_div" style="visibility:hidden">
			<img id="143_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q143"> <code>1001</code></li>
				<li><input type="radio" value="b" name="q143"> <code>1*0*0*1</code></li>
				<li><input type="radio" value="c" name="q143"> <code>10010110</code></li>
				<li><input type="radio" value="d" name="q143"> <code>
				10*01*01*10*</code></li>
				<li><input type="radio" value="e" name="q143"> <code>
				1001011001101001</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="53">
		&nbsp;</td>
		<td colspan="2"><b>Questions 144-146 use the following interface and class:</b><blockquote>
			<p><code>public interface Toggleable<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; void toggle();<br>
&nbsp;&nbsp;&nbsp;&nbsp; boolean isOn();<br>
			}</code></p>
		</blockquote>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public class toggleSwitch implements 
		Toggleable<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		private boolean on;</code></p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
		ToggleSwitch() { on = false; }<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
		ToggleSwitch(boolean state) { on = state; }</code></p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
		void toggle() { on != on; }<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public boolean isOn() { 
		return on; }<br>
&nbsp;&nbsp;&nbsp;&nbsp;
			}</code></p>
		</td>
	</tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">144.</p></td>
		<td colspan="2">Suppose we have&nbsp; found the <code>ToggleSwitch.class</code> 
		file but have no access to its source code. Which of the following code 
		segments, if it compiles with no errors, will convince us that <code>
		ToggleSwitch</code> implements <code>T</code><code>oggleable</code>?<blockquote>
			<p>I.&nbsp;&nbsp;&nbsp;&nbsp; <code>Toggleable x = new ToggleSwitch();<br>
			<br>
			</code>II.&nbsp;&nbsp;&nbsp; <code>ToggleSwitch x = new ToggleSwitch();<br>
&nbsp;&nbsp;&nbsp; x.toggle();<br>
			<br>
			</code>III.&nbsp;&nbsp; <code>ToggleSwitch x = new ToggleSwitch();<br>
&nbsp;&nbsp;&nbsp; if (!x.isOn()) x.toggle();</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="144_div" style="visibility:hidden">
			<img id="144_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q144"> I only</li>
				<li><input type="radio" value="b" name="q144"> II only</li>
				<li><input type="radio" value="c" name="q144"> III only</li>
				<li><input type="radio" value="d" name="q144"> II and III</li>
				<li><input type="radio" value="e" name="q144"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">145.</p></td>
		<td colspan="2">Consider the following class that represents a set of 
		checkboxes<blockquote>
			<p><code>public class CheckBoxSet<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; private Togleable[] buttons;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public CheckBoxSet(int nButtons)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt; <i>missing statements</i> 
			&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public int numButtons() { return 
			buttons.length; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; public void push(int k) { buttons[k].toggle(); }<br>
&nbsp;&nbsp;&nbsp;&nbsp; public boolean isOn(int k) { return buttons[k].isOn(); 
			}</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public void clear()<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int k = 0; k &lt; 
			buttons.length; k++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			if (buttons[k].isOn())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			buttons[k].toggle();<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		<p>Which of the following can replace &lt; <i>missing statements</i>&gt; in 
		the <code>CheckBoxSet</code> constructor?</p>
		<blockquote>
			<p>I.&nbsp;&nbsp;&nbsp;&nbsp; <code>buttons = new 
			Toggleable[nButtons];<br>
&nbsp;&nbsp;&nbsp; for (int k = 0; k &lt; buttons.length; k++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; buttons[k] = new ToggleSwitch();<br>
			<br></code>II.&nbsp;&nbsp;&nbsp; <code>buttons = new 
			ToggleSwitch[nButtons];<br>
&nbsp;&nbsp; clear();<br>
			<br></code>III.&nbsp;&nbsp; <code>buttons = new 
			ToggleSwitch[nButtons];<br>
&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; buttons.length; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (buttons[i].isOn())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			buttons[i].toggle();</code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="145_div" style="visibility:hidden">
			<img id="145_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q145"> I only</li>
				<li><input type="radio" value="b" name="q145"> II only</li>
				<li><input type="radio" value="c" name="q145"> I and II</li>
				<li><input type="radio" value="d" name="q145"> II and III</li>
				<li><input type="radio" value="e" name="q145"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">146. <font size="1">(AB)</font></p></td>
		<td colspan="2">A set of "radio buttons" is a user interface control 
		used to choose one of several options. For example:
			<blockquote>
				<table border="0" width="280" id="table12" style="border-collapse: collapse">
					<tbody><tr>
						<td><input type="radio" name="q145" value="V"> small</td>
						<td><input type="radio" name="q145" value="V1"> medium</td>
						<td><input type="radio" name="q145" value="V2" checked=""> 
					large</td>
					</tr>
				</tbody></table>
		</blockquote>
		Consider the following class <code>RadioSet</code> that implements a set 
		of radio buttons:<blockquote>
			<p><code>public class RadioSet extends CheckBoxSet<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp; 
			// precondition:&nbsp; nButtons &gt; k &gt;= 0<br>
&nbsp;&nbsp;&nbsp;&nbsp; // postcondition: creates an array of nButtons and<br>
&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			sets the k-th button to "on"<br>
&nbsp;&nbsp;&nbsp;&nbsp; public RadioSet(int nButtons, intk)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; super(nButtons);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; push(k);<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; // postcondition: sets the k-th 
			button to "on", all other<br>
&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			buttons to "off"<br>
&nbsp;&nbsp;&nbsp;&nbsp; public void push(int k)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt; <i>missing code</i> &gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; // postcondition: returns the 
			number of the button that is "on";<br>
&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			throws an exception if none are "on"<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int k = 0; k &lt; 
			numButtons(); k++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			if (isOn(k))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			return k;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw 
			IllegalStateException();<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			}</code></p>
		</blockquote>
		<p>Which of the following can replace &lt; <i>missing code</i>&gt; in this 
		class?</p>
		<blockquote>
			<p>I.&nbsp;&nbsp;&nbsp;&nbsp; <code>clear();<br>
&nbsp;&nbsp;&nbsp; push(k);<br>
			<br></code>II.&nbsp;&nbsp;&nbsp;<code>clear();<br>
&nbsp;&nbsp; super.push(k);<br>
			<br></code>III.&nbsp;&nbsp; <code>for (int j = 0; j &lt; numButtons(); 
			j++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (buttons[j].isOn())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; buttons[j].toggle();<br>
&nbsp;&nbsp;&nbsp; buttons[k].toggle();</code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="146_div" style="visibility:hidden">
			<img id="146_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q146"> I only</li>
				<li><input type="radio" value="b" name="q146"> II only</li>
				<li><input type="radio" value="c" name="q146"> I and II</li>
				<li><input type="radio" value="d" name="q146"> II and III</li>
				<li><input type="radio" value="e" name="q146"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">147. <font size="1">(AB)</font></p></td>
		<td colspan="2"><code>char[][]</code> m holds the following picture:<blockquote>
			<p><code>........<br>
			..xxxxx.<br>
			..xx....<br>
			..xxx...<br>
			....xxx.<br>
			......x.<br>
			.x.xxx..<br>
			..xxx...<br>
			........ </code></p>
		</blockquote>
		What picture is stored in <code>m</code> after <code>process(m)</code> 
		is called? The method <code>process</code> is defined as follows:<blockquote>
			<p><code>public void process(char[][] m)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; int rows = m.length, cols = m[0].length, r, c;<br>
&nbsp;&nbsp;&nbsp;&nbsp; char[][] t = new char[rows][cols];</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; for (r = 0; r &lt; rows; r++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (c = 0; c &lt; cols; 
			c++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			t[r][c] = m[r][c];</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; for (r = 1; r &lt; rows; r++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (c = 1; c &lt; cols; 
			c++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			if (t[r][c] == 'x' &amp;&amp; (t[r-1][c] != 'x'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			|| t[r][c-1] != 'x'))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			m[r][c] = 'x';<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			m[r][c] = '.';<br>
			} </code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="147_div" style="visibility: visible;">
			<img id="147_img" src="./AP JAVA Practice Exam_files/wrong.gif"></div></td>
		<td width="85" align="center" valign="top">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<table border="0" width="1188" id="table13">
					<tbody><tr>
						<td width="237" valign="top">a.<input type="radio" value="a" name="q147" checked=""><code>&nbsp;&nbsp;&nbsp;&nbsp;........<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..xxxxxx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..xxxxx.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..xxxx..<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..xxxxxx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ....xxxx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .xxxxxx.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .xxxxx..<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..x.....</code></td>
						<td width="237" valign="top">b.<input type="radio" value="b" name="q147"><code>&nbsp;&nbsp;&nbsp;&nbsp;........<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..xxxxx.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..x.....<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..x.x...<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ....xxx.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ......x.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .x.xxx..<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..x.....<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ........</code></td>
						<td width="237" valign="top">c.<input type="radio" value="c" name="q147"><code>&nbsp;&nbsp;&nbsp;&nbsp;........<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..xxxxxx<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ........<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..xxx...<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .....xx.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ........<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .x.xxx..<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..x.....<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ........</code></td>
						<td width="237" valign="top">d.<input type="radio" value="d" name="q147"><code>&nbsp;&nbsp;&nbsp;&nbsp;........<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...xxxx.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...x....<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...xx...<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .....xx.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ........<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ....xx..<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...xx...<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ........</code></td>
						<td width="238" valign="top">e.<input type="radio" value="e" name="q147"><code>&nbsp;&nbsp;&nbsp;&nbsp;........<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..xxxxx.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..xxx...<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..xxx...<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ....xxx.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ......x.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .x.xxxx.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ..xxxx..<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ........</code></td>
					</tr>
				</tbody></table>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">148.</p></td>
		<td colspan="2">Suppose Mergesort is implemented as follows:<blockquote>
			<p><code>public void sort(int[] a, int n1, int n2)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (n1 == n2)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br>
&nbsp;&nbsp;&nbsp;&nbsp; else if (n2 == n1 + 1)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (a[n2] &lt; a[n1])<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			swap(a, n1, n2);&nbsp;&nbsp;&nbsp;&nbsp; // swaps a[n1] and a[n2]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; int m = (n1 + n2) / 2;<br>
&nbsp;&nbsp;&nbsp;&nbsp; sort(a, n1, m);<br>
&nbsp;&nbsp;&nbsp;&nbsp; sort(a, m+1, n2);<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (a[m] &gt; a[m+1])<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; merge(a, n1, m, n2);&nbsp;&nbsp;&nbsp; 
			// merges a[n1]...a[m] and a[m+1]...a[n2]<br>
			}</code></p>
		</blockquote>
		How many times will the method <code>merge</code> be called if an array
		<code>a</code> contains the values<blockquote>
			<p><code>2 1 4 3 6 5 8 7 </code></p>
		</blockquote>and <code>sort(a, 0, 7)</code> is called?</td>
	</tr>
	<tr>
		<td width="52"><div id="148_div" style="visibility:hidden">
			<img id="148_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q148"> 7</li>
				<li><input type="radio" value="b" name="q148"> 4</li>
				<li><input type="radio" value="c" name="q148">3</li>
				<li><input type="radio" value="d" name="q148">1</li>
				<li><input type="radio" value="e" name="q148">0</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">149. <font size="1">(AB)</font></p></td>
		<td colspan="2">Consider the following method:<blockquote>
			<p><code>public void xQ(Queue q)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (q.isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; Queue q1 = new ListQueue(), q2 = 
			new ListQueue();<br>
&nbsp;&nbsp;&nbsp;&nbsp; Object x = q.dequeue();</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; while (!q.isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Object y = q.dequeue();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (((Comparable)y).compareTo(x) 
			&lt;= 0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			q1.enqueue(y);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			q2.enqueue(y);<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; xQ(q1);<br>
&nbsp;&nbsp;&nbsp;&nbsp; xQ(q2);</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; while (!q1.isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; q.enqueue(q1.dequeue());</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; q.enqueue(x);</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; while (!q2.isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; q.enqueue(q2.dequeue());<br>
			}</code></p>
		</blockquote>
		<p>What are the values in <code>q</code> after <code>xQ(q)</code> is 
		called, if <code>q</code> initially holds <code>Integer</code> objects 
		with the values <code>7</code>, <code>11</code>, <code>3</code>, <code>5</code>,
		<code>6</code>, <code>0</code> (listed starting from the front)?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="149_div" style="visibility:hidden">
			<img id="149_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q149"> <code>0</code>,
				<code>3</code>, <code>5</code>, <code>6</code>, <code>7</code>,
				<code>11</code></li>
				<li><input type="radio" value="b" name="q149"> <code>0</code>,
				<code>6</code>, <code>5</code>, <code>3</code>, <code>11</code>,
				<code>7</code></li>
				<li><input type="radio" value="c" name="q149"> <code>3</code>,
				<code>5</code>, <code>6</code>, <code>0</code>, <code>7</code>,
				<code>11</code></li>
				<li><input type="radio" value="d" name="q149"> <code>11</code>,
				<code>3</code>, <code>5</code>, <code>6</code>, <code>0</code>,
				<code>7</code></li>
				<li><input type="radio" value="e" name="q149"> <code>11</code>,
				<code>7</code>, <code>6</code>, <code>5</code>, <code>3</code>,
				<code>0</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">150. <font size="1">(AB)</font></p></td>
		<td colspan="2">Consider the following method:<blockquote>
			<p><code>public int xSum(TreeNode root)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (root == null)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 0;<br>
&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			return ((Integer)root.getValue()).intValue() +<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			xSum(root.getRight()) - xSum(root.getLeft());<br>
			} </code></p>
		</blockquote>
		<p>What value is returned by <code>xSum(root)</code> if <code>root</code> 
		points to the following tree?</p>
		<blockquote>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			5<br>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; / \<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			4&nbsp;&nbsp; 2<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /&nbsp;&nbsp; / \<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			3&nbsp; &nbsp;7&nbsp;&nbsp;&nbsp;1<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			\<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			12</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="150_div" style="visibility:hidden">
			<img id="150_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q150"> -9</li>
				<li><input type="radio" value="b" name="q150"> -10</li>
				<li><input type="radio" value="c" name="q150"> 5</li>
				<li><input type="radio" value="d" name="q150"> 12</li>
				<li><input type="radio" value="e" name="q150"> 20</li>
				</ol>
		</td></tr>
	<tr>
		<td colspan="3" bgcolor="#C0C0C0">
		<p align="center"><a name="1999"></a>1999</p></td>
	</tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">151.</p></td>
		<td colspan="2">What is the output from the following code?<blockquote>
			<p><code>int x = 5, y = 2;<br>
			System.out.println(x/y - (double)(x/y)); </code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="151_div" style="visibility:hidden">
			<img id="151_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q151"> <code>0</code></li>
				<li><input type="radio" value="b" name="q151"> <code>0.5</code></li>
				<li><input type="radio" value="c" name="q151"> <code>-0.5</code></li>
				<li><input type="radio" value="d" name="q151"> <code>-2.5</code></li>
				<li><input type="radio" value="e" name="q151"> None of the above</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">152.</p></td>
		<td colspan="2">What are the values of <code>u</code> and <code>v</code> 
		after the following code is executed?<blockquote>
			<p><code>int u = 3, v = 5;</code></p>
			<p><code>u += v;<br>
			v += u;<br>
			u -= v;<br>
			v -= u; </code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="152_div" style="visibility:hidden">
			<img id="152_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q152"> 0, 0</li>
				<li><input type="radio" value="b" name="q152"> 3, 5</li>
				<li><input type="radio" value="c" name="q152"> 5, 3</li>
				<li><input type="radio" value="d" name="q152"> -5, -3</li>
				<li><input type="radio" value="e" name="q152"> -5, 18</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">153.</p></td>
		<td colspan="2">Which of the following does NOT display <code>9.95</code>?</td>
	</tr>
	<tr>
		<td width="52"><div id="153_div" style="visibility:hidden">
			<img id="153_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q153"> <code>
				System.out.println(9 + 0.95);</code></li>
				<li><input type="radio" value="b" name="q153"> <code>
				System.out.println(995/100.0);</code></li>
				<li><input type="radio" value="c" name="q153"> <code>
				System.out.println(9. + 95/100);</code></li>
				<li><input type="radio" value="d" name="q153"> <code>
				System.out.println(9 + 95.0/100);</code></li>
				<li><input type="radio" value="e" name="q153"> <code>
				System.out.println(9 + "." + 95);</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">154.</p></td>
		<td colspan="2">What is the output from the following code?<blockquote>
			<p><code>int count1 = 0, count2 = 0, inc = 1;<br>
			for (int i = 0; i &lt; 11; i++)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; count1 += inc;<br>
&nbsp;&nbsp;&nbsp;&nbsp; inc = -inc;<br>
&nbsp;&nbsp;&nbsp;&nbsp; count2 += inc;<br>
			}<br>
			System.out.println(count1 - count2);</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="154_div" style="visibility:hidden">
			<img id="154_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q154"> <code>0</code></li>
				<li><input type="radio" value="b" name="q154"> <code>2</code></li>
				<li><input type="radio" value="c" name="q154"> <code>-2</code></li>
				<li><input type="radio" value="d" name="q154"> <code>22</code></li>
				<li><input type="radio" value="e" name="q154"> <code>-22</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">155.</p></td>
		<td colspan="2">What is the result of the following code segment?<blockquote>
			<p><code>Integer i = new Integer(0);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			// Line 1<br>
			if (!i.equals(0))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			// Line 2<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(i + " does not equal to " + 0);&nbsp; 
			// Line 3<br>
			else<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("Done");</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="155_div" style="visibility:hidden">
			<img id="155_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q155"> Syntax error on 
				Line 2</li>
				<li><input type="radio" value="b" name="q155"> Syntax error on 
				Line 3</li>
				<li><input type="radio" value="c" name="q155"> <code>
				ClassCastException</code></li>
				<li><input type="radio" value="d" name="q155"> <code>0 is not 
				equal to 0</code></li>
				<li><input type="radio" value="e" name="q155"> <code>Done</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">156.</p></td>
		<td colspan="2">What is the output from the following code?<blockquote>
			<p><code>int a = 0, b = 0;<br>
			while (a &lt; 3)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; switch(a + b)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 0: a++;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 1:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 2: b++; break;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 3: a++; break;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; default: b = 0; break;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(b);<br>
			}</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="156_div" style="visibility:hidden">
			<img id="156_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q156"> <code>0123</code></li>
				<li><input type="radio" value="b" name="q156"> <code>122011</code></li>
				<li><input type="radio" value="c" name="q156"> <code>0122011</code></li>
				<li><input type="radio" value="d" name="q156"> <code>0122123</code> </li>
				<li><input type="radio" value="e" name="q156"> <code>112300</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">157.</p></td>
		<td colspan="2">What is the value of <code>n</code> after the following 
		code is executed?<blockquote>
			<p><code>int i, n = 0;<br>
			while (n &lt; 90)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; for (i = 0; i &lt; 10; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; n += 3;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (n &gt; 50)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			break;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; n++;<br>
			} </code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="157_div" style="visibility:hidden">
			<img id="157_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q157"> 51</li>
				<li><input type="radio" value="b" name="q157"> 61</li>
				<li><input type="radio" value="c" name="q157"> 91</li>
				<li><input type="radio" value="d" name="q157"> 93</li>
				<li><input type="radio" value="e" name="q157"> 104</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">158.</p></td>
		<td colspan="2">What is the set of all possible outputs of the following 
		code when the user correctly follows the input instructions and the 
		program terminates without an error?<blockquote>
			<p><code>System.out.print(<br>
&nbsp;&nbsp;&nbsp;&nbsp; "Enter an integer from -1000 to 1000 (inclusive): ");</code></p>
			<p><code>int n = console.readInt();&nbsp; // Read an integer</code></p>
			<p><code>while (n &gt; 0 &amp;&amp; Math.sqrt(n) &lt; 10.0)<br>
&nbsp;&nbsp;&nbsp;&nbsp; n++;</code></p>
			<p><code>System.out.println(n);</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="158_div" style="visibility:hidden">
			<img id="158_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q158"> {0, ..., 99, 100}</li>
				<li><input type="radio" value="b" name="q158"> {100, ..., 999, 
				1000}</li>
				<li><input type="radio" value="c" name="q158"> {-1000, -999, 
				..., 0} union {100, ..., 999, 1000}</li>
				<li><input type="radio" value="d" name="q158"> {-1000, -999, 
				..., 0, ..., 999, 1000}</li>
				<li><input type="radio" value="e" name="q158"> {-1000, -999, 
				..., 0, ..., 99}</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">159.</p></td>
		<td colspan="2">An integer array a has 19 elements. What is the value of 
		the middle element after the following code is executed?<blockquote>
			<p><code>int i, j, n = 19;</code></p>
			<p><code>for (i = 0; i &lt; n; i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; a[i] = i+1;</code></p>
			<p><code>for (i = 0, j = n-1; i &lt;= j; i++, j--)<br>
&nbsp;&nbsp;&nbsp;&nbsp; a[(i+j)/2] -= (a[i] + a[j]) / 2;</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="159_div" style="visibility:hidden">
			<img id="159_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q159"> 0</li>
				<li><input type="radio" value="b" name="q159"> 10</li>
				<li><input type="radio" value="c" name="q159"> -41</li>
				<li><input type="radio" value="d" name="q159"> -62</li>
				<li><input type="radio" value="e" name="q159"> -71</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">160.</p></td>
		<td colspan="2">Consider the following method:<blockquote>
			<p><code>public void mysteryMix(Integer a, Integer b)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; a = new Integer(2 * a.intValue());<br>
&nbsp;&nbsp;&nbsp;&nbsp; b = a;<br>
			} </code></p>
		</blockquote>
		<p>What is the output of the following code?</p>
		<blockquote>
			<p><code>Integer a = new Integer(1);<br>
			Integer b = new Integer(2);<br>
			mysteryMix(a, a);<br>
			mysteryMix(a, b);<br>
			System.out.println(a + " " + b); </code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="160_div" style="visibility:hidden">
			<img id="160_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q160"> <code>1 1</code></li>
				<li><input type="radio" value="b" name="q160"> <code>1 2</code></li>
				<li><input type="radio" value="c" name="q160"> <code>2 2</code></li>
				<li><input type="radio" value="d" name="q160"> <code>1 4</code></li>
				<li><input type="radio" value="e" name="q160"> <code>4 4</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">161.</p></td>
		<td colspan="2">The following interface <code>Index</code> describes the 
		location of a document:<blockquote>
			<p><code>public interface Index<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; String getKey();<br>
&nbsp;&nbsp;&nbsp;&nbsp; Document getAddress();<br>
			} </code></p>
		</blockquote>
		<p><code>Document</code> is a class that has a public method <code>
		getSize()</code>. An <code>ArrayList folder</code> contains <code>Index</code> 
		objects and describes a collection of documents. Which of the following 
		expressions refers to <code>size</code> of the <code>k</code>-th 
		document in <code>folder</code>?</p>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="161_div" style="visibility:hidden">
			<img id="161_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q161"> <code>
				folder[k-1].getAddress().getSize()</code></li>
				<li><input type="radio" value="b" name="q161"> <code>(Index) 
				folder.get(k-1).getAddress().getSize()</code></li>
				<li><input type="radio" value="c" name="q161"> <code>((Index) 
				folder.get(k-1)).getAddress().getSize()</code></li>
				<li><input type="radio" value="d" name="q161"> <code>((Document) 
				(folder[k-1].getAddress())).getSize()</code></li>
				<li><input type="radio" value="e" name="q161"> <code>((Document) 
				(folder.get(k-1).getAddress())).getSize()</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">162.</p></td>
		<td colspan="2">
		<p>Which of the following could safely appear and make sense in place of 
		&lt; <i>condition</i> &gt; in some suitable context?</p>
		<blockquote>
			<blockquote>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; if ( &lt; <i>condition</i> &gt; )<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg = new message("o");</code></p>
		</blockquote>
			<p>I.&nbsp;&nbsp;&nbsp;&nbsp; <code>msg == null || 
			msg.getStatus().equals("x")<br>
			<br></code>II.&nbsp;&nbsp;&nbsp;<code>msg.getStatus().equals("x") || 
			msg == null<br>
			<br></code>III.&nbsp;&nbsp; <code>"x".equals(msg.getStatus()) || msg 
			== null</code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="162_div" style="visibility:hidden">
			<img id="162_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q162"> I only</li>
				<li><input type="radio" value="b" name="q162"> II only</li>
				<li><input type="radio" value="c" name="q162"> I and II</li>
				<li><input type="radio" value="d" name="q162"> II and III</li>
				<li><input type="radio" value="e" name="q162"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="53">
		&nbsp;</td>
		<td colspan="2"><b>Questions 163-167 use the following interface and classes 
		used in a picture drawing application:</b><blockquote>
			<p><code>public interface Drawable<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; void draw(Graphics g);<br>
			}</code></p>
		</blockquote>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public class Line implements 
		Drawable<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		private int xBeg, yBeg, xEnd, yEnd;</code></p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
		Line(int x0, int y0, int x1, int y1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		xBeg = x0; yBeg = y0; xEnd = x1; yEnd = y1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
		void draw(Graphics g)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		g.drawLine(xBeg, yBeg, xEnd, yEnd);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp;
			}</code></p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public class Picture implements 
		Drawable<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private List pictures;</code></p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
		Picture()<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		pictures = new LinkedList();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
		void add(Drawable obj)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		pictures.add(obj);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
		void draw(Graphics g)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		Iterator it = pictures.iterator();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		while (it.hasNext())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		((Drawable) it.next()).draw(g);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
		</td>
	</tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">163.</p></td>
		<td colspan="2">Which of the following code segments compiles with no 
		errors?</td>
	</tr>
	<tr>
		<td width="52"><div id="163_div" style="visibility:hidden">
			<img id="163_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q163"> <code>Drawable 
				picture = new Picture(new Line(0, 0, 100, 100));</code><br>
&nbsp;</li>
				<li><input type="radio" value="b" name="q163"> <code>Drawable 
				picture = new Picture();</code><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>picture.add(new Line(0, 0, 100, 100));</code><br>
&nbsp;</li>
				<li><input type="radio" value="c" name="q163"> P<code>icture 
				picture1 = new Picture();</code><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>Picture picture2 = new Picture(picture1);</code><br>
&nbsp;</li>
				<li><input type="radio" value="d" name="q163"> <code>Picture 
				picture = new Picture();</code><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>picture.pictures.add(new Line(0, 0, 100, 
				100));</code><br>
&nbsp;</li>
				<li><input type="radio" value="e" name="q163"> <code>Drawable 
				picture = new Picture();</code><br>
&nbsp;&nbsp;&nbsp;&nbsp; <code>((Picture) picture).add(new Picture());</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">164.</p></td>
		<td colspan="2">Consider the following code segment:<blockquote>
			<p><code>Picture picture = new Picture();<br>
			picture.add(new Line(100, 100, 200, 50));<br>
			picture.add(new Line(200, 50, 300, 100));<br>
			Picture box = new Picture();<br>
			box.add(new Line(100, 100, 100, 300));<br>
			box.add(new Line(100, 300, 300, 300));<br>
			box.add(new Line(300, 300, 300, 100));<br>
			box.add(new Line(300, 100, 100, 100));</code></p>
		</blockquote>
		<p>Which of the following pictures will be displayed when <code>
		pictures.draw(g)</code> is called from an appropriate <code>paint</code> 
		method within the graphics context <code>g</code>?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="164_div" style="visibility: visible;">
			<img id="164_img" src="./AP JAVA Practice Exam_files/wrong.gif"></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<table border="0" width="545" id="table14">
					<tbody><tr>
						<td width="176" valign="top">a.<input type="radio" value="a" name="q164" checked=""><code>&nbsp;&nbsp; 
						Empty picture</code></td>
						<td width="195" valign="top">b.<input type="radio" value="b" name="q164"><code>&nbsp;&nbsp; 
						</code>
						<p align="center"><code>
						<img border="0" src="./AP JAVA Practice Exam_files/boxB.GIF" width="121" height="121"></code></p></td>
						<td width="150" valign="top">
						<p align="left">c.<input type="radio" value="c" name="q164"><code>&nbsp;&nbsp; 
						</code>
						</p><p align="center"><code>
						<img border="0" src="./AP JAVA Practice Exam_files/boxC.GIF" width="121" height="121"></code></p></td>
					</tr>
					<tr>
						<td width="176" valign="top">d.<input type="radio" value="d" name="q164"><code>&nbsp;&nbsp; 
						</code>
						<p align="center">
						<img border="0" src="./AP JAVA Practice Exam_files/boxD.GIF" width="121" height="121"></p>
						<p align="center">&nbsp;</p></td>
						<td width="195" valign="top">e.<input type="radio" value="e" name="q164"><code>&nbsp;&nbsp; 
						</code>
						<p align="center">
						<img border="0" src="./AP JAVA Practice Exam_files/boxE.GIF" width="121" height="121"></p></td>
						<td width="150" valign="top">&nbsp;</td>
					</tr>
				</tbody></table>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">165.</p></td>
		<td colspan="2">Suppose the class <code>Box</code> extends <code>Picture</code> 
		and has the following constructor:<blockquote>
			<p><code>public Box(int x, int y, int width, int height)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; super();<br>
&nbsp;&nbsp;&nbsp;&nbsp; add(new Line(x, y, x + width, y));<br>
			&nbsp;&nbsp;&nbsp;&nbsp; add(new Line(x + width, y, x + width, y + 
			height));<br>
			&nbsp;&nbsp;&nbsp;&nbsp; add(new Line(x + width, y + height, x, y + 
			height));<br>
			&nbsp;&nbsp;&nbsp;&nbsp; add(new Line(y, y + height, x, y));<br>
			} </code></p>
		</blockquote>
		<p>Suppose the statements </p>
		<blockquote>
			<p><code>Box box = new Box(100, 100, 300, 200);<br>
			box.draw(g); </code></p>
		</blockquote>
		<p>—when executed from an appropriate <code>paint</code> method within the 
		graphics context g—draw a box with the upper left corner at (100, 
		100), width 300 and height 200. Besides the above constructor, which 
		methods must be supplied in the Box class for this to happen?</p>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="165_div" style="visibility:hidden">
			<img id="165_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q165"> No methods are 
				needed</li>
				<li><input type="radio" value="b" name="q165"> <code>
				add(Drawable)</code></li>
				<li><input type="radio" value="c" name="q165"> <code>
				draw(Graphics)</code></li>
				<li><input type="radio" value="d" name="q165"> <code>
				add(Drawable) and add(Graphics)</code></li>
				<li><input type="radio" value="e" name="q165"> <code>
				add(Drawable), add(Line), and draw(Graphics)</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">166.</p></td>
		<td colspan="2">
		<p>Suppose the following statements have been added to the Line class:</p>
		<blockquote>
			<p><code>public String getName() { return "Line"; }</code></p>
			<p><code>public String toString()<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; return "[" + getName() +<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /*&nbsp;&nbsp; 
			" " + xBeg + " " + yBeg +<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			" " + xEnd + " " + yEnd +&nbsp; */<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "]";<br>
			} </code></p>
		</blockquote>
		<p>Also, the following methods have been added to the <code>Picture</code> 
		class: </p>
		<blockquote>
			<p><code>public String getName() { return "Picture"; }</code></p>
			<p><code>public String toString()<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; String str = "[" + getName() + " ";<br>
&nbsp;&nbsp;&nbsp;&nbsp; Iterator it = pictures.iterator();<br>
&nbsp;&nbsp;&nbsp;&nbsp; while (it.hasNext())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; str += it.next();<br>
&nbsp;&nbsp;&nbsp;&nbsp; return str + "]";<br>
			} </code></p>
		</blockquote>
		<p>Finally, the following method has been added to the <code>Box</code> 
		class mentioned in the previous question: </p>
		<blockquote>
			<p><code>public String getName() { return "Box"; } </code></p>
		</blockquote>
		<p>What is the output of the following code? </p>
		<blockquote>
			<p><code>Box box = new Box(100, 100, 100, 100);<br>box.add(new 
			Line(100, 100, 200, 200));<br>
			box.add(new Line(100, 200, 200, 100));<br>
			Picture picture = new Picture();<br>
			picture.add(box);<br>
			System.out.println(picture);</code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="166_div" style="visibility:hidden">
			<img id="166_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q166"> <code>[Picture 
				[Line] [Line] [Line] [Line] [Line] [Line]</code></li>
				<li><input type="radio" value="b" name="q166"> <code>[Picture 
				[Box&nbsp; [Line] [Line] [Line] [Line] ] ]</code></li>
				<li><input type="radio" value="c" name="q166"> <code>[Picture 
				[Box&nbsp; [Line] [Line] [Line] [Line] [Line] [Line] ] ]</code></li>
				<li><input type="radio" value="d" name="q166"> <code>[Picture 
				[Picture [Line] [Line] [Line] [Line] [Line] [Line] ]</code></li>
				<li><input type="radio" value="e" name="q166"> <code>[Picture 
				[Picture [Line] [Line] [Line] [Line] [Line] [Line] ] ]</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">167.</p></td>
		<td colspan="2">The class <code>DrawingBoard</code> extends <code>JFrame</code> 
		and represents a window on the screen:<blockquote>
			<p><code>public class DrawingBoard extends javax,Swing,JFrame<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; private Drawable picture;</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public DrawingBoard(Drawable 
			picture)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp;&nbsp; this.picture = picture;&nbsp;&nbsp;&nbsp;&nbsp; 
			}</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp; public void paint(Graphics g) { 
			picture.draw(g); }<br>
			} </code></p>
		</blockquote>
		<p>Consider the following code segment:</p>
		<blockquote>
			<p><code>Picture picture = new Picture();<br>
			picture.add(picture);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			// Line ***<br>
			DrawingBoard w = new DrawingBoard(picture);<br>
			w.setBounds(50, 50, 400, 400);<br>
			w.show(); </code></p>
		</blockquote>
		<p>What happens when we try to compile and execute this code?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="167_div" style="visibility:hidden">
			<img id="167_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q167"> Syntax error on 
				Line ***</li>
				<li><input type="radio" value="b" name="q167"> <code>
				ClassCastException</code></li>
				<li><input type="radio" value="c" name="q167"> The code compiles 
				and runs, but goes into an infinite loop</li>
				<li><input type="radio" value="d" name="q167"> <code>
				StackOverflowError</code></li>
				<li><input type="radio" value="e" name="q167"> The code compiles 
				and runs; a blank window is displayed</li>
				</ol>
		</td></tr>
	<tr>
		<td width="53">
		&nbsp;</td>
		<td colspan="2"><b>Questions 168-169 use the following class:</b><p><code>&nbsp;&nbsp;&nbsp;&nbsp; public class 
		PetDog implements Comparable<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		private String myName, myBreed;</code></p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
		petDog(String name, String breed)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { myName = name; myBreed 
		= breed; }</code></p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
		String getName() { return myName; }<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public String getBreed() 
		{ return myBreed; }</code></p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
		boolean equals(Object other)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { return other != null &amp;&amp; 
		getName.equals(other.toString()); }</code></p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
		int compareTo(Object other)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		return getName().compareTo(other.toSstring());<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
		int hashCode() { return getName().hashCode(); }</code></p>
		<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
		String toString()<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { return getName() + "--" 
		+ + getBreed(); }<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
		<p>Suppose the following variables are declared and initialized:</p>
		<blockquote>
			<p><code>PetDog honey = new PetDog("Honey", "Cocker Spaniel");<br>
			PetDog lucie = new PetDog("Lucie", "Springer Spaniel");<br>
			PetDog murray = new PetDog("Murray", "Golden 
			Retriever");</code></p>
			</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">168. <font size="1">(AB)</font></p></td>
		<td colspan="2">The&nbsp; <font size="1">(AB)</font><blockquote>
			<p><code>a Cocker Spaniel </code></p>
			<blockquote>
				<p><code>&nbsp;&nbsp;&nbsp;&nbsp; Map map = new HashMap();<br>
&nbsp;&nbsp;&nbsp;&nbsp; map.put(honey.getName(), honey);<br>
&nbsp;&nbsp;&nbsp;&nbsp; map.put(lucie.getName(), lucie);<br>
&nbsp;&nbsp;&nbsp;&nbsp; map.put(murray.getName(), murray);</code></p>
				<p><code>&nbsp;&nbsp;&nbsp;&nbsp; 
				System.out.println(honey.getNamer() + " is a " +<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt; <i>missing expression</i> 
				&gt; );</code></p>
			</blockquote>
		</blockquote>
		<p>Which of the following can replace <code>&lt; <i>missing expression</i> 
		&gt;?</code>&nbsp; </p>
		<blockquote>
			<p>I.&nbsp;&nbsp;&nbsp;&nbsp; <code>PetDog(map.get(honey.getName())<br>
			<br></code>II.&nbsp;&nbsp;&nbsp;<code>((PetDog)map.get(honey)).getBreed()<br>
			<br></code>III.&nbsp;&nbsp; <code>((PetDog)map.get(honey.getName())).getBreed()</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="168_div" style="visibility:hidden">
			<img id="168_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q168"> I only</li>
				<li><input type="radio" value="b" name="q168"> II only</li>
				<li><input type="radio" value="c" name="q168"> I and II</li>
				<li><input type="radio" value="d" name="q168"> II and III</li>
				<li><input type="radio" value="e" name="q168"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">169. <font size="1">(AB)</font></p></td>
		<td colspan="2">Which of the following code segments will compile with 
		no errors and produce an alphabetical list of all three pets:<p><code>
		Honey -- Cocker Spaniel<br>
		Lucie -- Springer Spaniel <br>
		Murray -- Golden Retriever </code></p>
		<blockquote>
			<p>I.&nbsp;&nbsp;&nbsp;&nbsp; <code>&nbsp;Set set = new TreeSet();<br>
&nbsp;&nbsp;&nbsp; set.add(honey);<br>
&nbsp;&nbsp;&nbsp; set.add(lucie);<br>
&nbsp;&nbsp;&nbsp; set.add(murray);<br>
&nbsp;&nbsp;&nbsp; Iterator iter = set.iterator();<br>
&nbsp;&nbsp;&nbsp; while (iter.hasNext())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(iter.next());<br>
			<br></code>II.&nbsp;&nbsp;&nbsp;<code> Map map = new TreeMap();<br>
&nbsp;&nbsp;&nbsp; map.put(homey.getName(), honey);<br>
&nbsp;&nbsp;&nbsp; map.put(lucie.getName(), lucie);<br>
&nbsp;&nbsp;&nbsp; map.put(murray.getName(), murray);<br>
&nbsp;&nbsp;&nbsp; Iterator iter = map.values().iterator();<br>
&nbsp;&nbsp;&nbsp; while (iter.hasNext())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(iter.next());<br>
			<br></code>III.&nbsp;&nbsp; <code>Map map = new HashMap();<br>
&nbsp;&nbsp;&nbsp; map.put(homey.getName(), honey);<br>
&nbsp;&nbsp;&nbsp; map.put(lucie.getName(), lucie);<br>
&nbsp;&nbsp;&nbsp; map.put(murray.getName(), murray);<br>
&nbsp;&nbsp;&nbsp; Iterator iter = map.keySet().iterator();<br>
&nbsp;&nbsp;&nbsp; while (iter.hasNext())<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(map.get(iter.next()));</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="169_div" style="visibility:hidden">
			<img id="169_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q169"> I only</li>
				<li><input type="radio" value="b" name="q169"> II only</li>
				<li><input type="radio" value="c" name="q169"> I and II</li>
				<li><input type="radio" value="d" name="q169"> II and III</li>
				<li><input type="radio" value="e" name="q169"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">170. <font size="1">(AB)</font></p></td>
		<td colspan="2"><code>head1</code> points to the first node of a linked 
		list that has three nodes with <code>Integer</code> values <code>0</code>,
		<code>1</code>, <code>2</code>; <code>head2</code> points to the first 
		node of a list that has three nodes with <code>Integer</code> values
		<code>3</code>, <code>4</code>, <code>5</code>. What is the output from 
		the following code?<blockquote>
			<p><code>ListNode node;<br>
			if (head1 != null &amp;&amp; head2 != null)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; node = head1.getNext();<br>
&nbsp;&nbsp;&nbsp;&nbsp; head1.setNext(head2.getNext());<br>
&nbsp;&nbsp;&nbsp;&nbsp; head2.setNext(node);<br>
			}</code></p>
			<p><code>for (node = head1; node != null; node = node.getNext())<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(node.getValue() + " ");<br>
			for (node = head2; node != null; node = node.getNext())<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(node.getValue() + " ");</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="170_div" style="visibility:hidden">
			<img id="170_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q170"> <code>0 1 2 3 4 5</code></li>
				<li><input type="radio" value="b" name="q170"> <code>0 4 5 3 1 2</code></li>
				<li><input type="radio" value="c" name="q170"> <code>3 4 5 0 1 2</code></li>
				<li><input type="radio" value="d" name="q170"> <code>3 0 2 0 4 5</code></li>
				<li><input type="radio" value="e" name="q170"> <code>3 0 1 2 4 5</code></li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">171. <font size="1">(AB)</font></p></td>
		<td colspan="2">What is the contents of the stack <code>s1</code> (its 
		elements listed starting from the top) after the following code is 
		executed?<blockquote>
			<p><code>Stack stk = new ArrayStack();<br>
			Stack stk1 = new ArrayStack();<br>
			Stack stk2 = new ArrayStack();</code></p>
			<p><code>int n;<br>
			Integer obj;<br>
			for (n = 1; n &lt;= 6; n++)<br>
&nbsp;&nbsp;&nbsp;&nbsp; stk.push(new Integer(n));</code></p>
			<p><code>while (!stk.isEmpty())<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; obj = (Integer stk.pop());<br>
&nbsp;&nbsp;&nbsp;&nbsp; n = obj.intValue();<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (N % 2 != 0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stk1.push(obj);<br>
&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stk2.push(obj);<br>
			}<br>
			while (!stk1.isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp; stk.push(stk1.pop());<br>
			while (!stk2.isEmpty())<br>
&nbsp;&nbsp;&nbsp;&nbsp; stk.push(stk2.pop());</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="171_div" style="visibility:hidden">
			<img id="171_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q171"> 1, 2, 3, 4, 5, 6</li>
				<li><input type="radio" value="b" name="q171"> 6, 5, 4, 3, 2, 1</li>
				<li><input type="radio" value="c" name="q171"> 1, 3, 5, 2, 4, 6</li>
				<li><input type="radio" value="d" name="q171"> 2, 4, 6, 1, 3, 5</li>
				<li><input type="radio" value="e" name="q171"> None of the above</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">172. <font size="1">(AB)</font></p></td>
		<td colspan="2">Consider the following method:<blockquote>
			<p><code>public boolean someProperty(TreeNode root)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; return root != null &amp;&amp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (root.getLeft() 
			!= null &amp;&amp; root.getRight() != null ||<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			someProperty(root.getLeft()) ||<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			someProperty(root.getRight()));<br>
			}</code></p>
		</blockquote>
		<p>This method returns <code>true</code> if and only if the tree pointed 
		to by <code>root</code></p></td>
	</tr>
	<tr>
		<td width="52"><div id="172_div" style="visibility:hidden">
			<img id="172_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q172"> is not empty.</li>
				<li><input type="radio" value="b" name="q172"> is not empty and 
				the root is not a leaf.</li>
				<li><input type="radio" value="c" name="q172"> is not empty and 
				the root is either a leaf or has two children.</li>
				<li><input type="radio" value="d" name="q172"> has at least one 
				node with two children.</li>
				<li><input type="radio" value="e" name="q172"> is a full tree.</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">173. <font size="1">(AB)</font></p></td>
		<td colspan="2">The method <code>max(TreeNode root)</code> assumes a 
		precondition that <code>root</code> points to a non-empty binary search 
		tree containing <code>Comparable</code> objects. <code>max</code> 
		returns the value from the tree's largest node. Which of the following 
		three versions of <code>max</code> return the correct answer when the 
		precondition is met?<blockquote>
			<p>I.&nbsp;&nbsp;&nbsp;&nbsp; <code>&nbsp;public Object max(TreeNOde 
			root)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (root.getRight() != 
			null)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			root = root.getRight();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return root.getValue();<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			<br></code>II.&nbsp;&nbsp;&nbsp;<code> public Object max(TreeNOde 
			root)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Object maxValue = 
			root.getValue();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (root.getRight() != 
			null)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			Object temp = max(root.getRight());<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			if (((Comparable)temp).compareTo(maxValue) &gt; 0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			maxValue = temp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return maxValue;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			<br></code>III.&nbsp;&nbsp; <code>public Object max(TreeNOde root)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Object maxValue = 
			root.getValue();</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (root.getLeft() 
			!= null &amp;&amp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			((Comparable)max(root.getLeft())).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			compareTo(maxValue) &gt; 0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			maxValue = max(root.getLeft());</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (root.getRight() 
			!= null &amp;&amp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			((Comparable)max(root.getRight())).<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			compareTo(maxValue) &gt; 0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			maxValue = max(root.getRight());</code></p>
			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			return maxValue;<br>
&nbsp;&nbsp;&nbsp;&nbsp; }</code></p>
		</blockquote>
		</td>
	</tr>
	<tr>
		<td width="52"><div id="173_div" style="visibility:hidden">
			<img id="173_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q173"> I only</li>
				<li><input type="radio" value="b" name="q173"> II only</li>
				<li><input type="radio" value="c" name="q173"> I and II</li>
				<li><input type="radio" value="d" name="q173"> II and III</li>
				<li><input type="radio" value="e" name="q173"> I, II, and III</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">174.</p></td>
		<td colspan="2">Given<blockquote>
			<p><code>int[] a = {1, 3, 5, 7, 9, 11, 13}; </code></p>
		</blockquote>
		<p>what are the values in <code>a</code> after <code>disarray(int[] a, 
		int n)</code> is called? The method <code>disarray</code> is defined as 
		follows:</p>
		<blockquote>
			<p><code>public void disarray(int[] a, int n)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (n &gt; 1)<br>
&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; disarray(a, n-1);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a[n-1] += a[n-2];<br>
&nbsp;&nbsp;&nbsp;&nbsp; }<br>
			} </code></p>
		</blockquote></td>
	</tr>
	<tr>
		<td width="52"><div id="174_div" style="visibility:hidden">
			<img id="174_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q174"> 1, 4, 9, 16, 25, 
				36, 49</li>
				<li><input type="radio" value="b" name="q174"> 1, 4, 8, 12, 16, 
				20, 24</li>
				<li><input type="radio" value="c" name="q174"> 1, 8, 12, 16, 20, 
				24, 13</li>
				<li><input type="radio" value="d" name="q174"> 1, 24, 20, 16, 
				12, 8, 4</li>
				<li><input type="radio" value="e" name="q174"> None of the above</li>
				</ol>
		</td></tr>
	<tr>
		<td width="52" valign="top">
		<p align="left">175.</p></td>
		<td colspan="2">The method <code>mixup</code> is defined as follows:<blockquote>
			<p><code>String mixup(String word)<br>
			{<br>
&nbsp;&nbsp;&nbsp;&nbsp; if (word.length() == 1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return "";<br>
&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 
			mixup(word.substring(0, word.length() - 1))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			+ word.charAt(word.length() - 1);<br>
			} </code></p>
		</blockquote>
		<p>What is the value of the string returned by <code>mixup("IDEAL")</code>?</p></td>
	</tr>
	<tr>
		<td width="52"><div id="175_div" style="visibility:hidden">
			<img id="175_img" src=""></div></td>
		<td width="85" align="center">
			&nbsp;</td>
		<td width="89%" valign="middle">
				<ol type="a">
				<li><input type="radio" value="a" name="q175"> IDEAL</li>
				<li><input type="radio" value="b" name="q175"> IDEA</li>
				<li><input type="radio" value="c" name="q175"> LEAD</li>
				<li><input type="radio" value="d" name="q175"> LEDA</li>
				<li><input type="radio" value="e" name="q175"> DEAL</li>
				</ol>
		</td></tr>
	<tr>
		<td colspan="3">
			<p align="center">
	</p></td></tr><tr>
		<td colspan="3">
			<div id="results" align="center"><h1>You correctly answered 5 questions (62.5%)</h1></div></td>
		
</tr></tbody></table>
			<input type="button" onclick="score();" value="Score Test">

</form>
</div>



<div id="__dic_menulayer__" style="z-index: 99999998; padding: 0px; position: absolute; overflow: hidden; white-space: nowrap; left: 192px; top: 2471px; width: 82px; display: none;"><a id="m_dic" href="javascript:void(0)" title="&#49440;&#53469;&#54620; &#45800;&#50612;&#45208; &#47928;&#51109;&#51004;&#47196; &#49324;&#51204; &#44160;&#49353;&#51060;&#45208; &#48264;&#50669;&#51012; &#54633;&#45768;&#45796;. (Google &#48264;&#50669;)" style="display: none;"><img src="chrome-extension://oiplkfaidhjklglajdpfehoagkmlcakh/images/dic.png" border="0"></a><img src="chrome-extension://oiplkfaidhjklglajdpfehoagkmlcakh/images/blank.png" id="m_dic2_b" style="width: 2px; display: none;"><a id="m_dic2" href="javascript:void(0)" title="&#49324;&#51204; &#44160;&#49353; &#46608;&#45716; &#48264;&#50669; &#51077;&#47141;&#52285;&#51012; &#50685;&#45768;&#45796;. (Google &#48264;&#50669;)" style="display: none;"><img src="chrome-extension://oiplkfaidhjklglajdpfehoagkmlcakh/images/dic2.png" border="0"></a><img src="chrome-extension://oiplkfaidhjklglajdpfehoagkmlcakh/images/blank.png" id="m_search_b" style="width: 2px;"><a id="m_search" href="javascript:void(0)" title="&#50937; &#44160;&#49353;&#51012; &#54633;&#45768;&#45796;."><img src="chrome-extension://oiplkfaidhjklglajdpfehoagkmlcakh/images/search.png" border="0"></a><img src="chrome-extension://oiplkfaidhjklglajdpfehoagkmlcakh/images/blank.png" id="m_search2_b" style="width: 2px; display: none;"><a id="m_search2" href="javascript:void(0)" title="&#50937; &#44160;&#49353; &#51077;&#47141;&#52285;&#51012; &#50685;&#45768;&#45796;." style="display: none;"><img src="chrome-extension://oiplkfaidhjklglajdpfehoagkmlcakh/images/search2.png" border="0"></a><img src="chrome-extension://oiplkfaidhjklglajdpfehoagkmlcakh/images/blank.png" id="m_url_b" style="width: 2px; display: none;"><a id="m_url" href="javascript:void(0)" title="&#47553;&#53356;&#51452;&#49548; &#50676;&#44592; &quot;s.substring&quot;" style="display: none;"><img src="chrome-extension://oiplkfaidhjklglajdpfehoagkmlcakh/images/internet.png" border="0"></a><img src="chrome-extension://oiplkfaidhjklglajdpfehoagkmlcakh/images/blank.png" id="m_conf_b" style="width: 2px; display: none;"><a id="m_conf" href="javascript:void(0)" title="&#50741;&#49496;" style="display: none;"><img src="chrome-extension://oiplkfaidhjklglajdpfehoagkmlcakh/images/configure.png" border="0"></a><img src="chrome-extension://oiplkfaidhjklglajdpfehoagkmlcakh/images/blank.png" id="m_close_b" style="width: 2px; display: none;"><a id="m_close" href="javascript:void(0)" title="&#46020;&#44396;&#47700;&#45684;&#47484; &#51060; &#54168;&#51060;&#51648;&#50640;&#49436; &#49324;&#50857;&#54616;&#51648; &#50506;&#49845;&#45768;&#45796;." style="display: none;"><img src="chrome-extension://oiplkfaidhjklglajdpfehoagkmlcakh/images/close.png" border="0"></a><img src="chrome-extension://oiplkfaidhjklglajdpfehoagkmlcakh/images/blank.png" id="m_expand_b" style="width: 2px;"><a id="m_expand" href="javascript:void(0)" title="&#47700;&#45684; &#54869;&#51109;&#54616;&#44592;"><img src="chrome-extension://oiplkfaidhjklglajdpfehoagkmlcakh/images/forward.png" border="0"></a></div></body><style>#__dic_layer__ img{ width:auto;height:auto;margin:0px;padding:0px;background-color:transparent;border-color:transparent;border-width:0px;text-shadow:none; display: inline; opacity:1;}#__dic_menulayer__ img{ width:auto;height:auto;margin:0px;padding:0px;background-color:transparent;border-color:transparent;border-width:0px;text-shadow:none; display: inline; opacity:1;}#__dic_waitlayer__ img{ width:auto;height:auto;margin:0px;padding:0px;background-color:transparent;border-color:transparent;border-width:0px;text-shadow:none; display: inline; opacity:1;}#__dic_layer__ a{ font-size:10pt;color:black; font-family:Arial, Helvetica, sans-serif; text-align: left; letter-spacing:normal;line-height:normal;font-weight: normal;text-shadow:none;display: inline; background-color:transparent}#__dic_layer__ a:link{ color:#0860A8; }#__dic_layer__ a:visited{ color:#0860A8; }#__dic_layer__ a:active{ color:#0860A8;}#__dic_layer__ a:hover{ color:#0860A8; text-decoration:underline; }#__dic_layer__ div{ font-size:10pt;color:black; font-family:Arial, Helvetica, sans-serif; text-align: left; letter-spacing:normal;line-height:normal;font-weight: normal;text-shadow:none;width:auto;height:auto; }#__dic_menulayer__ a{ display: inline; background-color:transparent}#__dic_layer__ tr{ width:auto;height:auto;margin:0px;padding:0px;background-color:transparent;border-color:transparent;border-width:0px;text-shadow:none;font-size:10pt;color:black; font-family:Arial, Helvetica, sans-serif; text-align: left; letter-spacing:normal;line-height:normal;font-weight: normal;text-shadow:none; }#__dic_layer__ td{ width:auto;height:auto;margin:0px;padding:0px;background-color:transparent;border-color:transparent;border-width:0px;text-shadow:none;font-size:10pt;color:black; font-family:Arial, Helvetica, sans-serif; text-align: left; letter-spacing:normal;line-height:normal;font-weight: normal;text-shadow:none; }#__table_source_open__ { width:auto;height:auto;margin:0px;padding:0px;background-color:transparent;border-color:transparent;border-width:0px;text-shadow:none; }#__dic_source_data__ div{ width:99%; }#__dic_layer__ p{ font-size:10pt;color:black; font-family:Arial, Helvetica, sans-serif; text-align: left; letter-spacing:normal;line-height:normal;font-weight: normal;text-shadow:none; }#__dic_layer__ b{ font-size:10pt;color:black; font-family:Arial, Helvetica, sans-serif; text-align: left; letter-spacing:normal;line-height:normal;font-weight: normal;text-shadow:none; }#__dic_layer__ ul{ font-size:10pt;color:black; font-family:Arial, Helvetica, sans-serif; text-align: left; letter-spacing:normal;line-height:normal;font-weight: normal;text-shadow:none;width:auto;height:auto; padding:0px 0px 0px 4px; margin:0px; list-style-type: disc;}#__dic_layer__ li{ font-size:10pt;color:black; font-family:Arial, Helvetica, sans-serif; text-align: left; letter-spacing:normal;line-height:normal;font-weight: normal;text-shadow:none;width:auto;height:auto; padding:0px 0px 0xp 8px; margin:0px; list-style-type: decimal; list-style-position: outside;}#__dic_layer__ span{font-size:10pt;color:black; font-family:Arial, Helvetica, sans-serif; text-align: left; letter-spacing:normal;line-height:normal;font-weight: normal;text-shadow:none; }#__dic_layer__ option{font-size:10pt;color:black; font-family:Arial, Helvetica, sans-serif; text-align: left; letter-spacing:normal;line-height:normal;font-weight: normal;text-shadow:none; }#__dic_layer__ select{font-size:10pt;color:black; font-family:Arial, Helvetica, sans-serif; text-align: left; letter-spacing:normal;line-height:normal;font-weight: normal;text-shadow:none;background-color:white;width:145px;height: 20px;display:inline-block;border:1px solid transparent;padding: 0px;margin:2px 0px 2px 0px;}</style></html>